#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RC

#include "Basic.hpp"

#include "RC_classes.hpp"
#include "RC_parameters.hpp"


namespace SDK
{

// Function RC.RCUiWidget.OnHideFinished
// (Event, Public, BlueprintEvent)

void URCUiWidget::OnHideFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget", "OnHideFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCUiWidget.OnHideStarted
// (Event, Public, BlueprintEvent)

void URCUiWidget::OnHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget", "OnHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCUiWidget.OnScreenHide
// (Event, Public, BlueprintEvent)

void URCUiWidget::OnScreenHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget", "OnScreenHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCUiWidget.OnScreenShow
// (Event, Public, BlueprintEvent)

void URCUiWidget::OnScreenShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget", "OnScreenShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCUiWidget.OnShowFinished
// (Event, Public, BlueprintEvent)

void URCUiWidget::OnShowFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget", "OnShowFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCUiWidget.OnShowStarted
// (Event, Public, BlueprintEvent)

void URCUiWidget::OnShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget", "OnShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCUiWidget.PlayWidgetAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InOneShotAnimation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 InLoopAnimation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UWidgetAnimation*>         InOneShotAnimationArray                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UWidgetAnimation*>         InLoopAnimationArray                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCUiWidget::PlayWidgetAnimation(class UWidgetAnimation* InOneShotAnimation, class UWidgetAnimation* InLoopAnimation, const TArray<class UWidgetAnimation*>& InOneShotAnimationArray, const TArray<class UWidgetAnimation*>& InLoopAnimationArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget", "PlayWidgetAnimation");

	Params::RCUiWidget_PlayWidgetAnimation Parms{};

	Parms.InOneShotAnimation = InOneShotAnimation;
	Parms.InLoopAnimation = InLoopAnimation;
	Parms.InOneShotAnimationArray = std::move(InOneShotAnimationArray);
	Parms.InLoopAnimationArray = std::move(InLoopAnimationArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidget.StopWidgetAnimation
// (Final, Native, Public, BlueprintCallable)

void URCUiWidget::StopWidgetAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget", "StopWidgetAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetBase.IsWidgetPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiWidgetBase::IsWidgetPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetBase", "IsWidgetPause");

	Params::RCUiWidgetBase_IsWidgetPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiWidgetBase.LoadCheck
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiWidgetBase::LoadCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetBase", "LoadCheck");

	Params::RCUiWidgetBase_LoadCheck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiWidgetBase.MoveToCenter
// (Native, Public, BlueprintCallable)

void URCUiWidgetBase::MoveToCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetBase", "MoveToCenter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetBase.RegistTutorial
// (Event, Public, BlueprintEvent)

void URCUiWidgetBase::RegistTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetBase", "RegistTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCUiWidgetBase.ReleaseWidget
// (Native, Public, BlueprintCallable)

void URCUiWidgetBase::ReleaseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetBase", "ReleaseWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetBase.SetPosition
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        In2DPosition                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiWidgetBase::SetPosition(const struct FVector2D& In2DPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetBase", "SetPosition");

	Params::RCUiWidgetBase_SetPosition Parms{};

	Parms.In2DPosition = std::move(In2DPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePGLayoutWidget.GetPGLayoutLocationAndSize
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector2D                        Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePGLayoutWidget::GetPGLayoutLocationAndSize(struct FVector2D* Location, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePGLayoutWidget", "GetPGLayoutLocationAndSize");

	Params::RCNzUiFinalePGLayoutWidget_GetPGLayoutLocationAndSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function RC.RCNzUiFinalePGLayoutWidget.InitializeButtonGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         keyL                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCInputKeyType                         keyR                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinalePGLayoutWidget::InitializeButtonGuide(ERCInputKeyType keyL, ERCInputKeyType keyR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePGLayoutWidget", "InitializeButtonGuide");

	Params::RCNzUiFinalePGLayoutWidget_InitializeButtonGuide Parms{};

	Parms.keyL = keyL;
	Parms.keyR = keyR;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePGLayoutWidget.InitializePGLayoutWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<EPageGuideType>                  PageList                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCNzUiFinalePGLayoutWidget::InitializePGLayoutWidget(const TArray<EPageGuideType>& PageList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePGLayoutWidget", "InitializePGLayoutWidget");

	Params::RCNzUiFinalePGLayoutWidget_InitializePGLayoutWidget Parms{};

	Parms.PageList = std::move(PageList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePGLayoutWidget.MovePage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   targetIdx                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePGLayoutWidget::MovePage(const int32 targetIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePGLayoutWidget", "MovePage");

	Params::RCNzUiFinalePGLayoutWidget_MovePage Parms{};

	Parms.targetIdx = targetIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePGLayoutWidget.OnButtonGuideClick
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePGLayoutWidget::OnButtonGuideClick(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePGLayoutWidget", "OnButtonGuideClick");

	Params::RCNzUiFinalePGLayoutWidget_OnButtonGuideClick Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePGLayoutWidget.UpdatePageGuide
// (Final, Native, Public)
// Parameters:
// TArray<EPageGuideType>                  PageList                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCNzUiFinalePGLayoutWidget::UpdatePageGuide(const TArray<EPageGuideType>& PageList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePGLayoutWidget", "UpdatePageGuide");

	Params::RCNzUiFinalePGLayoutWidget_UpdatePageGuide Parms{};

	Parms.PageList = std::move(PageList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActor.GetActorName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCActor::GetActorName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActor", "GetActorName");

	Params::RCActor_GetActorName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActor.IsPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActor::IsPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActor", "IsPause");

	Params::RCActor_IsPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActor.IsPauseCancelFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActor::IsPauseCancelFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActor", "IsPauseCancelFlag");

	Params::RCActor_IsPauseCancelFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActor.IsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActor::IsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActor", "IsVisibility");

	Params::RCActor_IsVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActor.SetPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPause                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActor::SetPause(bool bInPause, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActor", "SetPause");

	Params::RCActor_SetPause Parms{};

	Parms.bInPause = bInPause;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActor.SetPauseCancelFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPauseCancel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActor::SetPauseCancelFlag(bool bInPauseCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActor", "SetPauseCancelFlag");

	Params::RCActor_SetPauseCancelFlag Parms{};

	Parms.bInPauseCancel = bInPauseCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActor.SetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActor::SetVisibility(bool bInVisible, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActor", "SetVisibility");

	Params::RCActor_SetVisibility Parms{};

	Parms.bInVisible = bInVisible;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCLevelSequenceActor.FinishedEvent
// (Final, Native, Protected)

void ARCLevelSequenceActor::FinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCLevelSequenceActor", "FinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAutoPlay.AutoPlay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Dist                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IgnoreZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCAutoPlayCompletionPred               Completion                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCAutoPlay*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCAutoPlay* URCAutoPlay::AutoPlay(const class UObject* WorldContextObject, class AActor* Target, class AActor* Dist, float Duration, bool IgnoreZ, ERCAutoPlayCompletionPred Completion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAutoPlay", "AutoPlay");

	Params::RCAutoPlay_AutoPlay Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Target = Target;
	Parms.Dist = Dist;
	Parms.Duration = Duration;
	Parms.IgnoreZ = IgnoreZ;
	Parms.Completion = Completion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexClearWidget.PlayIndexClearShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleIndexClearWidget::PlayIndexClearShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexClearWidget", "PlayIndexClearShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAutoPlayActor.AutoPlayActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Dist                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IgnoreZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCAutoPlayCompletionPred               Completion                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCAutoPlayActor*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCAutoPlayActor* ARCAutoPlayActor::AutoPlayActor(const class UObject* WorldContextObject, class AActor* Target, class AActor* Dist, float Duration, bool IgnoreZ, ERCAutoPlayCompletionPred Completion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAutoPlayActor", "AutoPlayActor");

	Params::RCAutoPlayActor_AutoPlayActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Target = Target;
	Parms.Dist = Dist;
	Parms.Duration = Duration;
	Parms.IgnoreZ = IgnoreZ;
	Parms.Completion = Completion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAutoPlayActor.AutoPlayActor2
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDistPos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InDistRot                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IgnoreZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCAutoPlayCompletionPred               Completion                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCAutoPlayActor*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCAutoPlayActor* ARCAutoPlayActor::AutoPlayActor2(const class UObject* WorldContextObject, class AActor* Target, const struct FVector& InDistPos, const struct FRotator& InDistRot, float Duration, bool IgnoreZ, ERCAutoPlayCompletionPred Completion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAutoPlayActor", "AutoPlayActor2");

	Params::RCAutoPlayActor_AutoPlayActor2 Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Target = Target;
	Parms.InDistPos = std::move(InDistPos);
	Parms.InDistRot = std::move(InDistRot);
	Parms.Duration = Duration;
	Parms.IgnoreZ = IgnoreZ;
	Parms.Completion = Completion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAutoPlayActor.Abort
// (Final, Native, Public, BlueprintCallable)

void ARCAutoPlayActor::Abort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAutoPlayActor", "Abort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassTransformer.StartUpdate
// (Final, Native, Public, BlueprintCallable)

void ARCGrassTransformer::StartUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassTransformer", "StartUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassTransformer.StartUpdateManagement
// (Event, Public, BlueprintEvent)

void ARCGrassTransformer::StartUpdateManagement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassTransformer", "StartUpdateManagement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCGrassTransformer.StopUpdateInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCGrassTransformer::StopUpdateInstance(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassTransformer", "StopUpdateInstance");

	Params::RCGrassTransformer_StopUpdateInstance Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassTransformer.StopUpdateManagement
// (Event, Public, BlueprintEvent)

void ARCGrassTransformer::StopUpdateManagement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassTransformer", "StopUpdateManagement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCGrassRippleDeformer.UpdateGrassTransform
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassRippleDeformer::UpdateGrassTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassRippleDeformer", "UpdateGrassTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassRippleDeformer.UpdateRippleRadius
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassRippleDeformer::UpdateRippleRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassRippleDeformer", "UpdateRippleRadius");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCSVData.SetDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       pDataTable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCSVData::SetDataTable(class UDataTable* pDataTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCSVData", "SetDataTable");

	Params::RCCSVData_SetDataTable Parms{};

	Parms.pDataTable = pDataTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCText3DActorBFL.GetText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText URCText3DActorBFL::GetText(class FName InActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCText3DActorBFL", "GetText");

	Params::RCText3DActorBFL_GetText Parms{};

	Parms.InActorName = InActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCText3DActorBFL.GetText3DActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCText3DActor*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCText3DActor* URCText3DActorBFL::GetText3DActor(class FName InActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCText3DActorBFL", "GetText3DActor");

	Params::RCText3DActorBFL_GetText3DActor Parms{};

	Parms.InActorName = InActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCText3DActorBFL.GetTextID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCText3DActorBFL::GetTextID(class FName InActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCText3DActorBFL", "GetTextID");

	Params::RCText3DActorBFL_GetTextID Parms{};

	Parms.InActorName = InActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCText3DActorBFL.IsVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCText3DActorBFL::IsVisibility(class FName InActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCText3DActorBFL", "IsVisibility");

	Params::RCText3DActorBFL_IsVisibility Parms{};

	Parms.InActorName = InActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCText3DActorBFL.SetTextID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCText3DActorBFL::SetTextID(class FName InActorName, class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCText3DActorBFL", "SetTextID");

	Params::RCText3DActorBFL_SetTextID Parms{};

	Parms.InActorName = InActorName;
	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCText3DActorBFL.SetVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCText3DActorBFL::SetVisibility(class FName InActorName, bool bInVisible, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCText3DActorBFL", "SetVisibility");

	Params::RCText3DActorBFL_SetVisibility Parms{};

	Parms.InActorName = InActorName;
	Parms.bInVisible = bInVisible;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBackDropActor.AddPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Pos                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   W                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   H                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Xbrock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Ybrock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBackDropActor::AddPoint(const struct FVector& Pos, float W, float H, int32 Xbrock, int32 Ybrock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBackDropActor", "AddPoint");

	Params::RCBackDropActor_AddPoint Parms{};

	Parms.Pos = std::move(Pos);
	Parms.W = W;
	Parms.H = H;
	Parms.Xbrock = Xbrock;
	Parms.Ybrock = Ybrock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBackDropActor.Bake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   brockSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBackDropActor::Bake(int32 brockSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBackDropActor", "Bake");

	Params::RCBackDropActor_Bake Parms{};

	Parms.brockSize = brockSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBackDropActor.MakeScanMap
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Pos                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   startX                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   startY                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   endX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   endY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BrockSizeX                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BrockSizeY                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBackDropActor::MakeScanMap(const struct FVector& Pos, int32 startX, int32 startY, int32 endX, int32 endY, int32 BrockSizeX, int32 BrockSizeY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBackDropActor", "MakeScanMap");

	Params::RCBackDropActor_MakeScanMap Parms{};

	Parms.Pos = std::move(Pos);
	Parms.startX = startX;
	Parms.startY = startY;
	Parms.endX = endX;
	Parms.endY = endY;
	Parms.BrockSizeX = BrockSizeX;
	Parms.BrockSizeY = BrockSizeY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBackDropActor.NeedScap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBackDropActor::NeedScap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBackDropActor", "NeedScap");

	Params::RCBackDropActor_NeedScap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBackDropActor.Reflesh
// (Final, Native, Public, BlueprintCallable)

void ARCBackDropActor::Reflesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBackDropActor", "Reflesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBackDropActor.RGBA2Hight
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector4                         col                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCBackDropActor::RGBA2Hight(const struct FVector4& col)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBackDropActor", "RGBA2Hight");

	Params::RCBackDropActor_RGBA2Hight Parms{};

	Parms.col = std::move(col);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.CascadeRainDataData.Import
// (Native, Public, BlueprintCallable)

void UCascadeRainDataData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CascadeRainDataData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacter.IsPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCharacter::IsPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacter", "IsPause");

	Params::RCCharacter_IsPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacter.IsPauseCancelFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCharacter::IsPauseCancelFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacter", "IsPauseCancelFlag");

	Params::RCCharacter_IsPauseCancelFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacter.IsSimulatePhysicsFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCharacter::IsSimulatePhysicsFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacter", "IsSimulatePhysicsFlag");

	Params::RCCharacter_IsSimulatePhysicsFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacter.IsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCharacter::IsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacter", "IsVisibility");

	Params::RCCharacter_IsVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacter.SetPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPauseFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirectFlag                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacter::SetPause(bool bPauseFlag, bool bDirectFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacter", "SetPause");

	Params::RCCharacter_SetPause Parms{};

	Parms.bPauseFlag = bPauseFlag;
	Parms.bDirectFlag = bDirectFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacter.SetPauseCancelFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPauseCancel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacter::SetPauseCancelFlag(bool bInPauseCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacter", "SetPauseCancelFlag");

	Params::RCCharacter_SetPauseCancelFlag Parms{};

	Parms.bInPauseCancel = bInPauseCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacter.SetSimulatePhysicsFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSimulatePhysics                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDirect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacter::SetSimulatePhysicsFlag(bool bInSimulatePhysics, bool bInDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacter", "SetSimulatePhysicsFlag");

	Params::RCCharacter_SetSimulatePhysicsFlag Parms{};

	Parms.bInSimulatePhysics = bInSimulatePhysics;
	Parms.bInDirect = bInDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacter.SetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirectFlag                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCollision                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacter::SetVisibility(bool bVisibleFlag, bool bDirectFlag, bool bIsCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacter", "SetVisibility");

	Params::RCCharacter_SetVisibility Parms{};

	Parms.bVisibleFlag = bVisibleFlag;
	Parms.bDirectFlag = bDirectFlag;
	Parms.bIsCollision = bIsCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.BackupMovePosition
// (Final, Native, Public, BlueprintCallable)

void ARCCharacterScript::BackupMovePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "BackupMovePosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.EndTurn
// (Final, Native, Public, BlueprintCallable)

void ARCCharacterScript::EndTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "EndTurn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.GetActorLocationBalloon
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCCharacterScript::GetActorLocationBalloon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "GetActorLocationBalloon");

	Params::RCCharacterScript_GetActorLocationBalloon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterScript.GetActorLocationFoot
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCCharacterScript::GetActorLocationFoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "GetActorLocationFoot");

	Params::RCCharacterScript_GetActorLocationFoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterScript.GetDirectionAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCCharacterScript::GetDirectionAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "GetDirectionAmount");

	Params::RCCharacterScript_GetDirectionAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterScript.GetFootIKData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRCScriptActorFootIKData         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRCScriptActorFootIKData ARCCharacterScript::GetFootIKData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "GetFootIKData");

	Params::RCCharacterScript_GetFootIKData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterScript.GetMaxVelocityLengthInFrames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCCharacterScript::GetMaxVelocityLengthInFrames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "GetMaxVelocityLengthInFrames");

	Params::RCCharacterScript_GetMaxVelocityLengthInFrames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterScript.GetMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float ARCCharacterScript::GetMoveSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "GetMoveSpeed");

	Params::RCCharacterScript_GetMoveSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterScript.IsMoveEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCharacterScript::IsMoveEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "IsMoveEnd");

	Params::RCCharacterScript_IsMoveEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterScript.ResetMove
// (Final, Native, Public, BlueprintCallable)

void ARCCharacterScript::ResetMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "ResetMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.RestoreMoveList
// (Final, Native, Public, BlueprintCallable)

void ARCCharacterScript::RestoreMoveList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "RestoreMoveList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.RestoreMovePosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::RestoreMovePosition(float SpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "RestoreMovePosition");

	Params::RCCharacterScript_RestoreMovePosition Parms{};

	Parms.SpeedScale = SpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.RestoreRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::RestoreRotationYaw(float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "RestoreRotationYaw");

	Params::RCCharacterScript_RestoreRotationYaw Parms{};

	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.SetMovePause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMovePause                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::SetMovePause(bool bInMovePause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "SetMovePause");

	Params::RCCharacterScript_SetMovePause Parms{};

	Parms.bInMovePause = bInMovePause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.SetMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWalkSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRunSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::SetMoveSpeed(float InWalkSpeed, float InRunSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "SetMoveSpeed");

	Params::RCCharacterScript_SetMoveSpeed Parms{};

	Parms.InWalkSpeed = InWalkSpeed;
	Parms.InRunSpeed = InRunSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.SetOrientRotationtoMovementFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::SetOrientRotationtoMovementFlag(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "SetOrientRotationtoMovementFlag");

	Params::RCCharacterScript_SetOrientRotationtoMovementFlag Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.SetPositionYaw
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::SetPositionYaw(const struct FVector& InPosition, float InYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "SetPositionYaw");

	Params::RCCharacterScript_SetPositionYaw Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.InYaw = InYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.SetTransformPlayerStartName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPlayerStartTagName                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::SetTransformPlayerStartName(class FName InPlayerStartTagName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "SetTransformPlayerStartName");

	Params::RCCharacterScript_SetTransformPlayerStartName Parms{};

	Parms.InPlayerStartTagName = InPlayerStartTagName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.SetTransformTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::SetTransformTargetPointName(class FName InPointName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "SetTransformTargetPointName");

	Params::RCCharacterScript_SetTransformTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartMoveFromPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InLength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndPlayerYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TurnSpeedScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartMoveFromPlayer(float InLength, float InAngle, float InHeight, float SpeedScale, bool bEndPlayerYaw, float TurnSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartMoveFromPlayer");

	Params::RCCharacterScript_StartMoveFromPlayer Parms{};

	Parms.InLength = InLength;
	Parms.InAngle = InAngle;
	Parms.InHeight = InHeight;
	Parms.SpeedScale = SpeedScale;
	Parms.bEndPlayerYaw = bEndPlayerYaw;
	Parms.TurnSpeedScale = TurnSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartMoveFromPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndChangeYawPosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TurnSpeedScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartMoveFromPosition(const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bEndChangeYaw, const struct FVector& EndChangeYawPosition, bool bPlayerCheck, float TurnSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartMoveFromPosition");

	Params::RCCharacterScript_StartMoveFromPosition Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.EndChangeYawPosition = std::move(EndChangeYawPosition);
	Parms.bPlayerCheck = bPlayerCheck;
	Parms.TurnSpeedScale = TurnSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartMoveFromPositionList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRCScriptActorMoveInfo>   InMoveInfoList                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   StartMoveInfoNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartMoveFromPositionList(const TArray<struct FRCScriptActorMoveInfo>& InMoveInfoList, int32 StartMoveInfoNum, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartMoveFromPositionList");

	Params::RCCharacterScript_StartMoveFromPositionList Parms{};

	Parms.InMoveInfoList = std::move(InMoveInfoList);
	Parms.StartMoveInfoNum = StartMoveInfoNum;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartMoveFromSplineName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSplineName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDistanceRange                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartMoveFromSplineName(class FName InSplineName, float StartDistanceRange, bool bReverse, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartMoveFromSplineName");

	Params::RCCharacterScript_StartMoveFromSplineName Parms{};

	Parms.InSplineName = InSplineName;
	Parms.StartDistanceRange = StartDistanceRange;
	Parms.bReverse = bReverse;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartMoveFromTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InChangeYawSpeedScale                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TurnSpeedScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartMoveFromTargetPointName(class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, bool bEndChangeYaw, float InOffsetYaw, float InChangeYawSpeedScale, bool bPlayerCheck, float TurnSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartMoveFromTargetPointName");

	Params::RCCharacterScript_StartMoveFromTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.InChangeYawSpeedScale = InChangeYawSpeedScale;
	Parms.bPlayerCheck = bPlayerCheck;
	Parms.TurnSpeedScale = TurnSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartRotationFromCharacter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTargetCharacterName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartRotationFromCharacter(class FName InTargetCharacterName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartRotationFromCharacter");

	Params::RCCharacterScript_StartRotationFromCharacter Parms{};

	Parms.InTargetCharacterName = InTargetCharacterName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartRotationFromPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartRotationFromPosition(const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartRotationFromPosition");

	Params::RCCharacterScript_StartRotationFromPosition Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartRotationFromTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartRotationFromTargetPointName(class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartRotationFromTargetPointName");

	Params::RCCharacterScript_StartRotationFromTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartRotationYaw(float Yaw, float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartRotationYaw");

	Params::RCCharacterScript_StartRotationYaw Parms{};

	Parms.Yaw = Yaw;
	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartTurn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAngle                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeedScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartTurn(const float InAngle, float InSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartTurn");

	Params::RCCharacterScript_StartTurn Parms{};

	Parms.InAngle = InAngle;
	Parms.InSpeedScale = InSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartTurnFromCharacter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTargetCharacterName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeedScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartTurnFromCharacter(class FName InTargetCharacterName, float InSpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartTurnFromCharacter");

	Params::RCCharacterScript_StartTurnFromCharacter Parms{};

	Parms.InTargetCharacterName = InTargetCharacterName;
	Parms.InSpeedScale = InSpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartTurnFromPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeedScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartTurnFromPosition(const struct FVector& InPosition, float InSpeedScale, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartTurnFromPosition");

	Params::RCCharacterScript_StartTurnFromPosition Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.InSpeedScale = InSpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartTurnFromTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeedScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartTurnFromTargetPointName(class FName InPointName, float InSpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartTurnFromTargetPointName");

	Params::RCCharacterScript_StartTurnFromTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.InSpeedScale = InSpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartTurnWorldDirection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InTurnDirection                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeedScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartTurnWorldDirection(const struct FVector& InTurnDirection, float InSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartTurnWorldDirection");

	Params::RCCharacterScript_StartTurnWorldDirection Parms{};

	Parms.InTurnDirection = std::move(InTurnDirection);
	Parms.InSpeedScale = InSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StartTurnYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeedScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterScript::StartTurnYaw(float InYaw, float InSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StartTurnYaw");

	Params::RCCharacterScript_StartTurnYaw Parms{};

	Parms.InYaw = InYaw;
	Parms.InSpeedScale = InSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StopMove
// (Final, Native, Public, BlueprintCallable)

void ARCCharacterScript::StopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StopMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.StopRotation
// (Final, Native, Public, BlueprintCallable)

void ARCCharacterScript::StopRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "StopRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterScript.GetRCCharacterMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URCCharacterMovementComponent*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCCharacterMovementComponent* ARCCharacterScript::GetRCCharacterMovementComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterScript", "GetRCCharacterMovementComponent");

	Params::RCCharacterScript_GetRCCharacterMovementComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterRender.ChangeColorOfMaterials
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InAmbientColor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InDirectionalColor                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDurationSec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::ChangeColorOfMaterials(const struct FLinearColor& InAmbientColor, const struct FLinearColor& InDirectionalColor, const float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "ChangeColorOfMaterials");

	Params::RCCharacterRender_ChangeColorOfMaterials Parms{};

	Parms.InAmbientColor = std::move(InAmbientColor);
	Parms.InDirectionalColor = std::move(InDirectionalColor);
	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.ChangeParameterOfEmissiveMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InEmissiveIntensityValue                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDurationSec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::ChangeParameterOfEmissiveMaterials(const float InEmissiveIntensityValue, const float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "ChangeParameterOfEmissiveMaterials");

	Params::RCCharacterRender_ChangeParameterOfEmissiveMaterials Parms{};

	Parms.InEmissiveIntensityValue = InEmissiveIntensityValue;
	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.ChangeParameterOfRainMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRainIntensityValue                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWetIntensityValue                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWetDurationSec                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::ChangeParameterOfRainMaterials(const float InRainIntensityValue, const float InWetIntensityValue, const float InWetDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "ChangeParameterOfRainMaterials");

	Params::RCCharacterRender_ChangeParameterOfRainMaterials Parms{};

	Parms.InRainIntensityValue = InRainIntensityValue;
	Parms.InWetIntensityValue = InWetIntensityValue;
	Parms.InWetDurationSec = InWetDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.ChangeParameterOfRimLightMaterials
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InOutlineColor                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOutlineCoverageValue                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOutlineSmoothValue                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRimLightDurationSec                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::ChangeParameterOfRimLightMaterials(const struct FLinearColor& InOutlineColor, const float InOutlineCoverageValue, const float InOutlineSmoothValue, const float InRimLightDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "ChangeParameterOfRimLightMaterials");

	Params::RCCharacterRender_ChangeParameterOfRimLightMaterials Parms{};

	Parms.InOutlineColor = std::move(InOutlineColor);
	Parms.InOutlineCoverageValue = InOutlineCoverageValue;
	Parms.InOutlineSmoothValue = InOutlineSmoothValue;
	Parms.InRimLightDurationSec = InRimLightDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.ChangeParameterOfTranslucentMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTranslucentIntensityValue                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDurationSec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::ChangeParameterOfTranslucentMaterials(const float InTranslucentIntensityValue, const float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "ChangeParameterOfTranslucentMaterials");

	Params::RCCharacterRender_ChangeParameterOfTranslucentMaterials Parms{};

	Parms.InTranslucentIntensityValue = InTranslucentIntensityValue;
	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.GetFinishChangeRimLight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCharacterRender::GetFinishChangeRimLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "GetFinishChangeRimLight");

	Params::RCCharacterRender_GetFinishChangeRimLight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterRender.IsCameraFadeEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCharacterRender::IsCameraFadeEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "IsCameraFadeEnable");

	Params::RCCharacterRender_IsCameraFadeEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterRender.IsFadeEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCharacterRender::IsFadeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "IsFadeEnd");

	Params::RCCharacterRender_IsFadeEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterRender.SetCameraFadeEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::SetCameraFadeEnable(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "SetCameraFadeEnable");

	Params::RCCharacterRender_SetCameraFadeEnable Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.SetDither
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDitherAlphaValue                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::SetDither(const float InDitherAlphaValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "SetDither");

	Params::RCCharacterRender_SetDither Parms{};

	Parms.InDitherAlphaValue = InDitherAlphaValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.SetFakeSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FakeSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::SetFakeSpeed(float FakeSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "SetFakeSpeed");

	Params::RCCharacterRender_SetFakeSpeed Parms{};

	Parms.FakeSpeed = FakeSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.SetupBgCharacterMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDurationSec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::SetupBgCharacterMaterial(const float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "SetupBgCharacterMaterial");

	Params::RCCharacterRender_SetupBgCharacterMaterial Parms{};

	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.SetUseFakeSpeedFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUseFakeSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::SetUseFakeSpeedFlag(bool bUseFakeSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "SetUseFakeSpeedFlag");

	Params::RCCharacterRender_SetUseFakeSpeedFlag Parms{};

	Parms.bUseFakeSpeed = bUseFakeSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.StartFadeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDirect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::StartFadeIn(float InTime, bool InDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "StartFadeIn");

	Params::RCCharacterRender_StartFadeIn Parms{};

	Parms.InTime = InTime;
	Parms.InDirect = InDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.StartFadeOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDirect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::StartFadeOut(float InTime, bool InDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "StartFadeOut");

	Params::RCCharacterRender_StartFadeOut Parms{};

	Parms.InTime = InTime;
	Parms.InDirect = InDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterRender.UndoParameterOfRimLightMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRimLightDurationSec                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCharacterRender::UndoParameterOfRimLightMaterials(const float InRimLightDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterRender", "UndoParameterOfRimLightMaterials");

	Params::RCCharacterRender_UndoParameterOfRimLightMaterials Parms{};

	Parms.InRimLightDurationSec = InRimLightDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCOptionCharaShinigami.GetShinigamiFrame
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCOptionCharaShinigami::GetShinigamiFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCOptionCharaShinigami", "GetShinigamiFrame");

	Params::RCOptionCharaShinigami_GetShinigamiFrame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCOptionCharaShinigami.GetShinigamiSpeed
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCOptionCharaShinigami::GetShinigamiSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCOptionCharaShinigami", "GetShinigamiSpeed");

	Params::RCOptionCharaShinigami_GetShinigamiSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCOptionCharaShinigami.GetShinigamiStat
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCOptionCharaShinigami::GetShinigamiStat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCOptionCharaShinigami", "GetShinigamiStat");

	Params::RCOptionCharaShinigami_GetShinigamiStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCOptionCharaShinigami.GetShinigamiTilt
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCOptionCharaShinigami::GetShinigamiTilt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCOptionCharaShinigami", "GetShinigamiTilt");

	Params::RCOptionCharaShinigami_GetShinigamiTilt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCOptionCharaShinigami.IsUseAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCOptionCharaShinigami::IsUseAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCOptionCharaShinigami", "IsUseAI");

	Params::RCOptionCharaShinigami_IsUseAI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCOptionCharaShinigami.RemoveSsite
// (Final, Native, Private, BlueprintCallable)

void ARCOptionCharaShinigami::RemoveSsite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCOptionCharaShinigami", "RemoveSsite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCOptionCharaShinigami.SetUseAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCOptionCharaShinigami::SetUseAI(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCOptionCharaShinigami", "SetUseAI");

	Params::RCOptionCharaShinigami_SetUseAI Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButton.OnChangeDecide
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnChangeDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnChangeDecide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnChangeDisable
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnChangeDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnChangeDisable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnChangeNormal
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnChangeNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnChangeNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnChangeSelect
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnChangeSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnChangeSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnDecideHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnDecideHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnDecideHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnDisableHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnDisableHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnDisableHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnDisableShowStarted
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnDisableShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnDisableShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnNormalHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnNormalHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnNormalHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnNormalShowStarted
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnNormalShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnNormalShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButton.OnSelectHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuButton::OnSelectHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButton", "OnSelectHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.CallChangeSelectPieceDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       Info                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    isUnlock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::CallChangeSelectPieceDelegate(const struct FRCNzFinalePieceObjectInfo& Info, bool isUnlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "CallChangeSelectPieceDelegate");

	Params::RCNzUiFinalePieceLayoutWidget_CallChangeSelectPieceDelegate Parms{};

	Parms.Info = std::move(Info);
	Parms.isUnlock = isUnlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.FinishUnlockAnimPieceLList
// (Event, Public, BlueprintEvent)

void URCNzUiFinalePieceLayoutWidget::FinishUnlockAnimPieceLList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "FinishUnlockAnimPieceLList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.FinishUnlockSListAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceLayoutWidget::FinishUnlockSListAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "FinishUnlockSListAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetCurrentSelectedInfo
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCNzFinalePieceObjectInfo URCNzUiFinalePieceLayoutWidget::GetCurrentSelectedInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetCurrentSelectedInfo");

	Params::RCNzUiFinalePieceLayoutWidget_GetCurrentSelectedInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetCurrentSelectedPieceIdx
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinalePieceLayoutWidget::GetCurrentSelectedPieceIdx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetCurrentSelectedPieceIdx");

	Params::RCNzUiFinalePieceLayoutWidget_GetCurrentSelectedPieceIdx Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetIsHoverdPieceList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinalePieceLayoutWidget::GetIsHoverdPieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetIsHoverdPieceList");

	Params::RCNzUiFinalePieceLayoutWidget_GetIsHoverdPieceList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetOneLinePieceItemNum
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinalePieceLayoutWidget::GetOneLinePieceItemNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetOneLinePieceItemNum");

	Params::RCNzUiFinalePieceLayoutWidget_GetOneLinePieceItemNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetPieceListItemLArray
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class URCNzUiFinalePieceList_PieceBase*>ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class URCNzUiFinalePieceList_PieceBase*> URCNzUiFinalePieceLayoutWidget::GetPieceListItemLArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetPieceListItemLArray");

	Params::RCNzUiFinalePieceLayoutWidget_GetPieceListItemLArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetPieceListLAngle
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCNzUiFinalePieceLayoutWidget::GetPieceListLAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetPieceListLAngle");

	Params::RCNzUiFinalePieceLayoutWidget_GetPieceListLAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetPieceListLParentSize
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinalePieceLayoutWidget::GetPieceListLParentSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetPieceListLParentSize");

	Params::RCNzUiFinalePieceLayoutWidget_GetPieceListLParentSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetPieceListLScale
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinalePieceLayoutWidget::GetPieceListLScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetPieceListLScale");

	Params::RCNzUiFinalePieceLayoutWidget_GetPieceListLScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetPieceSListParentLocAndSize
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        Loc                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::GetPieceSListParentLocAndSize(struct FVector2D* Loc, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetPieceSListParentLocAndSize");

	Params::RCNzUiFinalePieceLayoutWidget_GetPieceSListParentLocAndSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Loc != nullptr)
		*Loc = std::move(Parms.Loc);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetPieceSLocAndSize
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Loc                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::GetPieceSLocAndSize(int32 idx, struct FVector2D* Loc, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetPieceSLocAndSize");

	Params::RCNzUiFinalePieceLayoutWidget_GetPieceSLocAndSize Parms{};

	Parms.idx = idx;

	UObject::ProcessEvent(Func, &Parms);

	if (Loc != nullptr)
		*Loc = std::move(Parms.Loc);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetPlayUnlockAnimPieceLList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> URCNzUiFinalePieceLayoutWidget::GetPlayUnlockAnimPieceLList(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetPlayUnlockAnimPieceLList");

	Params::RCNzUiFinalePieceLayoutWidget_GetPlayUnlockAnimPieceLList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetRockNumTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RockNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isSmall                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* URCNzUiFinalePieceLayoutWidget::GetRockNumTexture(int32 RockNum, bool isSmall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetRockNumTexture");

	Params::RCNzUiFinalePieceLayoutWidget_GetRockNumTexture Parms{};

	Parms.RockNum = RockNum;
	Parms.isSmall = isSmall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.InitializePieceLayout
// (Final, Native, Public)

void URCNzUiFinalePieceLayoutWidget::InitializePieceLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "InitializePieceLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.IsDetailPieceListMode
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinalePieceLayoutWidget::IsDetailPieceListMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "IsDetailPieceListMode");

	Params::RCNzUiFinalePieceLayoutWidget_IsDetailPieceListMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.IsVisiblePieceList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinalePieceLayoutWidget::IsVisiblePieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "IsVisiblePieceList");

	Params::RCNzUiFinalePieceLayoutWidget_IsVisiblePieceList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.LoadPieceImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCNzFinaleManagerBase*           FinaleManager                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCNzFinalePieceObjectInfo       targetInfo                                             (Parm, NativeAccessSpecifierPublic)
// bool                                    isSmall                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCNzFinalePieceObjectInfo       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCNzFinalePieceObjectInfo URCNzUiFinalePieceLayoutWidget::LoadPieceImage(class ARCNzFinaleManagerBase* FinaleManager, const struct FRCNzFinalePieceObjectInfo& targetInfo, bool isSmall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "LoadPieceImage");

	Params::RCNzUiFinalePieceLayoutWidget_LoadPieceImage Parms{};

	Parms.FinaleManager = FinaleManager;
	Parms.targetInfo = std::move(targetInfo);
	Parms.isSmall = isSmall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.OpenPieceSelectWindow
// (Event, Public, BlueprintEvent)

void URCNzUiFinalePieceLayoutWidget::OpenPieceSelectWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "OpenPieceSelectWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.PieceLayoutOpenEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceLayoutWidget::PieceLayoutOpenEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "PieceLayoutOpenEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.PlayUnLockSE
// (Event, Public, BlueprintEvent)

void URCNzUiFinalePieceLayoutWidget::PlayUnLockSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "PlayUnLockSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.SetDelayUnLockAnimTime
// (Final, Native, Public)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::SetDelayUnLockAnimTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "SetDelayUnLockAnimTime");

	Params::RCNzUiFinalePieceLayoutWidget_SetDelayUnLockAnimTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.SetIsHoverdPieceList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::SetIsHoverdPieceList(bool Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "SetIsHoverdPieceList");

	Params::RCNzUiFinalePieceLayoutWidget_SetIsHoverdPieceList Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.StartFinish
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceLayoutWidget::StartFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "StartFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.StartOpen
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceLayoutWidget::StartOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "StartOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.StartUnlockAnimPieceList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           pieceList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::StartUnlockAnimPieceList(const TArray<int32>& pieceList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "StartUnlockAnimPieceList");

	Params::RCNzUiFinalePieceLayoutWidget_StartUnlockAnimPieceList Parms{};

	Parms.pieceList = std::move(pieceList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.StartUnlockAnimPieceSlist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           pieceList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::StartUnlockAnimPieceSlist(const TArray<int32>& pieceList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "StartUnlockAnimPieceSlist");

	Params::RCNzUiFinalePieceLayoutWidget_StartUnlockAnimPieceSlist Parms{};

	Parms.pieceList = std::move(pieceList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.UdpatePieceLayoutBtnGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::UdpatePieceLayoutBtnGuide(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "UdpatePieceLayoutBtnGuide");

	Params::RCNzUiFinalePieceLayoutWidget_UdpatePieceLayoutBtnGuide Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.UnlockCurrentSelectPiece
// (Event, Public, BlueprintEvent)

void URCNzUiFinalePieceLayoutWidget::UnlockCurrentSelectPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "UnlockCurrentSelectPiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.UpdateSelectPieceIdx
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceLayoutWidget::UpdateSelectPieceIdx(int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "UpdateSelectPieceIdx");

	Params::RCNzUiFinalePieceLayoutWidget_UpdateSelectPieceIdx Parms{};

	Parms.idx = idx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinalePieceLayoutWidget.WaitingOpen
// (Final, Native, Public)

void URCNzUiFinalePieceLayoutWidget::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceLayoutWidget.GetPieceLCenterPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ind                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinalePieceLayoutWidget::GetPieceLCenterPosition(int32 ind) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceLayoutWidget", "GetPieceLCenterPosition");

	Params::RCNzUiFinalePieceLayoutWidget_GetPieceLCenterPosition Parms{};

	Parms.ind = ind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiOptionBarVolume.SynchronizeToSlider
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionBarVolume::SynchronizeToSlider(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBarVolume", "SynchronizeToSlider");

	Params::RCUiOptionBarVolume_SynchronizeToSlider Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RainDataData.Import
// (Native, Public, BlueprintCallable)

void URainDataData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RainDataData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAchievementBFL.Unlock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCAchievementID                        InAchievementID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAchievementBFL::Unlock(ERCAchievementID InAchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAchievementBFL", "Unlock");

	Params::RCAchievementBFL_Unlock Parms{};

	Parms.InAchievementID = InAchievementID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAchievementBFL.UnlockByOperationID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCAchievementOperationID               InAchievementOperationID                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAchievementBFL::UnlockByOperationID(ERCAchievementOperationID InAchievementOperationID, int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAchievementBFL", "UnlockByOperationID");

	Params::RCAchievementBFL_UnlockByOperationID Parms{};

	Parms.InAchievementOperationID = InAchievementOperationID;
	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInputBFL.ChangeInputMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputMode                            InInputMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InModeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCInputBFL::ChangeInputMode(ERCInputMode InInputMode, class FName InModeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "ChangeInputMode");

	Params::RCInputBFL_ChangeInputMode Parms{};

	Parms.InInputMode = InInputMode;
	Parms.InModeName = InModeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInputBFL.GetAmatanMoveFront
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetAmatanMoveFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetAmatanMoveFront");

	Params::RCInputBFL_GetAmatanMoveFront Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetAmatanMoveTurn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetAmatanMoveTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetAmatanMoveTurn");

	Params::RCInputBFL_GetAmatanMoveTurn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetCameraMovePitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSurvey                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetCameraMovePitch(bool bInSurvey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetCameraMovePitch");

	Params::RCInputBFL_GetCameraMovePitch Parms{};

	Parms.bInSurvey = bInSurvey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetCameraMoveYaw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSurvey                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetCameraMoveYaw(bool bInSurvey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetCameraMoveYaw");

	Params::RCInputBFL_GetCameraMoveYaw Parms{};

	Parms.bInSurvey = bInSurvey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetCameraMoveZoon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetCameraMoveZoon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetCameraMoveZoon");

	Params::RCInputBFL_GetCameraMoveZoon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetCursolPointerInfo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ERCInputCursolInfoType                  OutInputType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutScreenPosition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutMove                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSurvey                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::GetCursolPointerInfo(ERCInputCursolInfoType* OutInputType, struct FVector2D* OutScreenPosition, struct FVector2D* OutMove, bool bInSurvey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetCursolPointerInfo");

	Params::RCInputBFL_GetCursolPointerInfo Parms{};

	Parms.bInSurvey = bInSurvey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInputType != nullptr)
		*OutInputType = Parms.OutInputType;

	if (OutScreenPosition != nullptr)
		*OutScreenPosition = std::move(Parms.OutScreenPosition);

	if (OutMove != nullptr)
		*OutMove = std::move(Parms.OutMove);

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetDrawKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKey                             OutKey                                                 (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCInputButtonType                      OutKyeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::GetDrawKey(struct FKey* OutKey, ERCInputButtonType OutKyeType, ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetDrawKey");

	Params::RCInputBFL_GetDrawKey Parms{};

	Parms.OutKyeType = OutKyeType;
	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKey != nullptr)
		*OutKey = std::move(Parms.OutKey);

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetFinaleCursolPointerInfo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ERCInputCursolInfoType                  OutInputType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutScreenPosition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutMove                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::GetFinaleCursolPointerInfo(ERCInputCursolInfoType* OutInputType, struct FVector2D* OutScreenPosition, struct FVector2D* OutMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetFinaleCursolPointerInfo");

	Params::RCInputBFL_GetFinaleCursolPointerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInputType != nullptr)
		*OutInputType = Parms.OutInputType;

	if (OutScreenPosition != nullptr)
		*OutScreenPosition = std::move(Parms.OutScreenPosition);

	if (OutMove != nullptr)
		*OutMove = std::move(Parms.OutMove);

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetInputPlatform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputPlatform                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCInputPlatform URCInputBFL::GetInputPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetInputPlatform");

	Params::RCInputBFL_GetInputPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKey                             OutKey                                                 (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCInputButtonType                      OutKyeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCInputHardwareType                    InInputHardwareType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::GetKey(struct FKey* OutKey, ERCInputButtonType OutKyeType, ERCInputKeyType KyeType, ERCInputHardwareType InInputHardwareType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetKey");

	Params::RCInputBFL_GetKey Parms{};

	Parms.OutKyeType = OutKyeType;
	Parms.KyeType = KyeType;
	Parms.InInputHardwareType = InInputHardwareType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKey != nullptr)
		*OutKey = std::move(Parms.OutKey);

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetLeverValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetLeverValue(ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetLeverValue");

	Params::RCInputBFL_GetLeverValue Parms{};

	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetPlayerMoveFront
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetPlayerMoveFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetPlayerMoveFront");

	Params::RCInputBFL_GetPlayerMoveFront Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetPlayerMoveSide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetPlayerMoveSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetPlayerMoveSide");

	Params::RCInputBFL_GetPlayerMoveSide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.GetPointerValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInputBFL::GetPointerValue(ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "GetPointerValue");

	Params::RCInputBFL_GetPointerValue Parms{};

	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.IsDebugGameClear
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::IsDebugGameClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "IsDebugGameClear");

	Params::RCInputBFL_IsDebugGameClear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.IsDebugGameTimeUp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::IsDebugGameTimeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "IsDebugGameTimeUp");

	Params::RCInputBFL_IsDebugGameTimeUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.IsDebugMenuTrigger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::IsDebugMenuTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "IsDebugMenuTrigger");

	Params::RCInputBFL_IsDebugMenuTrigger Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.IsDown
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::IsDown(ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "IsDown");

	Params::RCInputBFL_IsDown Parms{};

	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.IsMove
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::IsMove(ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "IsMove");

	Params::RCInputBFL_IsMove Parms{};

	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.IsPressed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::IsPressed(ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "IsPressed");

	Params::RCInputBFL_IsPressed Parms{};

	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.IsReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::IsReleased(ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "IsReleased");

	Params::RCInputBFL_IsReleased Parms{};

	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.IsRepeat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInputBFL::IsRepeat(ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "IsRepeat");

	Params::RCInputBFL_IsRepeat Parms{};

	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInputBFL.PopInputMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InModeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAllPop                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCInputBFL::PopInputMode(class FName InModeName, bool InAllPop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "PopInputMode");

	Params::RCInputBFL_PopInputMode Parms{};

	Parms.InModeName = InModeName;
	Parms.InAllPop = InAllPop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInputBFL.PushInputMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputMode                            InInputMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InModeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCInputBFL::PushInputMode(ERCInputMode InInputMode, class FName InModeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "PushInputMode");

	Params::RCInputBFL_PushInputMode Parms{};

	Parms.InInputMode = InInputMode;
	Parms.InModeName = InModeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInputBFL.ResetInputMode
// (Final, Native, Static, Public, BlueprintCallable)

void URCInputBFL::ResetInputMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "ResetInputMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInputBFL.SetPressedDebug
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         KyeType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCInputBFL::SetPressedDebug(ERCInputKeyType KyeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInputBFL", "SetPressedDebug");

	Params::RCInputBFL_SetPressedDebug Parms{};

	Parms.KyeType = KyeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectParts.InitializeBattleKaiKagiSelectParts
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectParts::InitializeBattleKaiKagiSelectParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectParts", "InitializeBattleKaiKagiSelectParts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectParts.PlayAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleKaiKagiSelectPartsAnimType AnimType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectParts::PlayAnim(ERCNzUiBattleKaiKagiSelectPartsAnimType AnimType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectParts", "PlayAnim");

	Params::RCNzUiBattleKaiKagiSelectParts_PlayAnim Parms{};

	Parms.AnimType = AnimType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.Finished_AN_BurnOutA_Event
// (Final, Native, Protected)

void URCNzUiFinaleTimeLimitBase::Finished_AN_BurnOutA_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "Finished_AN_BurnOutA_Event");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.Finished_AN_BurnOutB_Event
// (Final, Native, Protected)

void URCNzUiFinaleTimeLimitBase::Finished_AN_BurnOutB_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "Finished_AN_BurnOutB_Event");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.Finished_AN_Lighting_A_Event
// (Final, Native, Protected, BlueprintCallable)

void URCNzUiFinaleTimeLimitBase::Finished_AN_Lighting_A_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "Finished_AN_Lighting_A_Event");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.InitializeTimeLimit
// (Final, Native, Public)

void URCNzUiFinaleTimeLimitBase::InitializeTimeLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "InitializeTimeLimit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.PlayBurnAAnim
// (Final, Native, Public)

void URCNzUiFinaleTimeLimitBase::PlayBurnAAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "PlayBurnAAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.PlayBurnOutAAnim
// (Final, Native, Public)

void URCNzUiFinaleTimeLimitBase::PlayBurnOutAAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "PlayBurnOutAAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.PlayBurnOutBAnim
// (Final, Native, Public)

void URCNzUiFinaleTimeLimitBase::PlayBurnOutBAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "PlayBurnOutBAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.PlayGameOverAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleTimeLimitBase::PlayGameOverAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "PlayGameOverAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitBase.PlayTimerStartAnim
// (Final, Native, Public)

void URCNzUiFinaleTimeLimitBase::PlayTimerStartAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitBase", "PlayTimerStartAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuQuest.Close
// (Native, Public, BlueprintCallable)

void URCUiMenuQuest::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuQuest", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuQuest.InitializeMenuQuest
// (Native, Public, BlueprintCallable)

void URCUiMenuQuest::InitializeMenuQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuQuest", "InitializeMenuQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuQuest.Open
// (Native, Public, BlueprintCallable)

void URCUiMenuQuest::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuQuest", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSpiritMiniGameBFL.GetCheckPoint
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector URCSpiritMiniGameBFL::GetCheckPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "GetCheckPoint");

	Params::RCSpiritMiniGameBFL_GetCheckPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSpiritMiniGameBFL.GetCheckPointNumber
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCSpiritMiniGameBFL::GetCheckPointNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "GetCheckPointNumber");

	Params::RCSpiritMiniGameBFL_GetCheckPointNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSpiritMiniGameBFL.GetHitWanderingSpirit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSpiritMiniGameBFL::GetHitWanderingSpirit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "GetHitWanderingSpirit");

	Params::RCSpiritMiniGameBFL_GetHitWanderingSpirit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSpiritMiniGameBFL.GetHitWanderingSpiritPos
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector URCSpiritMiniGameBFL::GetHitWanderingSpiritPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "GetHitWanderingSpiritPos");

	Params::RCSpiritMiniGameBFL_GetHitWanderingSpiritPos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSpiritMiniGameBFL.GetResume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSpiritMiniGameBFL::GetResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "GetResume");

	Params::RCSpiritMiniGameBFL_GetResume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSpiritMiniGameBFL.GetSpiritMiniGameManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCSpiritMiniGameManager*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCSpiritMiniGameManager* URCSpiritMiniGameBFL::GetSpiritMiniGameManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "GetSpiritMiniGameManager");

	Params::RCSpiritMiniGameBFL_GetSpiritMiniGameManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSpiritMiniGameBFL.ProcessAfterReturn
// (Final, Native, Static, Public, BlueprintCallable)

void URCSpiritMiniGameBFL::ProcessAfterReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "ProcessAfterReturn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSpiritMiniGameBFL.ReleaseSpiritMiniGameEnvironment
// (Final, Native, Static, Public, BlueprintCallable)

void URCSpiritMiniGameBFL::ReleaseSpiritMiniGameEnvironment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "ReleaseSpiritMiniGameEnvironment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSpiritMiniGameBFL.ResumeSpiritMiniGameData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InResumeCheckPointNumber                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSpiritMiniGameBFL::ResumeSpiritMiniGameData(const int32 InResumeCheckPointNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "ResumeSpiritMiniGameData");

	Params::RCSpiritMiniGameBFL_ResumeSpiritMiniGameData Parms{};

	Parms.InResumeCheckPointNumber = InResumeCheckPointNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSpiritMiniGameBFL.SetSpiritMiniGameEnvironment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCSpiritMiniGameManager*         InSpiritMiniGameManager                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSpiritMiniGameBFL::SetSpiritMiniGameEnvironment(class ARCSpiritMiniGameManager* InSpiritMiniGameManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSpiritMiniGameBFL", "SetSpiritMiniGameEnvironment");

	Params::RCSpiritMiniGameBFL_SetSpiritMiniGameEnvironment Parms{};

	Parms.InSpiritMiniGameManager = InSpiritMiniGameManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.KillAfter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   in_sec                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::KillAfter(float in_sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "KillAfter");

	Params::RCActionButton_KillAfter Parms{};

	Parms.in_sec = in_sec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.OnButtonActivated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCActionButton::OnButtonActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "OnButtonActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCActionButton.OnButtonDeactivated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCActionButton::OnButtonDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "OnButtonDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCActionButton.OnChangedPauseState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewPauseState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::OnChangedPauseState(bool NewPauseState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "OnChangedPauseState");

	Params::RCActionButton_OnChangedPauseState Parms{};

	Parms.NewPauseState = NewPauseState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCActionButton.OnChangeInputPlatform
// (Final, Native, Private)
// Parameters:
// ERCInputPlatform                        InInputPlatform                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::OnChangeInputPlatform(ERCInputPlatform InInputPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "OnChangeInputPlatform");

	Params::RCActionButton_OnChangeInputPlatform Parms{};

	Parms.InInputPlatform = InInputPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.OnDeadline
// (Final, Native, Public, BlueprintCallable)

void ARCActionButton::OnDeadline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "OnDeadline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.OnFailed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCActionFailureReason                  reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::OnFailed(ERCActionFailureReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "OnFailed");

	Params::RCActionButton_OnFailed Parms{};

	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.OnPassed
// (Final, Native, Public, BlueprintCallable)

void ARCActionButton::OnPassed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "OnPassed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.Reset
// (Final, Native, Public, BlueprintCallable)

void ARCActionButton::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.SetDecision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ForcePasse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::SetDecision(bool ForcePasse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "SetDecision");

	Params::RCActionButton_SetDecision Parms{};

	Parms.ForcePasse = ForcePasse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.SetExpectKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCActionKeyType                        Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::SetExpectKey(ERCActionKeyType Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "SetExpectKey");

	Params::RCActionButton_SetExpectKey Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.SetMockup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Mock                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::SetMockup(bool Mock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "SetMockup");

	Params::RCActionButton_SetMockup Parms{};

	Parms.Mock = Mock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.SetSelectionMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    EnableSelection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::SetSelectionMode(bool EnableSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "SetSelectionMode");

	Params::RCActionButton_SetSelectionMode Parms{};

	Parms.EnableSelection = EnableSelection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.SetSoundEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButton::SetSoundEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "SetSoundEnabled");

	Params::RCActionButton_SetSoundEnabled Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButton.GetLastDecisionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCActionButton::GetLastDecisionTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "GetLastDecisionTime");

	Params::RCActionButton_GetLastDecisionTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActionButton.GetMockup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActionButton::GetMockup() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "GetMockup");

	Params::RCActionButton_GetMockup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActionButton.IsActivated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActionButton::IsActivated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "IsActivated");

	Params::RCActionButton_IsActivated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActionButton.IsDecieded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActionButton::IsDecieded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "IsDecieded");

	Params::RCActionButton_IsDecieded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActionButton.IsPassed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActionButton::IsPassed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "IsPassed");

	Params::RCActionButton_IsPassed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActionButton.IsPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActionButton::IsPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButton", "IsPaused");

	Params::RCActionButton_IsPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSubLevelLoad.ExecSubLevelLoadFinishChecker
// (Final, Native, Private)

void URCSubLevelLoad::ExecSubLevelLoadFinishChecker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSubLevelLoad", "ExecSubLevelLoadFinishChecker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSubLevelLoad.ExecSubLevelUnloadFinishChecker
// (Final, Native, Private)

void URCSubLevelLoad::ExecSubLevelUnloadFinishChecker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSubLevelLoad", "ExecSubLevelUnloadFinishChecker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButtonEventDispatcher.CallOnActivate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCActionButton*                  Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButtonEventDispatcher::CallOnActivate(class FName ID, class ARCActionButton* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButtonEventDispatcher", "CallOnActivate");

	Params::RCActionButtonEventDispatcher_CallOnActivate Parms{};

	Parms.ID = ID;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButtonEventDispatcher.CallOnDeactivate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCActionButton*                  Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButtonEventDispatcher::CallOnDeactivate(class FName ID, class ARCActionButton* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButtonEventDispatcher", "CallOnDeactivate");

	Params::RCActionButtonEventDispatcher_CallOnDeactivate Parms{};

	Parms.ID = ID;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButtonEventDispatcher.CallOnDeadline
// (Final, Native, Public, BlueprintCallable)

void ARCActionButtonEventDispatcher::CallOnDeadline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButtonEventDispatcher", "CallOnDeadline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButtonEventDispatcher.CallOnFailed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCActionButton*                  Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCActionFailureReason                  reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButtonEventDispatcher::CallOnFailed(class FName ID, class ARCActionButton* Actor, ERCActionFailureReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButtonEventDispatcher", "CallOnFailed");

	Params::RCActionButtonEventDispatcher_CallOnFailed Parms{};

	Parms.ID = ID;
	Parms.Actor = Actor;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButtonEventDispatcher.CallOnPassed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCActionButton*                  Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButtonEventDispatcher::CallOnPassed(class FName ID, class ARCActionButton* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButtonEventDispatcher", "CallOnPassed");

	Params::RCActionButtonEventDispatcher_CallOnPassed Parms{};

	Parms.ID = ID;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActionButtonEventDispatcher.CallOnPending
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCActionButton*                  Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Times                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActionButtonEventDispatcher::CallOnPending(class FName ID, class ARCActionButton* Actor, int32 Times)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActionButtonEventDispatcher", "CallOnPending");

	Params::RCActionButtonEventDispatcher_CallOnPending Parms{};

	Parms.ID = ID;
	Parms.Actor = Actor;
	Parms.Times = Times;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActivityBFL.ActivityEnd
// (Final, Native, Static, Public, BlueprintCallable)

void URCActivityBFL::ActivityEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCActivityBFL", "ActivityEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActivityBFL.ActivityStart
// (Final, Native, Static, Public, BlueprintCallable)

void URCActivityBFL::ActivityStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCActivityBFL", "ActivityStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActivityBFL.GetActivityContinue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCActivityBFL::GetActivityContinue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCActivityBFL", "GetActivityContinue");

	Params::RCActivityBFL_GetActivityContinue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActivityBFL.SetActivityExecProcess
// (Final, Native, Static, Public, BlueprintCallable)

void URCActivityBFL::SetActivityExecProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCActivityBFL", "SetActivityExecProcess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleBackgroundWidget.ChangeBackgroundImg
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Texture                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleBackgroundWidget::ChangeBackgroundImg(const class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleBackgroundWidget", "ChangeBackgroundImg");

	Params::RCNzUiFinaleBackgroundWidget_ChangeBackgroundImg Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCWidgetActor.GetWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCUiWidgetBase*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCUiWidgetBase* ARCWidgetActor::GetWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWidgetActor", "GetWidget");

	Params::RCWidgetActor_GetWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCWidgetActor.SetActorVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCWidgetActor::SetActorVisibility(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWidgetActor", "SetActorVisibility");

	Params::RCWidgetActor_SetActorVisibility Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCWidgetActor.SetWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCUiWidgetBase*                  InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCWidgetActor::SetWidget(class URCUiWidgetBase* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWidgetActor", "SetWidget");

	Params::RCWidgetActor_SetWidget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_Info.PlayWaruagakiInfoShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzWaruagaki_Info::PlayWaruagakiInfoShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_Info", "PlayWaruagakiInfoShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.BackupMovePosition
// (Final, Native, Public, BlueprintCallable)

void ARCActorScript::BackupMovePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "BackupMovePosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.IsMoveEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCActorScript::IsMoveEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "IsMoveEnd");

	Params::RCActorScript_IsMoveEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCActorScript.ResetMove
// (Final, Native, Public, BlueprintCallable)

void ARCActorScript::ResetMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "ResetMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.RestoreMoveList
// (Final, Native, Public, BlueprintCallable)

void ARCActorScript::RestoreMoveList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "RestoreMoveList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.RestoreMovePosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::RestoreMovePosition(float SpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "RestoreMovePosition");

	Params::RCActorScript_RestoreMovePosition Parms{};

	Parms.SpeedScale = SpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.RestoreRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::RestoreRotationYaw(float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "RestoreRotationYaw");

	Params::RCActorScript_RestoreRotationYaw Parms{};

	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.SetMovePause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMovePause                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::SetMovePause(bool bInMovePause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "SetMovePause");

	Params::RCActorScript_SetMovePause Parms{};

	Parms.bInMovePause = bInMovePause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.SetMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWalkSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRunSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::SetMoveSpeed(float InWalkSpeed, float InRunSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "SetMoveSpeed");

	Params::RCActorScript_SetMoveSpeed Parms{};

	Parms.InWalkSpeed = InWalkSpeed;
	Parms.InRunSpeed = InRunSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.SetPositionYaw
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::SetPositionYaw(const struct FVector& InPosition, float InYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "SetPositionYaw");

	Params::RCActorScript_SetPositionYaw Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.InYaw = InYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.SetTransformPlayerStartName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPlayerStartTagName                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::SetTransformPlayerStartName(class FName InPlayerStartTagName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "SetTransformPlayerStartName");

	Params::RCActorScript_SetTransformPlayerStartName Parms{};

	Parms.InPlayerStartTagName = InPlayerStartTagName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.SetTransformTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::SetTransformTargetPointName(class FName InPointName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "SetTransformTargetPointName");

	Params::RCActorScript_SetTransformTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.StartMoveFromPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InLength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndPlayerYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::StartMoveFromPlayer(float InLength, float InAngle, float InHeight, float SpeedScale, bool bEndPlayerYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "StartMoveFromPlayer");

	Params::RCActorScript_StartMoveFromPlayer Parms{};

	Parms.InLength = InLength;
	Parms.InAngle = InAngle;
	Parms.InHeight = InHeight;
	Parms.SpeedScale = SpeedScale;
	Parms.bEndPlayerYaw = bEndPlayerYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.StartMoveFromPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndChangeYawPosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::StartMoveFromPosition(const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bEndChangeYaw, const struct FVector& EndChangeYawPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "StartMoveFromPosition");

	Params::RCActorScript_StartMoveFromPosition Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.EndChangeYawPosition = std::move(EndChangeYawPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.StartMoveFromPositionList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRCScriptActorMoveInfo>   InMoveInfoList                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   StartMoveInfoNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::StartMoveFromPositionList(const TArray<struct FRCScriptActorMoveInfo>& InMoveInfoList, int32 StartMoveInfoNum, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "StartMoveFromPositionList");

	Params::RCActorScript_StartMoveFromPositionList Parms{};

	Parms.InMoveInfoList = std::move(InMoveInfoList);
	Parms.StartMoveInfoNum = StartMoveInfoNum;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.StartMoveFromTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InChangeYawSpeedScale                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::StartMoveFromTargetPointName(class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, bool bEndChangeYaw, float InOffsetYaw, float InChangeYawSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "StartMoveFromTargetPointName");

	Params::RCActorScript_StartMoveFromTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.InChangeYawSpeedScale = InChangeYawSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.StartRotationFromCharacter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTargetCharacterName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::StartRotationFromCharacter(class FName InTargetCharacterName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "StartRotationFromCharacter");

	Params::RCActorScript_StartRotationFromCharacter Parms{};

	Parms.InTargetCharacterName = InTargetCharacterName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.StartRotationFromPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::StartRotationFromPosition(const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "StartRotationFromPosition");

	Params::RCActorScript_StartRotationFromPosition Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.StartRotationFromTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::StartRotationFromTargetPointName(class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "StartRotationFromTargetPointName");

	Params::RCActorScript_StartRotationFromTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCActorScript.StartRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCActorScript::StartRotationYaw(float Yaw, float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCActorScript", "StartRotationYaw");

	Params::RCActorScript_StartRotationYaw Parms{};

	Parms.Yaw = Yaw;
	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCStartupWidget.Close
// (Final, Native, Public, BlueprintCallable)

void URCStartupWidget::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCStartupWidget.IsPlayingFinishAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCStartupWidget::IsPlayingFinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "IsPlayingFinishAnimation");

	Params::RCStartupWidget_IsPlayingFinishAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCStartupWidget.IsPlayingStartAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCStartupWidget::IsPlayingStartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "IsPlayingStartAnimation");

	Params::RCStartupWidget_IsPlayingStartAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCStartupWidget.IsPlayingWaitAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCStartupWidget::IsPlayingWaitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "IsPlayingWaitAnimation");

	Params::RCStartupWidget_IsPlayingWaitAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCStartupWidget.IsSkip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCStartupWidget::IsSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "IsSkip");

	Params::RCStartupWidget_IsSkip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCStartupWidget.Open
// (Final, Native, Public, BlueprintCallable)

void URCStartupWidget::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCStartupWidget.PlayFinishAnimation
// (Final, Native, Public, BlueprintCallable)

void URCStartupWidget::PlayFinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "PlayFinishAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCStartupWidget.PlayStartAnimation
// (Final, Native, Public, BlueprintCallable)

void URCStartupWidget::PlayStartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "PlayStartAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCStartupWidget.PlayWaitAnimation
// (Final, Native, Public, BlueprintCallable)

void URCStartupWidget::PlayWaitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "PlayWaitAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCStartupWidget.SetSkippableTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCStartupWidget::SetSkippableTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "SetSkippableTime");

	Params::RCStartupWidget_SetSkippableTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCStartupWidget.SetTimeCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCStartupWidget::SetTimeCount(bool isCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupWidget", "SetTimeCount");

	Params::RCStartupWidget_SetTimeCount Parms{};

	Parms.isCount = isCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCStartupAutoSave.IsHyoukaban
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCStartupAutoSave::IsHyoukaban()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupAutoSave", "IsHyoukaban");

	Params::RCStartupAutoSave_IsHyoukaban Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCStartupAutoSave.SaveIconFinish
// (Final, Native, Private, BlueprintCallable)

void URCStartupAutoSave::SaveIconFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCStartupAutoSave", "SaveIconFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCHUD.DebugCheckDrawHUD
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCHUD::DebugCheckDrawHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCHUD", "DebugCheckDrawHUD");

	Params::RCHUD_DebugCheckDrawHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCHUD.DebugSetDrawHUD
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    in_bDraw                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCHUD::DebugSetDrawHUD(bool in_bDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCHUD", "DebugSetDrawHUD");

	Params::RCHUD_DebugSetDrawHUD Parms{};

	Parms.in_bDraw = in_bDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCHUD.DebugToggleDrawHUD
// (Final, Exec, Native, Public, BlueprintCallable)

void ARCHUD::DebugToggleDrawHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCHUD", "DebugToggleDrawHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.CheckSaveLoadFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCUiFaderHUD::CheckSaveLoadFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "CheckSaveLoadFinished");

	Params::RCUiFaderHUD_CheckSaveLoadFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUD.FinishSceneChange
// (Final, Native, Public, BlueprintCallable)

void ARCUiFaderHUD::FinishSceneChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "FinishSceneChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.IsAllWidgetsHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCUiFaderHUD::IsAllWidgetsHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "IsAllWidgetsHidden");

	Params::RCUiFaderHUD_IsAllWidgetsHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUD.IsAllWidgetsHiddenEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCUiFaderHUD::IsAllWidgetsHiddenEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "IsAllWidgetsHiddenEnable");

	Params::RCUiFaderHUD_IsAllWidgetsHiddenEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUD.Option_Close
// (Final, Native, Public, BlueprintCallable)

void ARCUiFaderHUD::Option_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "Option_Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.Option_CreateWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCUiFaderHUD::Option_CreateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "Option_CreateWidget");

	Params::RCUiFaderHUD_Option_CreateWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUD.Option_IsFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCUiFaderHUD::Option_IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "Option_IsFinished");

	Params::RCUiFaderHUD_Option_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUD.Option_Load
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCUiFaderHUD::Option_Load()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "Option_Load");

	Params::RCUiFaderHUD_Option_Load Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUD.Option_Release
// (Final, Native, Public, BlueprintCallable)

void ARCUiFaderHUD::Option_Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "Option_Release");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.Option_Start
// (Final, Native, Public, BlueprintCallable)

void ARCUiFaderHUD::Option_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "Option_Start");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.OptionStartWrap
// (Final, Native, Public, BlueprintCallable)

void ARCUiFaderHUD::OptionStartWrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "OptionStartWrap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.SaveLoadFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCUiFaderHUD::SaveLoadFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "SaveLoadFinish");

	Params::RCUiFaderHUD_SaveLoadFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUD.SetAllWidgetsHidden
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHidden                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCUiFaderHUD::SetAllWidgetsHidden(bool bInHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "SetAllWidgetsHidden");

	Params::RCUiFaderHUD_SetAllWidgetsHidden Parms{};

	Parms.bInHidden = bInHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUD.SetAllWidgetsHiddenEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCUiFaderHUD::SetAllWidgetsHiddenEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "SetAllWidgetsHiddenEnable");

	Params::RCUiFaderHUD_SetAllWidgetsHiddenEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.SetSaveLoadFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isFinish                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCUiFaderHUD::SetSaveLoadFinished(bool isFinish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "SetSaveLoadFinished");

	Params::RCUiFaderHUD_SetSaveLoadFinished Parms{};

	Parms.isFinish = isFinish;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.StartSceneChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSceneChangeType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCUiFaderHUD::StartSceneChange(ERCSceneChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "StartSceneChange");

	Params::RCUiFaderHUD_StartSceneChange Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUD.StartSceneChangeLoadingTest
// (Final, Native, Public, BlueprintCallable)

void ARCUiFaderHUD::StartSceneChangeLoadingTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiFaderHUD", "StartSceneChangeLoadingTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiMessageWindow.ClearMessage
// (Final, Native, Public, BlueprintCallable)

void URCNzUiMessageWindow::ClearMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiMessageWindow", "ClearMessage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiMessageWindow.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiMessageWindow::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiMessageWindow", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiMessageWindow.GetMessStatusInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiMessageWindow::GetMessStatusInt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiMessageWindow", "GetMessStatusInt");

	Params::RCNzUiMessageWindow_GetMessStatusInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiMessageWindow.GetSkipTyping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiMessageWindow::GetSkipTyping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiMessageWindow", "GetSkipTyping");

	Params::RCNzUiMessageWindow_GetSkipTyping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiMessageWindow.InitializeMessageWindow
// (Final, Native, Public, BlueprintCallable)

void URCNzUiMessageWindow::InitializeMessageWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiMessageWindow", "InitializeMessageWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiMessageWindow.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InNameID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFacialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiMessageWindow::Open(class FName InNameID, class FName InFacialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiMessageWindow", "Open");

	Params::RCNzUiMessageWindow_Open Parms{};

	Parms.InNameID = InNameID;
	Parms.InFacialID = InFacialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiMessageWindow.SetMessageSpeed
// (Final, Native, Public, BlueprintCallable)

void URCNzUiMessageWindow::SetMessageSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiMessageWindow", "SetMessageSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiMessageWindow.SetShakeData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWidthX                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWidthY                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InInterval                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiMessageWindow::SetShakeData(float InWidthX, float InWidthY, float InInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiMessageWindow", "SetShakeData");

	Params::RCNzUiMessageWindow_SetShakeData Parms{};

	Parms.InWidthX = InWidthX;
	Parms.InWidthY = InWidthY;
	Parms.InInterval = InInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.GetPressedDecideButtonSimpleResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDPressedDecideResult            InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetPressedDecideButtonSimpleResult(ERCAdvHUDPressedDecideResult InResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUD", "GetPressedDecideButtonSimpleResult");

	Params::RCAdvHUD_GetPressedDecideButtonSimpleResult Parms{};

	Parms.InResult = InResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.AddLogAtSkip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAdvHUD::AddLogAtSkip(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "AddLogAtSkip");

	Params::RCAdvHUD_AddLogAtSkip Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.AllAccessableWidgetsClose
// (Final, Native, Public, BlueprintCallable)

void ARCAdvHUD::AllAccessableWidgetsClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "AllAccessableWidgetsClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.AllAccessableWidgetsOpen
// (Final, Native, Public, BlueprintCallable)

void ARCAdvHUD::AllAccessableWidgetsOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "AllAccessableWidgetsOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.AreaMapMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::AreaMapMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "AreaMapMenuFinish");

	Params::RCAdvHUD_AreaMapMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.AreaMapMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShortcut                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLocationID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::AreaMapMenuStart(bool bShortcut, class FName InLocationID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "AreaMapMenuStart");

	Params::RCAdvHUD_AreaMapMenuStart Parms{};

	Parms.bShortcut = bShortcut;
	Parms.InLocationID = InLocationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.BackLogFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::BackLogFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "BackLogFinish");

	Params::RCAdvHUD_BackLogFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.BackLogStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::BackLogStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "BackLogStart");

	Params::RCAdvHUD_BackLogStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.BattleKagiSelectMenuStart
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InKaiKagiIDArray                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InFocusIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::BattleKagiSelectMenuStart(const TArray<class FName>& InKaiKagiIDArray, int32 InFocusIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "BattleKagiSelectMenuStart");

	Params::RCAdvHUD_BattleKagiSelectMenuStart Parms{};

	Parms.InKaiKagiIDArray = std::move(InKaiKagiIDArray);
	Parms.InFocusIndex = InFocusIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.BusStop_IsVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::BusStop_IsVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "BusStop_IsVisible");

	Params::RCAdvHUD_BusStop_IsVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.BusStop_SetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLooksLikeUsable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::BusStop_SetData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInLooksLikeUsable, bool bInAccessable, float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "BusStop_SetData");

	Params::RCAdvHUD_BusStop_SetData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInLooksLikeUsable = bInLooksLikeUsable;
	Parms.bInAccessable = bInAccessable;
	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.BusStop_SetEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::BusStop_SetEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "BusStop_SetEnable");

	Params::RCAdvHUD_BusStop_SetEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ButtonGuideCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ButtonGuideCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ButtonGuideCheckFinished");

	Params::RCAdvHUD_ButtonGuideCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ButtonGuideCheckStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ButtonGuideCheckStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ButtonGuideCheckStarted");

	Params::RCAdvHUD_ButtonGuideCheckStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ButtonGuideFinish
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ButtonGuideFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ButtonGuideFinish");

	Params::RCAdvHUD_ButtonGuideFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ButtonGuideStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InModeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ButtonGuideStart(class FName InModeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ButtonGuideStart");

	Params::RCAdvHUD_ButtonGuideStart Parms{};

	Parms.InModeID = InModeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ChangeArea_IsVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ChangeArea_IsVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ChangeArea_IsVisible");

	Params::RCAdvHUD_ChangeArea_IsVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ChangeArea_SetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDrawText                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ChangeArea_SetData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInDrawText, float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ChangeArea_SetData");

	Params::RCAdvHUD_ChangeArea_SetData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInDrawText = bInDrawText;
	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ChangeArea_SetEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ChangeArea_SetEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ChangeArea_SetEnable");

	Params::RCAdvHUD_ChangeArea_SetEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CharacterMenuFinish
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CharacterMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CharacterMenuFinish");

	Params::RCAdvHUD_CharacterMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CharacterMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CharacterMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CharacterMenuStart");

	Params::RCAdvHUD_CharacterMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckAccessableWidgetReady
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckAccessableWidgetReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckAccessableWidgetReady");

	Params::RCAdvHUD_CheckAccessableWidgetReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckAccessedWidgetWait
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckAccessedWidgetWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckAccessedWidgetWait");

	Params::RCAdvHUD_CheckAccessedWidgetWait Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckAllAccessableWidgetsClosed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bInContainClosing                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckAllAccessableWidgetsClosed(bool bInContainClosing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckAllAccessableWidgetsClosed");

	Params::RCAdvHUD_CheckAllAccessableWidgetsClosed Parms{};

	Parms.bInContainClosing = bInContainClosing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckAllAccessableWidgetsOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckAllAccessableWidgetsOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckAllAccessableWidgetsOpened");

	Params::RCAdvHUD_CheckAllAccessableWidgetsOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckAllWidgetsClosed
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckAllWidgetsClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckAllWidgetsClosed");

	Params::RCAdvHUD_CheckAllWidgetsClosed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckAreaMapMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckAreaMapMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckAreaMapMenuFinished");

	Params::RCAdvHUD_CheckAreaMapMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckAreaMapMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckAreaMapMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckAreaMapMenuStarted");

	Params::RCAdvHUD_CheckAreaMapMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCharacterMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCharacterMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCharacterMenuClose");

	Params::RCAdvHUD_CheckCharacterMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCharacterMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCharacterMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCharacterMenuFinished");

	Params::RCAdvHUD_CheckCharacterMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCharacterMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCharacterMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCharacterMenuStarted");

	Params::RCAdvHUD_CheckCharacterMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCollectionMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCollectionMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCollectionMenuClose");

	Params::RCAdvHUD_CheckCollectionMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCollectionMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCollectionMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCollectionMenuFinished");

	Params::RCAdvHUD_CheckCollectionMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCollectionMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCollectionMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCollectionMenuStarted");

	Params::RCAdvHUD_CheckCollectionMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCollectionWindowStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCollectionWindowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCollectionWindowStarted");

	Params::RCAdvHUD_CheckCollectionWindowStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCutInAnimFinishedAnim
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCutInAnimFinishedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCutInAnimFinishedAnim");

	Params::RCAdvHUD_CheckCutInAnimFinishedAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCutInAnimLoadCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCutInAnimLoadCompleted(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCutInAnimLoadCompleted");

	Params::RCAdvHUD_CheckCutInAnimLoadCompleted Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCutInAnimNextEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCutInAnimNextEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCutInAnimNextEnable");

	Params::RCAdvHUD_CheckCutInAnimNextEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCutInCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCutInCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCutInCheckFinished");

	Params::RCAdvHUD_CheckCutInCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckCutInCheckStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckCutInCheckStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckCutInCheckStarted");

	Params::RCAdvHUD_CheckCutInCheckStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckDetPointCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckDetPointCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckDetPointCheckFinished");

	Params::RCAdvHUD_CheckDetPointCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckDetPointCheckStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckDetPointCheckStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckDetPointCheckStarted");

	Params::RCAdvHUD_CheckDetPointCheckStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckFinishedKaiKagiSelect
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckFinishedKaiKagiSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckFinishedKaiKagiSelect");

	Params::RCAdvHUD_CheckFinishedKaiKagiSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckGlossaryMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckGlossaryMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckGlossaryMenuClose");

	Params::RCAdvHUD_CheckGlossaryMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckGlossaryMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckGlossaryMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckGlossaryMenuFinished");

	Params::RCAdvHUD_CheckGlossaryMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckGlossaryMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckGlossaryMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckGlossaryMenuStarted");

	Params::RCAdvHUD_CheckGlossaryMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckInitialized");

	Params::RCAdvHUD_CheckInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckKagiMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckKagiMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckKagiMenuClose");

	Params::RCAdvHUD_CheckKagiMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckKagiMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckKagiMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckKagiMenuFinished");

	Params::RCAdvHUD_CheckKagiMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckKagiMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckKagiMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckKagiMenuStarted");

	Params::RCAdvHUD_CheckKagiMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckKagiSelectMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckKagiSelectMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckKagiSelectMenuFinished");

	Params::RCAdvHUD_CheckKagiSelectMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckKagiSelectMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckKagiSelectMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckKagiSelectMenuStarted");

	Params::RCAdvHUD_CheckKagiSelectMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckMainQuestMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckMainQuestMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckMainQuestMenuClose");

	Params::RCAdvHUD_CheckMainQuestMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckMainQuestMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckMainQuestMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckMainQuestMenuFinished");

	Params::RCAdvHUD_CheckMainQuestMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckMainQuestMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckMainQuestMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckMainQuestMenuStarted");

	Params::RCAdvHUD_CheckMainQuestMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckMenuGuideFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckMenuGuideFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckMenuGuideFinished");

	Params::RCAdvHUD_CheckMenuGuideFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckMenuGuideStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckMenuGuideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckMenuGuideStarted");

	Params::RCAdvHUD_CheckMenuGuideStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckMovieSkipFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckMovieSkipFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckMovieSkipFinished");

	Params::RCAdvHUD_CheckMovieSkipFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckMovieSkipStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckMovieSkipStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckMovieSkipStarted");

	Params::RCAdvHUD_CheckMovieSkipStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckNzResultClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckNzResultClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckNzResultClose");

	Params::RCAdvHUD_CheckNzResultClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckNzResultFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckNzResultFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckNzResultFinished");

	Params::RCAdvHUD_CheckNzResultFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckNzResultStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckNzResultStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckNzResultStarted");

	Params::RCAdvHUD_CheckNzResultStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckResearch
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckResearch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckResearch");

	Params::RCAdvHUD_CheckResearch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckResearchDetail
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckResearchDetail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckResearchDetail");

	Params::RCAdvHUD_CheckResearchDetail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckResearchModeFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckResearchModeFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckResearchModeFinished");

	Params::RCAdvHUD_CheckResearchModeFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialSubtitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialSubtitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialSubtitle");

	Params::RCAdvHUD_CheckSequentialSubtitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialSubtitleCloseAtAllEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialSubtitleCloseAtAllEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialSubtitleCloseAtAllEnd");

	Params::RCAdvHUD_CheckSequentialSubtitleCloseAtAllEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialSubtitleFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialSubtitleFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialSubtitleFinished");

	Params::RCAdvHUD_CheckSequentialSubtitleFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialSubtitleFinishedLastText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialSubtitleFinishedLastText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialSubtitleFinishedLastText");

	Params::RCAdvHUD_CheckSequentialSubtitleFinishedLastText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialSubtitleFromSubtitleID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InSubtitleID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialSubtitleFromSubtitleID(class FName InSubtitleID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialSubtitleFromSubtitleID");

	Params::RCAdvHUD_CheckSequentialSubtitleFromSubtitleID Parms{};

	Parms.InSubtitleID = InSubtitleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialTalk");

	Params::RCAdvHUD_CheckSequentialTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialTalkCloseAtAllEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialTalkCloseAtAllEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialTalkCloseAtAllEnd");

	Params::RCAdvHUD_CheckSequentialTalkCloseAtAllEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialTalkFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialTalkFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialTalkFinished");

	Params::RCAdvHUD_CheckSequentialTalkFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialTalkFinishedLastText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialTalkFinishedLastText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialTalkFinishedLastText");

	Params::RCAdvHUD_CheckSequentialTalkFinishedLastText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialTalkFromTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InTalkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialTalkFromTalkID(class FName InTalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialTalkFromTalkID");

	Params::RCAdvHUD_CheckSequentialTalkFromTalkID Parms{};

	Parms.InTalkID = InTalkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSequentialTalkSuspending
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSequentialTalkSuspending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSequentialTalkSuspending");

	Params::RCAdvHUD_CheckSequentialTalkSuspending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSkillGetInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSkillGetInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSkillGetInterval");

	Params::RCAdvHUD_CheckSkillGetInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSkillMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSkillMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSkillMenuClose");

	Params::RCAdvHUD_CheckSkillMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSkillMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSkillMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSkillMenuFinished");

	Params::RCAdvHUD_CheckSkillMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSkillMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSkillMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSkillMenuStarted");

	Params::RCAdvHUD_CheckSkillMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSkillSelectMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSkillSelectMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSkillSelectMenuClose");

	Params::RCAdvHUD_CheckSkillSelectMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSkillSelectMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSkillSelectMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSkillSelectMenuFinished");

	Params::RCAdvHUD_CheckSkillSelectMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSkillSelectMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSkillSelectMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSkillSelectMenuStarted");

	Params::RCAdvHUD_CheckSkillSelectMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSubQuestMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSubQuestMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSubQuestMenuClose");

	Params::RCAdvHUD_CheckSubQuestMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSubQuestMenuFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSubQuestMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSubQuestMenuFinished");

	Params::RCAdvHUD_CheckSubQuestMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSubQuestMenuStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSubQuestMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSubQuestMenuStarted");

	Params::RCAdvHUD_CheckSubQuestMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckSubtitleEndDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckSubtitleEndDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckSubtitleEndDelay");

	Params::RCAdvHUD_CheckSubtitleEndDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTalkEndText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTalkEndText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTalkEndText");

	Params::RCAdvHUD_CheckTalkEndText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTalkFinished
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTalkFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTalkFinished");

	Params::RCAdvHUD_CheckTalkFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTalkSkipVoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTalkSkipVoice(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTalkSkipVoice");

	Params::RCAdvHUD_CheckTalkSkipVoice Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTalkStarted
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTalkStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTalkStarted");

	Params::RCAdvHUD_CheckTalkStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTalkWindow
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTalkWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTalkWindow");

	Params::RCAdvHUD_CheckTalkWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTalkWindowClosed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDTalkWindowType                 InWindowType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTalkWindowClosed(ERCAdvHUDTalkWindowType InWindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTalkWindowClosed");

	Params::RCAdvHUD_CheckTalkWindowClosed Parms{};

	Parms.InWindowType = InWindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTopMenuCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTopMenuCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTopMenuCheckFinished");

	Params::RCAdvHUD_CheckTopMenuCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTopMenuCheckStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTopMenuCheckStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTopMenuCheckStarted");

	Params::RCAdvHUD_CheckTopMenuCheckStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CheckTopMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CheckTopMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CheckTopMenuClose");

	Params::RCAdvHUD_CheckTopMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ClearMenuHelpText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ClearMenuHelpText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ClearMenuHelpText");

	Params::RCAdvHUD_ClearMenuHelpText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CollectionMenuFinish
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CollectionMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CollectionMenuFinish");

	Params::RCAdvHUD_CollectionMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CollectionMenuFinishForFooterAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CollectionMenuFinishForFooterAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CollectionMenuFinishForFooterAnimation");

	Params::RCAdvHUD_CollectionMenuFinishForFooterAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CollectionMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CollectionMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CollectionMenuStart");

	Params::RCAdvHUD_CollectionMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CollectionWindowFinish
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CollectionWindowFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CollectionWindowFinish");

	Params::RCAdvHUD_CollectionWindowFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CutInAnimAllRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CutInAnimAllRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CutInAnimAllRelease");

	Params::RCAdvHUD_CutInAnimAllRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CutInAnimNext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CutInAnimNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CutInAnimNext");

	Params::RCAdvHUD_CutInAnimNext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CutInAnimRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CutInAnimRelease(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CutInAnimRelease");

	Params::RCAdvHUD_CutInAnimRelease Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CutInAnimStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInReleaseWBPAtFinished                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CutInAnimStart(class FName InCutInID, bool bInReleaseWBPAtFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CutInAnimStart");

	Params::RCAdvHUD_CutInAnimStart Parms{};

	Parms.InCutInID = InCutInID;
	Parms.bInReleaseWBPAtFinished = bInReleaseWBPAtFinished;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CutInAnimStartLoad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CutInAnimStartLoad(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CutInAnimStartLoad");

	Params::RCAdvHUD_CutInAnimStartLoad Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CutInFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CutInFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CutInFinish");

	Params::RCAdvHUD_CutInFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.CutInStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::CutInStart(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "CutInStart");

	Params::RCAdvHUD_CutInStart Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.DetPointFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::DetPointFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "DetPointFinish");

	Params::RCAdvHUD_DetPointFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.DetPointStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::DetPointStart(int32 InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "DetPointStart");

	Params::RCAdvHUD_DetPointStart Parms{};

	Parms.InPoint = InPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.EnterBuilding_IsVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::EnterBuilding_IsVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "EnterBuilding_IsVisible");

	Params::RCAdvHUD_EnterBuilding_IsVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.EnterBuilding_SetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::EnterBuilding_SetData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInAccessable, float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "EnterBuilding_SetData");

	Params::RCAdvHUD_EnterBuilding_SetData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInAccessable = bInAccessable;
	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.EnterBuilding_SetEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::EnterBuilding_SetEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "EnterBuilding_SetEnable");

	Params::RCAdvHUD_EnterBuilding_SetEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ForceFinishKaiKagiSelect
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ForceFinishKaiKagiSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ForceFinishKaiKagiSelect");

	Params::RCAdvHUD_ForceFinishKaiKagiSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAccessedCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCharacterRender* ARCAdvHUD::GetAccessedCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAccessedCharacter");

	Params::RCAdvHUD_GetAccessedCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAccessedCheckActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCheckActor* ARCAdvHUD::GetAccessedCheckActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAccessedCheckActor");

	Params::RCAdvHUD_GetAccessedCheckActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAccessedNPC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCPawnRender*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCPawnRender* ARCAdvHUD::GetAccessedNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAccessedNPC");

	Params::RCAdvHUD_GetAccessedNPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAreaMapID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCAdvHUD::GetAreaMapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAreaMapID");

	Params::RCAdvHUD_GetAreaMapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAreaMapMenuCancel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetAreaMapMenuCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAreaMapMenuCancel");

	Params::RCAdvHUD_GetAreaMapMenuCancel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAreaMapMenuEnableFastTravel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InWorldMapID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetAreaMapMenuEnableFastTravel(class FName InWorldMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAreaMapMenuEnableFastTravel");

	Params::RCAdvHUD_GetAreaMapMenuEnableFastTravel Parms{};

	Parms.InWorldMapID = InWorldMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAreaMapMenuGoFastTravel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetAreaMapMenuGoFastTravel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAreaMapMenuGoFastTravel");

	Params::RCAdvHUD_GetAreaMapMenuGoFastTravel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAreaMapMenuNewAreaSePlayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetAreaMapMenuNewAreaSePlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAreaMapMenuNewAreaSePlayed");

	Params::RCAdvHUD_GetAreaMapMenuNewAreaSePlayed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetAreaMenuOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetAreaMenuOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetAreaMenuOpen");

	Params::RCAdvHUD_GetAreaMenuOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetBattleKagiMenuIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAdvHUD::GetBattleKagiMenuIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetBattleKagiMenuIndex");

	Params::RCAdvHUD_GetBattleKagiMenuIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetBusMenuCancel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetBusMenuCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetBusMenuCancel");

	Params::RCAdvHUD_GetBusMenuCancel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetInputMenuButtonGuideKeyType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetInputMenuButtonGuideKeyType(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetInputMenuButtonGuideKeyType");

	Params::RCAdvHUD_GetInputMenuButtonGuideKeyType Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetKagiSelectMenuIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAdvHUD::GetKagiSelectMenuIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetKagiSelectMenuIndex");

	Params::RCAdvHUD_GetKagiSelectMenuIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetKaiKagiSelectIndex
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAdvHUD::GetKaiKagiSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetKaiKagiSelectIndex");

	Params::RCAdvHUD_GetKaiKagiSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetKaiKagiSelectKaiKagiIDArray
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     OutKaiKagiIDArray                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCAdvHUD::GetKaiKagiSelectKaiKagiIDArray(TArray<class FName>* OutKaiKagiIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetKaiKagiSelectKaiKagiIDArray");

	Params::RCAdvHUD_GetKaiKagiSelectKaiKagiIDArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKaiKagiIDArray != nullptr)
		*OutKaiKagiIDArray = std::move(Parms.OutKaiKagiIDArray);
}


// Function RC.RCAdvHUD.GetMovieSkipUi
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URCUiMovieSkip*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCUiMovieSkip* ARCAdvHUD::GetMovieSkipUi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetMovieSkipUi");

	Params::RCAdvHUD_GetMovieSkipUi Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetNotClosedWidgetNames
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> ARCAdvHUD::GetNotClosedWidgetNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetNotClosedWidgetNames");

	Params::RCAdvHUD_GetNotClosedWidgetNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetSelectedMapID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCAdvHUD::GetSelectedMapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetSelectedMapID");

	Params::RCAdvHUD_GetSelectedMapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetSequentialSubtitleVoiceCharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAdvHUD::GetSequentialSubtitleVoiceCharacterID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetSequentialSubtitleVoiceCharacterID");

	Params::RCAdvHUD_GetSequentialSubtitleVoiceCharacterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetSequentialTalkVoiceCharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAdvHUD::GetSequentialTalkVoiceCharacterID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetSequentialTalkVoiceCharacterID");

	Params::RCAdvHUD_GetSequentialTalkVoiceCharacterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetSkillMenuOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GetSkillMenuOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetSkillMenuOpen");

	Params::RCAdvHUD_GetSkillMenuOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetSkillSelectIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAdvHUD::GetSkillSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetSkillSelectIndex");

	Params::RCAdvHUD_GetSkillSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetUsingTalkWidgetOldState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDWidgetState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDWidgetState ARCAdvHUD::GetUsingTalkWidgetOldState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetUsingTalkWidgetOldState");

	Params::RCAdvHUD_GetUsingTalkWidgetOldState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GetUsingTalkWidgetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDWidgetState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDWidgetState ARCAdvHUD::GetUsingTalkWidgetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GetUsingTalkWidgetState");

	Params::RCAdvHUD_GetUsingTalkWidgetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GlossaryMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GlossaryMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GlossaryMenuFinish");

	Params::RCAdvHUD_GlossaryMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.GlossaryMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::GlossaryMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "GlossaryMenuStart");

	Params::RCAdvHUD_GlossaryMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsBackLogFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsBackLogFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsBackLogFinish");

	Params::RCAdvHUD_IsBackLogFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsBackLogStarted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsBackLogStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsBackLogStarted");

	Params::RCAdvHUD_IsBackLogStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsBalloonVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsBalloonVisible(class APawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsBalloonVisible");

	Params::RCAdvHUD_IsBalloonVisible Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsBattleKagiMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsBattleKagiMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsBattleKagiMenu");

	Params::RCAdvHUD_IsBattleKagiMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsBusMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsBusMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsBusMenu");

	Params::RCAdvHUD_IsBusMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsCanGlossaryMenuClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsCanGlossaryMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsCanGlossaryMenuClose");

	Params::RCAdvHUD_IsCanGlossaryMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsCollectionWindowFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsCollectionWindowFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsCollectionWindowFinished");

	Params::RCAdvHUD_IsCollectionWindowFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsKagiMenuLarge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsKagiMenuLarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsKagiMenuLarge");

	Params::RCAdvHUD_IsKagiMenuLarge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsKagiSelectMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsKagiSelectMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsKagiSelectMenu");

	Params::RCAdvHUD_IsKagiSelectMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsKagiSelectMenuLarge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsKagiSelectMenuLarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsKagiSelectMenuLarge");

	Params::RCAdvHUD_IsKagiSelectMenuLarge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsMarkerVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsMarkerVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsMarkerVisible");

	Params::RCAdvHUD_IsMarkerVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.IsTalkIconVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::IsTalkIconVisible(class APawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "IsTalkIconVisible");

	Params::RCAdvHUD_IsTalkIconVisible Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.KagiMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::KagiMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "KagiMenuFinish");

	Params::RCAdvHUD_KagiMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.KagiMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::KagiMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "KagiMenuStart");

	Params::RCAdvHUD_KagiMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.KagiSelectMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::KagiSelectMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "KagiSelectMenuFinish");

	Params::RCAdvHUD_KagiSelectMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.KagiSelectMenuStart
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InKaiKagiIDArray                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bInNotPause                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::KagiSelectMenuStart(const TArray<class FName>& InKaiKagiIDArray, bool bInNotPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "KagiSelectMenuStart");

	Params::RCAdvHUD_KagiSelectMenuStart Parms{};

	Parms.InKaiKagiIDArray = std::move(InKaiKagiIDArray);
	Parms.bInNotPause = bInNotPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.KagiSelectMenuStart2
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InKaiKagiIDArray                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             InQuestionTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInNotPause                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAcceptCancel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDebugCorrectIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::KagiSelectMenuStart2(const TArray<class FName>& InKaiKagiIDArray, class FName InQuestionTextID, bool bInNotPause, bool bInAcceptCancel, int32 InDebugCorrectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "KagiSelectMenuStart2");

	Params::RCAdvHUD_KagiSelectMenuStart2 Parms{};

	Parms.InKaiKagiIDArray = std::move(InKaiKagiIDArray);
	Parms.InQuestionTextID = InQuestionTextID;
	Parms.bInNotPause = bInNotPause;
	Parms.bInAcceptCancel = bInAcceptCancel;
	Parms.InDebugCorrectIndex = InDebugCorrectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.MainQuestMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::MainQuestMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "MainQuestMenuFinish");

	Params::RCAdvHUD_MainQuestMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.MainQuestMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::MainQuestMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "MainQuestMenuStart");

	Params::RCAdvHUD_MainQuestMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.MenuGuideFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::MenuGuideFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "MenuGuideFinish");

	Params::RCAdvHUD_MenuGuideFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.MenuGuideStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::MenuGuideStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "MenuGuideStart");

	Params::RCAdvHUD_MenuGuideStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.MovieSkipFinish
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::MovieSkipFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "MovieSkipFinish");

	Params::RCAdvHUD_MovieSkipFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.MovieSkipStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::MovieSkipStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "MovieSkipStart");

	Params::RCAdvHUD_MovieSkipStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.NzResultFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::NzResultFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "NzResultFinish");

	Params::RCAdvHUD_NzResultFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.NzResultStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapterNumber                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::NzResultStart(const int32 InChapterNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "NzResultStart");

	Params::RCAdvHUD_NzResultStart Parms{};

	Parms.InChapterNumber = InChapterNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.OnButtonGuideClick_ADV2StepResearchBack
// (Final, Native, Private)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAdvHUD::OnButtonGuideClick_ADV2StepResearchBack(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "OnButtonGuideClick_ADV2StepResearchBack");

	Params::RCAdvHUD_OnButtonGuideClick_ADV2StepResearchBack Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.OnButtonGuideClick_ADVHolding
// (Final, Native, Private)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAdvHUD::OnButtonGuideClick_ADVHolding(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "OnButtonGuideClick_ADVHolding");

	Params::RCAdvHUD_OnButtonGuideClick_ADVHolding Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.OpenCollectionWindowStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   TextArray                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::OpenCollectionWindowStart(const TArray<class FString>& TextArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "OpenCollectionWindowStart");

	Params::RCAdvHUD_OpenCollectionWindowStart Parms{};

	Parms.TextArray = std::move(TextArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.PressedDecideButton
// (Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDPressedDecideResult            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDPressedDecideResult ARCAdvHUD::PressedDecideButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "PressedDecideButton");

	Params::RCAdvHUD_PressedDecideButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.PressedDecideButtonSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::PressedDecideButtonSimple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "PressedDecideButtonSimple");

	Params::RCAdvHUD_PressedDecideButtonSimple Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailAutoSelectCheckActorMoveStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchDetailAutoSelectCheckActorMoveStart(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailAutoSelectCheckActorMoveStart");

	Params::RCAdvHUD_ResearchDetailAutoSelectCheckActorMoveStart Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailAutoSelectMoveStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMarkerDataIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchDetailAutoSelectMoveStart(int32 InMarkerDataIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailAutoSelectMoveStart");

	Params::RCAdvHUD_ResearchDetailAutoSelectMoveStart Parms{};

	Parms.InMarkerDataIndex = InMarkerDataIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailCheckAutoSelectMoveFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchDetailCheckAutoSelectMoveFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailCheckAutoSelectMoveFinished");

	Params::RCAdvHUD_ResearchDetailCheckAutoSelectMoveFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailFinish
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchDetailFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailFinish");

	Params::RCAdvHUD_ResearchDetailFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailGetAccessedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAdvHUD::ResearchDetailGetAccessedIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailGetAccessedIndex");

	Params::RCAdvHUD_ResearchDetailGetAccessedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailGetSelectIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAdvHUD::ResearchDetailGetSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailGetSelectIndex");

	Params::RCAdvHUD_ResearchDetailGetSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailPastVisionStart
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FRCAdvHUDResearchDetailStartData InStartData                                            (Parm, NativeAccessSpecifierPublic)
// bool                                    bInPast                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInEnableFinish                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchDetailPastVisionStart(const struct FRCAdvHUDResearchDetailStartData& InStartData, bool bInPast, bool bInEnableFinish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailPastVisionStart");

	Params::RCAdvHUD_ResearchDetailPastVisionStart Parms{};

	Parms.InStartData = std::move(InStartData);
	Parms.bInPast = bInPast;
	Parms.bInEnableFinish = bInEnableFinish;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailSpotSelectStart
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FRCAdvHUDResearchDetailStartData InStartData                                            (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchDetailSpotSelectStart(const struct FRCAdvHUDResearchDetailStartData& InStartData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailSpotSelectStart");

	Params::RCAdvHUD_ResearchDetailSpotSelectStart Parms{};

	Parms.InStartData = std::move(InStartData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchDetailStart
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FRCAdvHUDResearchDetailStartData InStartData                                            (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchDetailStart(const struct FRCAdvHUDResearchDetailStartData& InStartData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchDetailStart");

	Params::RCAdvHUD_ResearchDetailStart Parms{};

	Parms.InStartData = std::move(InStartData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchFinish
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchFinish");

	Params::RCAdvHUD_ResearchFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchFinishTelop_CheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchFinishTelop_CheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchFinishTelop_CheckFinished");

	Params::RCAdvHUD_ResearchFinishTelop_CheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchFinishTelop_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchFinishTelop_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchFinishTelop_Start");

	Params::RCAdvHUD_ResearchFinishTelop_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchGetKagi_CheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchGetKagi_CheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchGetKagi_CheckFinished");

	Params::RCAdvHUD_ResearchGetKagi_CheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchGetKagi_StartFromKagiID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKagiID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchGetKagi_StartFromKagiID(class FName InKagiID, int32 InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchGetKagi_StartFromKagiID");

	Params::RCAdvHUD_ResearchGetKagi_StartFromKagiID Parms{};

	Parms.InKagiID = InKagiID;
	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchLocation_CheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchLocation_CheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchLocation_CheckFinished");

	Params::RCAdvHUD_ResearchLocation_CheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchLocation_Finish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchLocation_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchLocation_Finish");

	Params::RCAdvHUD_ResearchLocation_Finish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchLocation_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InLocationID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLocationTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchLocation_Start(class FName InLocationID, class FName InLocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchLocation_Start");

	Params::RCAdvHUD_ResearchLocation_Start Parms{};

	Parms.InLocationID = InLocationID;
	Parms.InLocationTextID = InLocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchMarker_IsMarkerVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchMarker_IsMarkerVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchMarker_IsMarkerVisible");

	Params::RCAdvHUD_ResearchMarker_IsMarkerVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchMarker_SetEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchMarker_SetEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchMarker_SetEnable");

	Params::RCAdvHUD_ResearchMarker_SetEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchMarker_SetMarkerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInNameDraw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInResearched                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchMarker_SetMarkerData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInNameDraw, bool bInResearched, bool bInAccessable, float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchMarker_SetMarkerData");

	Params::RCAdvHUD_ResearchMarker_SetMarkerData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInNameDraw = bInNameDraw;
	Parms.bInResearched = bInResearched;
	Parms.bInAccessable = bInAccessable;
	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchModeFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchModeFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchModeFinish");

	Params::RCAdvHUD_ResearchModeFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchQuestionText_Finish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchQuestionText_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchQuestionText_Finish");

	Params::RCAdvHUD_ResearchQuestionText_Finish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchQuestionText_SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchQuestionText_SetText(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchQuestionText_SetText");

	Params::RCAdvHUD_ResearchQuestionText_SetText Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchQuestionText_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchQuestionText_Start(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchQuestionText_Start");

	Params::RCAdvHUD_ResearchQuestionText_Start Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchSpotJudgeTelop_CheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchSpotJudgeTelop_CheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchSpotJudgeTelop_CheckFinished");

	Params::RCAdvHUD_ResearchSpotJudgeTelop_CheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchSpotJudgeTelopCorrect_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchSpotJudgeTelopCorrect_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchSpotJudgeTelopCorrect_Start");

	Params::RCAdvHUD_ResearchSpotJudgeTelopCorrect_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchSpotJudgeTelopMistake_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchSpotJudgeTelopMistake_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchSpotJudgeTelopMistake_Start");

	Params::RCAdvHUD_ResearchSpotJudgeTelopMistake_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchSpotSelectStartTelop_CheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchSpotSelectStartTelop_CheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchSpotSelectStartTelop_CheckFinished");

	Params::RCAdvHUD_ResearchSpotSelectStartTelop_CheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchSpotSelectStartTelop_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchSpotSelectStartTelop_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchSpotSelectStartTelop_Start");

	Params::RCAdvHUD_ResearchSpotSelectStartTelop_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchStart
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShowLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInEnableFinish                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInMiniMap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchStart(bool bInShowLocation, bool bInEnableFinish, bool bInMiniMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchStart");

	Params::RCAdvHUD_ResearchStart Parms{};

	Parms.bInShowLocation = bInShowLocation;
	Parms.bInEnableFinish = bInEnableFinish;
	Parms.bInMiniMap = bInMiniMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchStartTelop_CheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchStartTelop_CheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchStartTelop_CheckFinished");

	Params::RCAdvHUD_ResearchStartTelop_CheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchStartTelop_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchStartTelop_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchStartTelop_Start");

	Params::RCAdvHUD_ResearchStartTelop_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResearchStartWithQuestionText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestionTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInEnableFinish                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInMiniMap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResearchStartWithQuestionText(class FName InQuestionTextID, bool bInEnableFinish, bool bInMiniMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResearchStartWithQuestionText");

	Params::RCAdvHUD_ResearchStartWithQuestionText Parms{};

	Parms.InQuestionTextID = InQuestionTextID;
	Parms.bInEnableFinish = bInEnableFinish;
	Parms.bInMiniMap = bInMiniMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResetSkillSelectFocus
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::ResetSkillSelectFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResetSkillSelectFocus");

	Params::RCAdvHUD_ResetSkillSelectFocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.ResetSubtitlePlayVoiceFlag
// (Final, Native, Public, BlueprintCallable)

void ARCAdvHUD::ResetSubtitlePlayVoiceFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "ResetSubtitlePlayVoiceFlag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.SequentialSubtitleCancel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInStopVoice                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleCancel(bool bInStopVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleCancel");

	Params::RCAdvHUD_SequentialSubtitleCancel Parms{};

	Parms.bInStopVoice = bInStopVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialSubtitleFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleFinish");

	Params::RCAdvHUD_SequentialSubtitleFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialSubtitleStart2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSubtitleID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCSubtitleData                  InSubtitleData                                         (Parm, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayToNext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCloseAtAllEnd                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisableSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleStart2(class FName InSubtitleID, const struct FRCSubtitleData& InSubtitleData, float InDelayAtEnd, float InDelayToNext, bool bInCloseAtAllEnd, bool bInDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleStart2");

	Params::RCAdvHUD_SequentialSubtitleStart2 Parms{};

	Parms.InSubtitleID = InSubtitleID;
	Parms.InSubtitleData = std::move(InSubtitleData);
	Parms.InDelayAtEnd = InDelayAtEnd;
	Parms.InDelayToNext = InDelayToNext;
	Parms.bInCloseAtAllEnd = bInCloseAtAllEnd;
	Parms.bInDisableSave = bInDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialSubtitleStart2NoVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSubtitleID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCSubtitleData                  InSubtitleData                                         (Parm, AdvancedDisplay, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayToNext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCloseAtAllEnd                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisableSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleStart2NoVoice(class FName InSubtitleID, const struct FRCSubtitleData& InSubtitleData, float InDelayAtEnd, float InDelayToNext, bool bInCloseAtAllEnd, bool bInDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleStart2NoVoice");

	Params::RCAdvHUD_SequentialSubtitleStart2NoVoice Parms{};

	Parms.InSubtitleID = InSubtitleID;
	Parms.InSubtitleData = std::move(InSubtitleData);
	Parms.InDelayAtEnd = InDelayAtEnd;
	Parms.InDelayToNext = InDelayToNext;
	Parms.bInCloseAtAllEnd = bInCloseAtAllEnd;
	Parms.bInDisableSave = bInDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialSubtitleStartFromData2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCSubtitleData                  InSubtitleData                                         (Parm, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayToNext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCloseAtAllEnd                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisableSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleStartFromData2(const struct FRCSubtitleData& InSubtitleData, float InDelayAtEnd, float InDelayToNext, bool bInCloseAtAllEnd, bool bInDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleStartFromData2");

	Params::RCAdvHUD_SequentialSubtitleStartFromData2 Parms{};

	Parms.InSubtitleData = std::move(InSubtitleData);
	Parms.InDelayAtEnd = InDelayAtEnd;
	Parms.InDelayToNext = InDelayToNext;
	Parms.bInCloseAtAllEnd = bInCloseAtAllEnd;
	Parms.bInDisableSave = bInDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialSubtitleStartFromDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InTable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSubtitleID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayToNext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCloseAtAllEnd                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisableSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleStartFromDataTable(class UDataTable* InTable, class FName InSubtitleID, float InDelayAtEnd, float InDelayToNext, bool bInCloseAtAllEnd, bool bInDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleStartFromDataTable");

	Params::RCAdvHUD_SequentialSubtitleStartFromDataTable Parms{};

	Parms.InTable = InTable;
	Parms.InSubtitleID = InSubtitleID;
	Parms.InDelayAtEnd = InDelayAtEnd;
	Parms.InDelayToNext = InDelayToNext;
	Parms.bInCloseAtAllEnd = bInCloseAtAllEnd;
	Parms.bInDisableSave = bInDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialSubtitleStartFromDataTable_WaitPush
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InTable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSubtitleID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayToNext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCloseAtAllEnd                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisableSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleStartFromDataTable_WaitPush(class UDataTable* InTable, class FName InSubtitleID, float InDelayAtEnd, float InDelayToNext, bool bInCloseAtAllEnd, bool bInDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleStartFromDataTable_WaitPush");

	Params::RCAdvHUD_SequentialSubtitleStartFromDataTable_WaitPush Parms{};

	Parms.InTable = InTable;
	Parms.InSubtitleID = InSubtitleID;
	Parms.InDelayAtEnd = InDelayAtEnd;
	Parms.InDelayToNext = InDelayToNext;
	Parms.bInCloseAtAllEnd = bInCloseAtAllEnd;
	Parms.bInDisableSave = bInDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialSubtitleStartFromSubtitleID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSubtitleID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayToNext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCloseAtAllEnd                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisableSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleStartFromSubtitleID(class FName InSubtitleID, float InDelayAtEnd, float InDelayToNext, bool bInCloseAtAllEnd, bool bInDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleStartFromSubtitleID");

	Params::RCAdvHUD_SequentialSubtitleStartFromSubtitleID Parms{};

	Parms.InSubtitleID = InSubtitleID;
	Parms.InDelayAtEnd = InDelayAtEnd;
	Parms.InDelayToNext = InDelayToNext;
	Parms.bInCloseAtAllEnd = bInCloseAtAllEnd;
	Parms.bInDisableSave = bInDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialSubtitleStartFromSubtitleIDForMovie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSubtitleID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayToNext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCloseAtAllEnd                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisableSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialSubtitleStartFromSubtitleIDForMovie(class FName InSubtitleID, float InDelayAtEnd, float InDelayToNext, bool bInCloseAtAllEnd, bool bInDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialSubtitleStartFromSubtitleIDForMovie");

	Params::RCAdvHUD_SequentialSubtitleStartFromSubtitleIDForMovie Parms{};

	Parms.InSubtitleID = InSubtitleID;
	Parms.InDelayAtEnd = InDelayAtEnd;
	Parms.InDelayToNext = InDelayToNext;
	Parms.bInCloseAtAllEnd = bInCloseAtAllEnd;
	Parms.bInDisableSave = bInDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialTalkFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialTalkFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialTalkFinish");

	Params::RCAdvHUD_SequentialTalkFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialTalkForceFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialTalkForceFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialTalkForceFinish");

	Params::RCAdvHUD_SequentialTalkForceFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialTalkRequestSuspend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialTalkRequestSuspend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialTalkRequestSuspend");

	Params::RCAdvHUD_SequentialTalkRequestSuspend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialTalkResume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialTalkResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialTalkResume");

	Params::RCAdvHUD_SequentialTalkResume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialTalkStart2
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTalkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCTalkData                      InTalkData                                             (Parm, NativeAccessSpecifierPublic)
// bool                                    bInForceAutoPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialTalkStart2(class FName InTalkID, const struct FRCTalkData& InTalkData, bool bInForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialTalkStart2");

	Params::RCAdvHUD_SequentialTalkStart2 Parms{};

	Parms.InTalkID = InTalkID;
	Parms.InTalkData = std::move(InTalkData);
	Parms.bInForceAutoPlay = bInForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialTalkStartFromData2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCTalkData                      InTalkData                                             (Parm, NativeAccessSpecifierPublic)
// bool                                    bInForceAutoPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialTalkStartFromData2(const struct FRCTalkData& InTalkData, bool bInForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialTalkStartFromData2");

	Params::RCAdvHUD_SequentialTalkStartFromData2 Parms{};

	Parms.InTalkData = std::move(InTalkData);
	Parms.bInForceAutoPlay = bInForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialTalkStartFromDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InTable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTalkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInForceAutoPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialTalkStartFromDataTable(class UDataTable* InTable, class FName InTalkID, bool bInForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialTalkStartFromDataTable");

	Params::RCAdvHUD_SequentialTalkStartFromDataTable Parms{};

	Parms.InTable = InTable;
	Parms.InTalkID = InTalkID;
	Parms.bInForceAutoPlay = bInForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SequentialTalkStartFromTalkID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTalkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInForceAutoPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SequentialTalkStartFromTalkID(class FName InTalkID, bool bInForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SequentialTalkStartFromTalkID");

	Params::RCAdvHUD_SequentialTalkStartFromTalkID Parms{};

	Parms.InTalkID = InTalkID;
	Parms.bInForceAutoPlay = bInForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SetAreaMapMenuNewAreaSePlayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPlayedNewAreaSE                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAdvHUD::SetAreaMapMenuNewAreaSePlayed(bool bInPlayedNewAreaSE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SetAreaMapMenuNewAreaSePlayed");

	Params::RCAdvHUD_SetAreaMapMenuNewAreaSePlayed Parms{};

	Parms.bInPlayedNewAreaSE = bInPlayedNewAreaSE;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.SetBalloonData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCBaloonFrame                          InBalloonFrameType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCBaloonType                           InBalloonContentType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBalloonDraw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInTextDraw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SetBalloonData(class APawn* InPawn, ESCBaloonFrame InBalloonFrameType, ESCBaloonType InBalloonContentType, class FName InTextID, bool bInBalloonDraw, bool bInTextDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SetBalloonData");

	Params::RCAdvHUD_SetBalloonData Parms{};

	Parms.InPawn = InPawn;
	Parms.InBalloonFrameType = InBalloonFrameType;
	Parms.InBalloonContentType = InBalloonContentType;
	Parms.InTextID = InTextID;
	Parms.bInBalloonDraw = bInBalloonDraw;
	Parms.bInTextDraw = bInTextDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SetMarkerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSubquest                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInGoal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SetMarkerData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInAccessable, bool bInSubquest, float InScale, bool bInGoal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SetMarkerData");

	Params::RCAdvHUD_SetMarkerData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInAccessable = bInAccessable;
	Parms.bInSubquest = bInSubquest;
	Parms.InScale = InScale;
	Parms.bInGoal = bInGoal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SetMenuButtonGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InModeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayOpenAnim                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SetMenuButtonGuide(class FName InModeID, bool bPlayOpenAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SetMenuButtonGuide");

	Params::RCAdvHUD_SetMenuButtonGuide Parms{};

	Parms.InModeID = InModeID;
	Parms.bPlayOpenAnim = bPlayOpenAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SetMenuButtonGuideResetKeyType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SetMenuButtonGuideResetKeyType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SetMenuButtonGuideResetKeyType");

	Params::RCAdvHUD_SetMenuButtonGuideResetKeyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SetMenuHelpText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InHelpTextID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SetMenuHelpText(class FName InHelpTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SetMenuHelpText");

	Params::RCAdvHUD_SetMenuHelpText Parms{};

	Parms.InHelpTextID = InHelpTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SetShinigamiActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InShinigamiActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAdvHUD::SetShinigamiActor(class ARCCharacterRender* InShinigamiActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SetShinigamiActor");

	Params::RCAdvHUD_SetShinigamiActor Parms{};

	Parms.InShinigamiActor = InShinigamiActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.SetTalkIconData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSubquest                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInGoal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SetTalkIconData(class APawn* InPawn, bool bInDraw, bool bInAccessable, bool bInSubquest, float InScale, bool bInGoal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SetTalkIconData");

	Params::RCAdvHUD_SetTalkIconData Parms{};

	Parms.InPawn = InPawn;
	Parms.bInDraw = bInDraw;
	Parms.bInAccessable = bInAccessable;
	Parms.bInSubquest = bInSubquest;
	Parms.InScale = InScale;
	Parms.bInGoal = bInGoal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SkillMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SkillMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SkillMenuFinish");

	Params::RCAdvHUD_SkillMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SkillMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SkillMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SkillMenuStart");

	Params::RCAdvHUD_SkillMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SkillSelectMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SkillSelectMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SkillSelectMenuFinish");

	Params::RCAdvHUD_SkillSelectMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SkillSelectMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SkillSelectMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SkillSelectMenuStart");

	Params::RCAdvHUD_SkillSelectMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.StartKaiKagiSelect
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InKaiKagiIDArray                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             InCorrectKaiKagiID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInNotPause                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::StartKaiKagiSelect(const TArray<class FName>& InKaiKagiIDArray, class FName InCorrectKaiKagiID, bool bInNotPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "StartKaiKagiSelect");

	Params::RCAdvHUD_StartKaiKagiSelect Parms{};

	Parms.InKaiKagiIDArray = std::move(InKaiKagiIDArray);
	Parms.InCorrectKaiKagiID = InCorrectKaiKagiID;
	Parms.bInNotPause = bInNotPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubQuestMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubQuestMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubQuestMenuFinish");

	Params::RCAdvHUD_SubQuestMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubQuestMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubQuestMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubQuestMenuStart");

	Params::RCAdvHUD_SubQuestMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubtitleCancel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubtitleCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubtitleCancel");

	Params::RCAdvHUD_SubtitleCancel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubtitleFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubtitleFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubtitleFinish");

	Params::RCAdvHUD_SubtitleFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubtitleStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InNameID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEndVoice                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubtitleStart(class FName InNameID, class FName InTextID, float InDelayAtEndVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubtitleStart");

	Params::RCAdvHUD_SubtitleStart Parms{};

	Parms.InNameID = InNameID;
	Parms.InTextID = InTextID;
	Parms.InDelayAtEndVoice = InDelayAtEndVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubtitleStart_OnlyCursor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubtitleStart_OnlyCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubtitleStart_OnlyCursor");

	Params::RCAdvHUD_SubtitleStart_OnlyCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubtitleStart_WaitPush
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InNameID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEndVoice                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubtitleStart_WaitPush(class FName InNameID, class FName InTextID, float InDelayAtEndVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubtitleStart_WaitPush");

	Params::RCAdvHUD_SubtitleStart_WaitPush Parms{};

	Parms.InNameID = InNameID;
	Parms.InTextID = InTextID;
	Parms.InDelayAtEndVoice = InDelayAtEndVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubtitleStartFromCharacterID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterNameID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterNameSubID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEndVoice                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubtitleStartFromCharacterID(int32 InCharacterNameID, int32 InCharacterNameSubID, class FName InTextID, float InDelayAtEndVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubtitleStartFromCharacterID");

	Params::RCAdvHUD_SubtitleStartFromCharacterID Parms{};

	Parms.InCharacterNameID = InCharacterNameID;
	Parms.InCharacterNameSubID = InCharacterNameSubID;
	Parms.InTextID = InTextID;
	Parms.InDelayAtEndVoice = InDelayAtEndVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.SubtitleStartFromCharacterID_WaitPush
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterNameID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterNameSubID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEndVoice                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::SubtitleStartFromCharacterID_WaitPush(int32 InCharacterNameID, int32 InCharacterNameSubID, class FName InTextID, float InDelayAtEndVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "SubtitleStartFromCharacterID_WaitPush");

	Params::RCAdvHUD_SubtitleStartFromCharacterID_WaitPush Parms{};

	Parms.InCharacterNameID = InCharacterNameID;
	Parms.InCharacterNameSubID = InCharacterNameSubID;
	Parms.InTextID = InTextID;
	Parms.InDelayAtEndVoice = InDelayAtEndVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkFinish");

	Params::RCAdvHUD_TalkFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkForceFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkForceFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkForceFinish");

	Params::RCAdvHUD_TalkForceFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkLoadCharacterData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterNameID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterNameSubID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkLoadCharacterData(int32 InCharacterNameID, int32 InCharacterNameSubID, int32 InCharacterFaceID, int32 InCharacterFacialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkLoadCharacterData");

	Params::RCAdvHUD_TalkLoadCharacterData Parms{};

	Parms.InCharacterNameID = InCharacterNameID;
	Parms.InCharacterNameSubID = InCharacterNameSubID;
	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkLoadCharacterData2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterNameID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           InCharacterNameSubIDs                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           InCharacterFacialIDs                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkLoadCharacterData2(int32 InCharacterNameID, const TArray<int32>& InCharacterNameSubIDs, int32 InCharacterFaceID, const TArray<int32>& InCharacterFacialIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkLoadCharacterData2");

	Params::RCAdvHUD_TalkLoadCharacterData2 Parms{};

	Parms.InCharacterNameID = InCharacterNameID;
	Parms.InCharacterNameSubIDs = std::move(InCharacterNameSubIDs);
	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialIDs = std::move(InCharacterFacialIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkLoadFaceData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkLoadFaceData(int32 InCharacterFaceID, int32 InCharacterFacialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkLoadFaceData");

	Params::RCAdvHUD_TalkLoadFaceData Parms{};

	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkLoadNameplateData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterNameID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterNameSubID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkLoadNameplateData(int32 InCharacterNameID, int32 InCharacterNameSubID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkLoadNameplateData");

	Params::RCAdvHUD_TalkLoadNameplateData Parms{};

	Parms.InCharacterNameID = InCharacterNameID;
	Parms.InCharacterNameSubID = InCharacterNameSubID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkSetAuto
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAutoPlay                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkSetAuto(bool bInAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkSetAuto");

	Params::RCAdvHUD_TalkSetAuto Parms{};

	Parms.bInAutoPlay = bInAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkSetForceTextSpeedSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsForceTextSpeed                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InForceTextSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkSetForceTextSpeedSettings(bool bInIsForceTextSpeed, int32 InForceTextSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkSetForceTextSpeedSettings");

	Params::RCAdvHUD_TalkSetForceTextSpeedSettings Parms{};

	Parms.bInIsForceTextSpeed = bInIsForceTextSpeed;
	Parms.InForceTextSpeed = InForceTextSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkSetGradationFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InFilterID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkSetGradationFilter(class FName InFilterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkSetGradationFilter");

	Params::RCAdvHUD_TalkSetGradationFilter Parms{};

	Parms.InFilterID = InFilterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkSetText2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacter3DID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCharacter3DFacialID                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InVoiceID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEndText                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkSetText2(int32 InCharacterFaceID, int32 InCharacterFacialID, class FName InTextID, int32 InCharacter3DID, class FName InCharacter3DFacialID, class FName InVoiceID, float InDelayAtEndText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkSetText2");

	Params::RCAdvHUD_TalkSetText2 Parms{};

	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;
	Parms.InTextID = InTextID;
	Parms.InCharacter3DID = InCharacter3DID;
	Parms.InCharacter3DFacialID = InCharacter3DFacialID;
	Parms.InVoiceID = InVoiceID;
	Parms.InDelayAtEndText = InDelayAtEndText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkSetTextData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCAdvHUDTalkTextData            InTextData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkSetTextData(const struct FRCAdvHUDTalkTextData& InTextData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkSetTextData");

	Params::RCAdvHUD_TalkSetTextData Parms{};

	Parms.InTextData = std::move(InTextData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkSetTextSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEndText                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkSetTextSimple(class FName InTextID, float InDelayAtEndText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkSetTextSimple");

	Params::RCAdvHUD_TalkSetTextSimple Parms{};

	Parms.InTextID = InTextID;
	Parms.InDelayAtEndText = InDelayAtEndText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkStart2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDTalkWindowType                 InWindowType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoPlay                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkStart2(ERCAdvHUDTalkWindowType InWindowType, class FName InTextID, int32 InCharacterFaceID, int32 InCharacterFacialID, bool bInAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkStart2");

	Params::RCAdvHUD_TalkStart2 Parms{};

	Parms.InWindowType = InWindowType;
	Parms.InTextID = InTextID;
	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;
	Parms.bInAutoPlay = bInAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkStartSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDTalkWindowType                 InWindowType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkStartSimple(ERCAdvHUDTalkWindowType InWindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkStartSimple");

	Params::RCAdvHUD_TalkStartSimple Parms{};

	Parms.InWindowType = InWindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TalkWindowClose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDTalkWindowType                 InWindowType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TalkWindowClose(ERCAdvHUDTalkWindowType InWindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TalkWindowClose");

	Params::RCAdvHUD_TalkWindowClose Parms{};

	Parms.InWindowType = InWindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TopMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TopMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TopMenuFinish");

	Params::RCAdvHUD_TopMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.TopMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::TopMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "TopMenuStart");

	Params::RCAdvHUD_TopMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.Tutorial_CloseTutorial
// (Final, Native, Public, BlueprintCallable)

void ARCAdvHUD::Tutorial_CloseTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "Tutorial_CloseTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.Tutorial_CreateWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::Tutorial_CreateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "Tutorial_CreateWidget");

	Params::RCAdvHUD_Tutorial_CreateWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.Tutorial_IsFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::Tutorial_IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "Tutorial_IsFinished");

	Params::RCAdvHUD_Tutorial_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.Tutorial_IsShowWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::Tutorial_IsShowWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "Tutorial_IsShowWindow");

	Params::RCAdvHUD_Tutorial_IsShowWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.Tutorial_Load
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::Tutorial_Load()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "Tutorial_Load");

	Params::RCAdvHUD_Tutorial_Load Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.Tutorial_RemoveTutorialWindow
// (Final, Native, Public, BlueprintCallable)

void ARCAdvHUD::Tutorial_RemoveTutorialWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "Tutorial_RemoveTutorialWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.Tutorial_StartTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isAnytimeClosable                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAdvHUD::Tutorial_StartTutorial(class FName ID, bool isAnytimeClosable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "Tutorial_StartTutorial");

	Params::RCAdvHUD_Tutorial_StartTutorial Parms{};

	Parms.ID = ID;
	Parms.isAnytimeClosable = isAnytimeClosable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.UpdateCollectionFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAdvHUD::UpdateCollectionFlag(class FName CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "UpdateCollectionFlag");

	Params::RCAdvHUD_UpdateCollectionFlag Parms{};

	Parms.CharaID = CharaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUD.WorldMenuFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::WorldMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "WorldMenuFinish");

	Params::RCAdvHUD_WorldMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUD.WorldMenuStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAdvHUD::WorldMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUD", "WorldMenuStart");

	Params::RCAdvHUD_WorldMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CheckCutInAnimFinishedAnim
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CheckCutInAnimFinishedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CheckCutInAnimFinishedAnim");

	Params::RCAdvHUDAdvComponent_CheckCutInAnimFinishedAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CheckCutInAnimLoadCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CheckCutInAnimLoadCompleted(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CheckCutInAnimLoadCompleted");

	Params::RCAdvHUDAdvComponent_CheckCutInAnimLoadCompleted Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CheckCutInAnimNextEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CheckCutInAnimNextEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CheckCutInAnimNextEnable");

	Params::RCAdvHUDAdvComponent_CheckCutInAnimNextEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CheckCutInFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CheckCutInFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CheckCutInFinished");

	Params::RCAdvHUDAdvComponent_CheckCutInFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CheckCutInStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CheckCutInStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CheckCutInStarted");

	Params::RCAdvHUDAdvComponent_CheckCutInStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CheckDetPointCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CheckDetPointCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CheckDetPointCheckFinished");

	Params::RCAdvHUDAdvComponent_CheckDetPointCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CheckDetPointCheckStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CheckDetPointCheckStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CheckDetPointCheckStarted");

	Params::RCAdvHUDAdvComponent_CheckDetPointCheckStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CutInAnimAllRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CutInAnimAllRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CutInAnimAllRelease");

	Params::RCAdvHUDAdvComponent_CutInAnimAllRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CutInAnimNext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CutInAnimNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CutInAnimNext");

	Params::RCAdvHUDAdvComponent_CutInAnimNext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CutInAnimRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CutInAnimRelease(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CutInAnimRelease");

	Params::RCAdvHUDAdvComponent_CutInAnimRelease Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CutInAnimStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInReleaseWBPAtFinished                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CutInAnimStart(class FName InCutInID, bool bInReleaseWBPAtFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CutInAnimStart");

	Params::RCAdvHUDAdvComponent_CutInAnimStart Parms{};

	Parms.InCutInID = InCutInID;
	Parms.bInReleaseWBPAtFinished = bInReleaseWBPAtFinished;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CutInAnimStartLoad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CutInAnimStartLoad(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CutInAnimStartLoad");

	Params::RCAdvHUDAdvComponent_CutInAnimStartLoad Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CutInFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CutInFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CutInFinish");

	Params::RCAdvHUDAdvComponent_CutInFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.CutInStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::CutInStart(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "CutInStart");

	Params::RCAdvHUDAdvComponent_CutInStart Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.DetPointFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::DetPointFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "DetPointFinish");

	Params::RCAdvHUDAdvComponent_DetPointFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.DetPointStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsOpenedNzResult                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::DetPointStart(int32 InPoint, bool InIsOpenedNzResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "DetPointStart");

	Params::RCAdvHUDAdvComponent_DetPointStart Parms{};

	Parms.InPoint = InPoint;
	Parms.InIsOpenedNzResult = InIsOpenedNzResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.GetMarkerData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAdvHUDMarkerData              OutMarkerData                                          (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::GetMarkerData(int32 InIndex, struct FRCAdvHUDMarkerData* OutMarkerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "GetMarkerData");

	Params::RCAdvHUDAdvComponent_GetMarkerData Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMarkerData != nullptr)
		*OutMarkerData = std::move(Parms.OutMarkerData);

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.GetMarkerDataNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDAdvComponent::GetMarkerDataNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "GetMarkerDataNum");

	Params::RCAdvHUDAdvComponent_GetMarkerDataNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.IsMarkerVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::IsMarkerVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "IsMarkerVisible");

	Params::RCAdvHUDAdvComponent_IsMarkerVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDAdvComponent.SetMarkerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSubquest                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInGoal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDAdvComponent::SetMarkerData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInAccessable, bool bInSubquest, float InScale, bool bInGoal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDAdvComponent", "SetMarkerData");

	Params::RCAdvHUDAdvComponent_SetMarkerData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInAccessable = bInAccessable;
	Parms.bInSubquest = bInSubquest;
	Parms.InScale = InScale;
	Parms.bInGoal = bInGoal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzMTBManagerBase.AddKaikagi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewKaikagiID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzMTBManagerBase::AddKaikagi(class FName NewKaikagiID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "AddKaikagi");

	Params::RCNzMTBManagerBase_AddKaikagi Parms{};

	Parms.NewKaikagiID = NewKaikagiID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzMTBManagerBase.ChangeKaikagiList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewKaikagiListID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzMTBManagerBase::ChangeKaikagiList(class FName NewKaikagiListID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "ChangeKaikagiList");

	Params::RCNzMTBManagerBase_ChangeKaikagiList Parms{};

	Parms.NewKaikagiListID = NewKaikagiListID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTBManagerBase.CheckAnswerKaikagiID
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzMTBManagerBase::CheckAnswerKaikagiID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "CheckAnswerKaikagiID");

	Params::RCNzMTBManagerBase_CheckAnswerKaikagiID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzMTBManagerBase.DebugSetMaxVolumeMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzMTBManagerBase::DebugSetMaxVolumeMode(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "DebugSetMaxVolumeMode");

	Params::RCNzMTBManagerBase_DebugSetMaxVolumeMode Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTBManagerBase.GetCurrentSelectKaikagiID
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNzMTBManagerBase::GetCurrentSelectKaikagiID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "GetCurrentSelectKaikagiID");

	Params::RCNzMTBManagerBase_GetCurrentSelectKaikagiID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzMTBManagerBase.GetHP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzMTBManagerBase::GetHP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "GetHP");

	Params::RCNzMTBManagerBase_GetHP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzMTBManagerBase.IncrementResultData
// (Final, Native, Public, BlueprintCallable)

void ARCNzMTBManagerBase::IncrementResultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "IncrementResultData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTBManagerBase.IncrementResultData_AttackMiss
// (Final, Native, Public, BlueprintCallable)

void ARCNzMTBManagerBase::IncrementResultData_AttackMiss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "IncrementResultData_AttackMiss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTBManagerBase.LoadDataTable
// (Final, Native, Public, BlueprintCallable)

void ARCNzMTBManagerBase::LoadDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "LoadDataTable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTBManagerBase.SendResultData
// (Final, Native, Public, BlueprintCallable)

void ARCNzMTBManagerBase::SendResultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "SendResultData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTBManagerBase.SetDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldHP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewHP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzMTBManagerBase::SetDamage(int32 InDamage, int32* OldHP, int32* NewHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTBManagerBase", "SetDamage");

	Params::RCNzMTBManagerBase_SetDamage Parms{};

	Parms.InDamage = InDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OldHP != nullptr)
		*OldHP = Parms.OldHP;

	if (NewHP != nullptr)
		*NewHP = Parms.NewHP;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.AddLogAtSkip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::AddLogAtSkip(class FName TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "AddLogAtSkip");

	Params::RCAdvHUDBFL_AddLogAtSkip Parms{};

	Parms.TextID = TextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.AreaMapMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::AreaMapMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "AreaMapMenuFinish");

	Params::RCAdvHUDBFL_AreaMapMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.AreaMapMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bShortcut                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLocationID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::AreaMapMenuStart(bool bShortcut, class FName InLocationID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "AreaMapMenuStart");

	Params::RCAdvHUDBFL_AreaMapMenuStart Parms{};

	Parms.bShortcut = bShortcut;
	Parms.InLocationID = InLocationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CharacterMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CharacterMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CharacterMenuFinish");

	Params::RCAdvHUDBFL_CharacterMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CharacterMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CharacterMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CharacterMenuStart");

	Params::RCAdvHUDBFL_CharacterMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CharaIntegrationIDToFaceID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   IntegrationID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDBFL::CharaIntegrationIDToFaceID(int32 IntegrationID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CharaIntegrationIDToFaceID");

	Params::RCAdvHUDBFL_CharaIntegrationIDToFaceID Parms{};

	Parms.IntegrationID = IntegrationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckAreaMapMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckAreaMapMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckAreaMapMenuFinished");

	Params::RCAdvHUDBFL_CheckAreaMapMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckAreaMapMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckAreaMapMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckAreaMapMenuStarted");

	Params::RCAdvHUDBFL_CheckAreaMapMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckCharacterMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckCharacterMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCharacterMenuClose");

	Params::RCAdvHUDBFL_CheckCharacterMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckCharacterMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckCharacterMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCharacterMenuFinished");

	Params::RCAdvHUDBFL_CheckCharacterMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckCharacterMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckCharacterMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCharacterMenuStarted");

	Params::RCAdvHUDBFL_CheckCharacterMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckCollectionMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckCollectionMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCollectionMenuClose");

	Params::RCAdvHUDBFL_CheckCollectionMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckCollectionMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckCollectionMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCollectionMenuFinished");

	Params::RCAdvHUDBFL_CheckCollectionMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckCollectionMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckCollectionMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCollectionMenuStarted");

	Params::RCAdvHUDBFL_CheckCollectionMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckCutInAnimFinishedAnim
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bNextEnable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckCutInAnimFinishedAnim(bool* bNextEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCutInAnimFinishedAnim");

	Params::RCAdvHUDBFL_CheckCutInAnimFinishedAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bNextEnable != nullptr)
		*bNextEnable = Parms.bNextEnable;
}


// Function RC.RCAdvHUDBFL.CheckCutInAnimLoadCompleted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bLoaded                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CutInID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckCutInAnimLoadCompleted(bool* bLoaded, class FName CutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCutInAnimLoadCompleted");

	Params::RCAdvHUDBFL_CheckCutInAnimLoadCompleted Parms{};

	Parms.CutInID = CutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bLoaded != nullptr)
		*bLoaded = Parms.bLoaded;
}


// Function RC.RCAdvHUDBFL.CheckCutInAnimNextEnable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bNextEnable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckCutInAnimNextEnable(bool* bNextEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCutInAnimNextEnable");

	Params::RCAdvHUDBFL_CheckCutInAnimNextEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bNextEnable != nullptr)
		*bNextEnable = Parms.bNextEnable;
}


// Function RC.RCAdvHUDBFL.CheckCutInCheckFinished
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckCutInCheckFinished(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCutInCheckFinished");

	Params::RCAdvHUDBFL_CheckCutInCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckCutInCheckStarted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bStarted                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckCutInCheckStarted(bool* bStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckCutInCheckStarted");

	Params::RCAdvHUDBFL_CheckCutInCheckStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bStarted != nullptr)
		*bStarted = Parms.bStarted;
}


// Function RC.RCAdvHUDBFL.CheckDetPointCheckFinished
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckDetPointCheckFinished(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckDetPointCheckFinished");

	Params::RCAdvHUDBFL_CheckDetPointCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckDetPointCheckStarted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bStarted                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckDetPointCheckStarted(bool* bStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckDetPointCheckStarted");

	Params::RCAdvHUDBFL_CheckDetPointCheckStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bStarted != nullptr)
		*bStarted = Parms.bStarted;
}


// Function RC.RCAdvHUDBFL.CheckFinishedKaiKagiSelect
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckFinishedKaiKagiSelect(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckFinishedKaiKagiSelect");

	Params::RCAdvHUDBFL_CheckFinishedKaiKagiSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckGlossaryMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckGlossaryMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckGlossaryMenuClose");

	Params::RCAdvHUDBFL_CheckGlossaryMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckGlossaryMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckGlossaryMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckGlossaryMenuFinished");

	Params::RCAdvHUDBFL_CheckGlossaryMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckGlossaryMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckGlossaryMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckGlossaryMenuStarted");

	Params::RCAdvHUDBFL_CheckGlossaryMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckInitialized
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckInitialized");

	Params::RCAdvHUDBFL_CheckInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckKagiMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckKagiMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckKagiMenuFinished");

	Params::RCAdvHUDBFL_CheckKagiMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckKagiMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckKagiMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckKagiMenuStarted");

	Params::RCAdvHUDBFL_CheckKagiMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckMainQuestMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckMainQuestMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckMainQuestMenuClose");

	Params::RCAdvHUDBFL_CheckMainQuestMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckMainQuestMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckMainQuestMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckMainQuestMenuFinished");

	Params::RCAdvHUDBFL_CheckMainQuestMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckMainQuestMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckMainQuestMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckMainQuestMenuStarted");

	Params::RCAdvHUDBFL_CheckMainQuestMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckMenuGuideFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckMenuGuideFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckMenuGuideFinished");

	Params::RCAdvHUDBFL_CheckMenuGuideFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckMenuGuideStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckMenuGuideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckMenuGuideStarted");

	Params::RCAdvHUDBFL_CheckMenuGuideStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckNzResultClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckNzResultClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckNzResultClose");

	Params::RCAdvHUDBFL_CheckNzResultClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckNzResultFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckNzResultFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckNzResultFinished");

	Params::RCAdvHUDBFL_CheckNzResultFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckNzResultStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckNzResultStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckNzResultStarted");

	Params::RCAdvHUDBFL_CheckNzResultStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSequentialSubtitle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bRunning                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSequentialSubtitle(bool* bRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSequentialSubtitle");

	Params::RCAdvHUDBFL_CheckSequentialSubtitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bRunning != nullptr)
		*bRunning = Parms.bRunning;
}


// Function RC.RCAdvHUDBFL.CheckSequentialSubtitleCloseAtAllEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bClose                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSequentialSubtitleCloseAtAllEnd(bool* bClose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSequentialSubtitleCloseAtAllEnd");

	Params::RCAdvHUDBFL_CheckSequentialSubtitleCloseAtAllEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bClose != nullptr)
		*bClose = Parms.bClose;
}


// Function RC.RCAdvHUDBFL.CheckSequentialSubtitleFinished
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSequentialSubtitleFinished(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSequentialSubtitleFinished");

	Params::RCAdvHUDBFL_CheckSequentialSubtitleFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckSequentialSubtitleFinishedLastText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSequentialSubtitleFinishedLastText(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSequentialSubtitleFinishedLastText");

	Params::RCAdvHUDBFL_CheckSequentialSubtitleFinishedLastText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckSequentialTalk
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bRunning                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSequentialTalk(bool* bRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSequentialTalk");

	Params::RCAdvHUDBFL_CheckSequentialTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bRunning != nullptr)
		*bRunning = Parms.bRunning;
}


// Function RC.RCAdvHUDBFL.CheckSequentialTalkCloseAtAllEnd
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bClose                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSequentialTalkCloseAtAllEnd(bool* bClose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSequentialTalkCloseAtAllEnd");

	Params::RCAdvHUDBFL_CheckSequentialTalkCloseAtAllEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bClose != nullptr)
		*bClose = Parms.bClose;
}


// Function RC.RCAdvHUDBFL.CheckSequentialTalkFinished
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSequentialTalkFinished(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSequentialTalkFinished");

	Params::RCAdvHUDBFL_CheckSequentialTalkFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckSequentialTalkFinishedLastText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSequentialTalkFinishedLastText(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSequentialTalkFinishedLastText");

	Params::RCAdvHUDBFL_CheckSequentialTalkFinishedLastText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckSkillGetInterval
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSkillGetInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSkillGetInterval");

	Params::RCAdvHUDBFL_CheckSkillGetInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSkillMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSkillMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSkillMenuClose");

	Params::RCAdvHUDBFL_CheckSkillMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSkillMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSkillMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSkillMenuFinished");

	Params::RCAdvHUDBFL_CheckSkillMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSkillMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSkillMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSkillMenuStarted");

	Params::RCAdvHUDBFL_CheckSkillMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSkillSelectMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSkillSelectMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSkillSelectMenuClose");

	Params::RCAdvHUDBFL_CheckSkillSelectMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSkillSelectMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSkillSelectMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSkillSelectMenuFinished");

	Params::RCAdvHUDBFL_CheckSkillSelectMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSkillSelectMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSkillSelectMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSkillSelectMenuStarted");

	Params::RCAdvHUDBFL_CheckSkillSelectMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSubQuestMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSubQuestMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSubQuestMenuClose");

	Params::RCAdvHUDBFL_CheckSubQuestMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSubQuestMenuFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSubQuestMenuFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSubQuestMenuFinished");

	Params::RCAdvHUDBFL_CheckSubQuestMenuFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSubQuestMenuStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckSubQuestMenuStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSubQuestMenuStarted");

	Params::RCAdvHUDBFL_CheckSubQuestMenuStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckSubtitleEndDelay
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckSubtitleEndDelay(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckSubtitleEndDelay");

	Params::RCAdvHUDBFL_CheckSubtitleEndDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckTalkEndText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bEnded                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckTalkEndText(bool* bEnded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckTalkEndText");

	Params::RCAdvHUDBFL_CheckTalkEndText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bEnded != nullptr)
		*bEnded = Parms.bEnded;
}


// Function RC.RCAdvHUDBFL.CheckTalkFinished
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckTalkFinished(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckTalkFinished");

	Params::RCAdvHUDBFL_CheckTalkFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCAdvHUDBFL.CheckTalkStarted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bStarted                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckTalkStarted(bool* bStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckTalkStarted");

	Params::RCAdvHUDBFL_CheckTalkStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bStarted != nullptr)
		*bStarted = Parms.bStarted;
}


// Function RC.RCAdvHUDBFL.CheckTalkWindow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bRunning                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CheckTalkWindow(bool* bRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckTalkWindow");

	Params::RCAdvHUDBFL_CheckTalkWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bRunning != nullptr)
		*bRunning = Parms.bRunning;
}


// Function RC.RCAdvHUDBFL.CheckTopMenuCheckFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckTopMenuCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckTopMenuCheckFinished");

	Params::RCAdvHUDBFL_CheckTopMenuCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckTopMenuCheckStarted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckTopMenuCheckStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckTopMenuCheckStarted");

	Params::RCAdvHUDBFL_CheckTopMenuCheckStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CheckTopMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CheckTopMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CheckTopMenuClose");

	Params::RCAdvHUDBFL_CheckTopMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.ClearMenuHelpText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::ClearMenuHelpText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "ClearMenuHelpText");

	Params::RCAdvHUDBFL_ClearMenuHelpText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CloseGenericWindow
// (Final, Native, Static, Public, BlueprintCallable)

void URCAdvHUDBFL::CloseGenericWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CloseGenericWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.CloseSkillWindow
// (Final, Native, Static, Public, BlueprintCallable)

void URCAdvHUDBFL::CloseSkillWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CloseSkillWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.CollectionMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CollectionMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CollectionMenuFinish");

	Params::RCAdvHUDBFL_CollectionMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CollectionMenuFinishForFooterAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CollectionMenuFinishForFooterAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CollectionMenuFinishForFooterAnimation");

	Params::RCAdvHUDBFL_CollectionMenuFinishForFooterAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CollectionMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::CollectionMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CollectionMenuStart");

	Params::RCAdvHUDBFL_CollectionMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.CutInAnimAllRelease
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CutInAnimAllRelease(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CutInAnimAllRelease");

	Params::RCAdvHUDBFL_CutInAnimAllRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.CutInAnimNext
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CutInAnimNext(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CutInAnimNext");

	Params::RCAdvHUDBFL_CutInAnimNext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.CutInAnimRelease
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CutInID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CutInAnimRelease(bool* bSucceeded, class FName CutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CutInAnimRelease");

	Params::RCAdvHUDBFL_CutInAnimRelease Parms{};

	Parms.CutInID = CutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.CutInAnimStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CutInID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInReleaseWBPAtFinished                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CutInAnimStart(bool* bSucceeded, class FName CutInID, bool bInReleaseWBPAtFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CutInAnimStart");

	Params::RCAdvHUDBFL_CutInAnimStart Parms{};

	Parms.CutInID = CutInID;
	Parms.bInReleaseWBPAtFinished = bInReleaseWBPAtFinished;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.CutInAnimStartLoad
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CutInID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CutInAnimStartLoad(bool* bSucceeded, class FName CutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CutInAnimStartLoad");

	Params::RCAdvHUDBFL_CutInAnimStartLoad Parms{};

	Parms.CutInID = CutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.CutInFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CutInFinish(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CutInFinish");

	Params::RCAdvHUDBFL_CutInFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.CutInStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CutInID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::CutInStart(bool* bSucceeded, class FName CutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "CutInStart");

	Params::RCAdvHUDBFL_CutInStart Parms{};

	Parms.CutInID = CutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.DetPointFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::DetPointFinish(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "DetPointFinish");

	Params::RCAdvHUDBFL_DetPointFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.DetPointStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::DetPointStart(bool* bSucceeded, int32 Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "DetPointStart");

	Params::RCAdvHUDBFL_DetPointStart Parms{};

	Parms.Point = Point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.FigureInformationStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   dispTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::FigureInformationStart(bool* bSucceeded, class FName CharaID, float dispTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "FigureInformationStart");

	Params::RCAdvHUDBFL_FigureInformationStart Parms{};

	Parms.CharaID = CharaID;
	Parms.dispTime = dispTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.ForceFinishKaiKagiSelect
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::ForceFinishKaiKagiSelect(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "ForceFinishKaiKagiSelect");

	Params::RCAdvHUDBFL_ForceFinishKaiKagiSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.GetAdvHUD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCAdvHUD*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCAdvHUD* URCAdvHUDBFL::GetAdvHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetAdvHUD");

	Params::RCAdvHUDBFL_GetAdvHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetAreaMapMenuCancel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetAreaMapMenuCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetAreaMapMenuCancel");

	Params::RCAdvHUDBFL_GetAreaMapMenuCancel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetAreaMapMenuEnableFastTravel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InWorldMapID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetAreaMapMenuEnableFastTravel(class FName InWorldMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetAreaMapMenuEnableFastTravel");

	Params::RCAdvHUDBFL_GetAreaMapMenuEnableFastTravel Parms{};

	Parms.InWorldMapID = InWorldMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetAreaMapMenuGoFastTravel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetAreaMapMenuGoFastTravel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetAreaMapMenuGoFastTravel");

	Params::RCAdvHUDBFL_GetAreaMapMenuGoFastTravel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetAreaMapMenuNewAreaSePlayed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetAreaMapMenuNewAreaSePlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetAreaMapMenuNewAreaSePlayed");

	Params::RCAdvHUDBFL_GetAreaMapMenuNewAreaSePlayed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetBusMenuCancel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetBusMenuCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetBusMenuCancel");

	Params::RCAdvHUDBFL_GetBusMenuCancel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetButtonResultGenericWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetButtonResultGenericWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetButtonResultGenericWindow");

	Params::RCAdvHUDBFL_GetButtonResultGenericWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetButtonResultSkillWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetButtonResultSkillWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetButtonResultSkillWindow");

	Params::RCAdvHUDBFL_GetButtonResultSkillWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetInputMenuButtonGuideKeyType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetInputMenuButtonGuideKeyType(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetInputMenuButtonGuideKeyType");

	Params::RCAdvHUDBFL_GetInputMenuButtonGuideKeyType Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetKaiKagiSelectIndex
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SelectedIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::GetKaiKagiSelectIndex(int32* SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetKaiKagiSelectIndex");

	Params::RCAdvHUDBFL_GetKaiKagiSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SelectedIndex != nullptr)
		*SelectedIndex = Parms.SelectedIndex;
}


// Function RC.RCAdvHUDBFL.GetKaiKagiSelectKaiKagiIDArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     KaiKagiIDArray                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::GetKaiKagiSelectKaiKagiIDArray(TArray<class FName>* KaiKagiIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetKaiKagiSelectKaiKagiIDArray");

	Params::RCAdvHUDBFL_GetKaiKagiSelectKaiKagiIDArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (KaiKagiIDArray != nullptr)
		*KaiKagiIDArray = std::move(Parms.KaiKagiIDArray);
}


// Function RC.RCAdvHUDBFL.GetSelectedMapID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCAdvHUDBFL::GetSelectedMapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetSelectedMapID");

	Params::RCAdvHUDBFL_GetSelectedMapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetSequentialSubtitleVoiceCharacterID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   VoiceCharacterID                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::GetSequentialSubtitleVoiceCharacterID(int32* VoiceCharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetSequentialSubtitleVoiceCharacterID");

	Params::RCAdvHUDBFL_GetSequentialSubtitleVoiceCharacterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VoiceCharacterID != nullptr)
		*VoiceCharacterID = Parms.VoiceCharacterID;
}


// Function RC.RCAdvHUDBFL.GetSequentialTalkVoiceCharacterID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   VoiceCharacterID                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::GetSequentialTalkVoiceCharacterID(int32* VoiceCharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetSequentialTalkVoiceCharacterID");

	Params::RCAdvHUDBFL_GetSequentialTalkVoiceCharacterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VoiceCharacterID != nullptr)
		*VoiceCharacterID = Parms.VoiceCharacterID;
}


// Function RC.RCAdvHUDBFL.GetSkillMenuOpen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GetSkillMenuOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetSkillMenuOpen");

	Params::RCAdvHUDBFL_GetSkillMenuOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GetSkillSelectIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDBFL::GetSkillSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GetSkillSelectIndex");

	Params::RCAdvHUDBFL_GetSkillSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GlossaryMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GlossaryMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GlossaryMenuFinish");

	Params::RCAdvHUDBFL_GlossaryMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.GlossaryMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::GlossaryMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "GlossaryMenuStart");

	Params::RCAdvHUDBFL_GlossaryMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsCanGlossaryMenuClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsCanGlossaryMenuClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsCanGlossaryMenuClose");

	Params::RCAdvHUDBFL_IsCanGlossaryMenuClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsFigureInformationFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsFigureInformationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsFigureInformationFinished");

	Params::RCAdvHUDBFL_IsFigureInformationFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsFinishedGenericWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsFinishedGenericWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsFinishedGenericWindow");

	Params::RCAdvHUDBFL_IsFinishedGenericWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsFinishedSaveLoadLayout
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsFinishedSaveLoadLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsFinishedSaveLoadLayout");

	Params::RCAdvHUDBFL_IsFinishedSaveLoadLayout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsFinishedSkillWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsFinishedSkillWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsFinishedSkillWindow");

	Params::RCAdvHUDBFL_IsFinishedSkillWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsFinishedSuquestEndInformation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsFinishedSuquestEndInformation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsFinishedSuquestEndInformation");

	Params::RCAdvHUDBFL_IsFinishedSuquestEndInformation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsFinishedSuquestStartInformation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsFinishedSuquestStartInformation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsFinishedSuquestStartInformation");

	Params::RCAdvHUDBFL_IsFinishedSuquestStartInformation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsKagiLarge
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsKagiLarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsKagiLarge");

	Params::RCAdvHUDBFL_IsKagiLarge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsKagiSelectMenu
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsKagiSelectMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsKagiSelectMenu");

	Params::RCAdvHUDBFL_IsKagiSelectMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsShowGenericWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsShowGenericWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsShowGenericWindow");

	Params::RCAdvHUDBFL_IsShowGenericWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsShowSkillWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsShowSkillWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsShowSkillWindow");

	Params::RCAdvHUDBFL_IsShowSkillWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.IsShowTutorialWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::IsShowTutorialWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "IsShowTutorialWindow");

	Params::RCAdvHUDBFL_IsShowTutorialWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.KagiMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::KagiMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "KagiMenuFinish");

	Params::RCAdvHUDBFL_KagiMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.KagiMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::KagiMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "KagiMenuStart");

	Params::RCAdvHUDBFL_KagiMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.MainQuestMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::MainQuestMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "MainQuestMenuFinish");

	Params::RCAdvHUDBFL_MainQuestMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.MainQuestMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::MainQuestMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "MainQuestMenuStart");

	Params::RCAdvHUDBFL_MainQuestMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.MakeDeleteKaiKagiIDArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     OutDeleteKaiKagiIDArray                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>                     KaiKagiIDArray                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             CorrectKaiKagiID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     DeleteKaiKagiIDArray                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::MakeDeleteKaiKagiIDArray(TArray<class FName>* OutDeleteKaiKagiIDArray, const TArray<class FName>& KaiKagiIDArray, class FName CorrectKaiKagiID, const TArray<class FName>& DeleteKaiKagiIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "MakeDeleteKaiKagiIDArray");

	Params::RCAdvHUDBFL_MakeDeleteKaiKagiIDArray Parms{};

	Parms.KaiKagiIDArray = std::move(KaiKagiIDArray);
	Parms.CorrectKaiKagiID = CorrectKaiKagiID;
	Parms.DeleteKaiKagiIDArray = std::move(DeleteKaiKagiIDArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDeleteKaiKagiIDArray != nullptr)
		*OutDeleteKaiKagiIDArray = std::move(Parms.OutDeleteKaiKagiIDArray);
}


// Function RC.RCAdvHUDBFL.MakeKaiKagiIDArrayBySkill
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     OutKaiKagiIDArray                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>                     KaiKagiIDArray                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             CorrectKaiKagiID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     DeleteKaiKagiIDArray                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// ERCSkillFunctionType                    SkillFunctionType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::MakeKaiKagiIDArrayBySkill(TArray<class FName>* OutKaiKagiIDArray, const TArray<class FName>& KaiKagiIDArray, class FName CorrectKaiKagiID, const TArray<class FName>& DeleteKaiKagiIDArray, ERCSkillFunctionType SkillFunctionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "MakeKaiKagiIDArrayBySkill");

	Params::RCAdvHUDBFL_MakeKaiKagiIDArrayBySkill Parms{};

	Parms.KaiKagiIDArray = std::move(KaiKagiIDArray);
	Parms.CorrectKaiKagiID = CorrectKaiKagiID;
	Parms.DeleteKaiKagiIDArray = std::move(DeleteKaiKagiIDArray);
	Parms.SkillFunctionType = SkillFunctionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKaiKagiIDArray != nullptr)
		*OutKaiKagiIDArray = std::move(Parms.OutKaiKagiIDArray);
}


// Function RC.RCAdvHUDBFL.MenuGuideFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::MenuGuideFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "MenuGuideFinish");

	Params::RCAdvHUDBFL_MenuGuideFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.MenuGuideStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::MenuGuideStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "MenuGuideStart");

	Params::RCAdvHUDBFL_MenuGuideStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.NzResultFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::NzResultFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "NzResultFinish");

	Params::RCAdvHUDBFL_NzResultFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.NzResultStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapterNumber                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::NzResultStart(const int32 InChapterNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "NzResultStart");

	Params::RCAdvHUDBFL_NzResultStart Parms{};

	Parms.InChapterNumber = InChapterNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.OpenGenericWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsSelect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsFocusTrue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsAcceptCancel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::OpenGenericWindow(class FName InTextID, bool bInIsSelect, bool bInIsFocusTrue, bool bInIsAcceptCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "OpenGenericWindow");

	Params::RCAdvHUDBFL_OpenGenericWindow Parms{};

	Parms.InTextID = InTextID;
	Parms.bInIsSelect = bInIsSelect;
	Parms.bInIsFocusTrue = bInIsFocusTrue;
	Parms.bInIsAcceptCancel = bInIsAcceptCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.OpenGenericWindowMultiStrings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InStringArray                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bInIsSelect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsFocusTrue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsAcceptCancel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::OpenGenericWindowMultiStrings(const TArray<class FString>& InStringArray, bool bInIsSelect, bool bInIsFocusTrue, bool bInIsAcceptCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "OpenGenericWindowMultiStrings");

	Params::RCAdvHUDBFL_OpenGenericWindowMultiStrings Parms{};

	Parms.InStringArray = std::move(InStringArray);
	Parms.bInIsSelect = bInIsSelect;
	Parms.bInIsFocusTrue = bInIsFocusTrue;
	Parms.bInIsAcceptCancel = bInIsAcceptCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.OpenGenericWindowMultiTextIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InTextIDArray                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bInIsSelect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsFocusTrue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsAcceptCancel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::OpenGenericWindowMultiTextIDs(const TArray<class FName>& InTextIDArray, bool bInIsSelect, bool bInIsFocusTrue, bool bInIsAcceptCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "OpenGenericWindowMultiTextIDs");

	Params::RCAdvHUDBFL_OpenGenericWindowMultiTextIDs Parms{};

	Parms.InTextIDArray = std::move(InTextIDArray);
	Parms.bInIsSelect = bInIsSelect;
	Parms.bInIsFocusTrue = bInIsFocusTrue;
	Parms.bInIsAcceptCancel = bInIsAcceptCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.OpenSkillWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSkillMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSkillID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::OpenSkillWindow(class FName InSkillMode, class FName InSkillID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "OpenSkillWindow");

	Params::RCAdvHUDBFL_OpenSkillWindow Parms{};

	Parms.InSkillMode = InSkillMode;
	Parms.InSkillID = InSkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.ResetSkillSelectFocus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::ResetSkillSelectFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "ResetSkillSelectFocus");

	Params::RCAdvHUDBFL_ResetSkillSelectFocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.ResetSubtitlePlayVoiceFlag
// (Final, Native, Static, Public, BlueprintCallable)

void URCAdvHUDBFL::ResetSubtitlePlayVoiceFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "ResetSubtitlePlayVoiceFlag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.SaveLoadLayoutClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SaveLoadLayoutClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SaveLoadLayoutClose");

	Params::RCAdvHUDBFL_SaveLoadLayoutClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SaveLoadSelectStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SaveLoadSelectStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SaveLoadSelectStart");

	Params::RCAdvHUDBFL_SaveLoadSelectStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SequentialSubtitleCancel
// (Final, Native, Static, Public, BlueprintCallable)

void URCAdvHUDBFL::SequentialSubtitleCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialSubtitleCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.SequentialSubtitleFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialSubtitleFinish(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialSubtitleFinish");

	Params::RCAdvHUDBFL_SequentialSubtitleFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialSubtitleStart2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubTitleID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCSubtitleData                  SubtitleData                                           (Parm, AdvancedDisplay, NativeAccessSpecifierPublic)
// float                                   DelayAtEnd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayToNext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloseAtAllEnd                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisableSave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialSubtitleStart2(bool* bSucceeded, class FName SubTitleID, const struct FRCSubtitleData& SubtitleData, float DelayAtEnd, float DelayToNext, bool bCloseAtAllEnd, bool bDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialSubtitleStart2");

	Params::RCAdvHUDBFL_SequentialSubtitleStart2 Parms{};

	Parms.SubTitleID = SubTitleID;
	Parms.SubtitleData = std::move(SubtitleData);
	Parms.DelayAtEnd = DelayAtEnd;
	Parms.DelayToNext = DelayToNext;
	Parms.bCloseAtAllEnd = bCloseAtAllEnd;
	Parms.bDisableSave = bDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialSubtitleStartFromData2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCSubtitleData                  SubtitleData                                           (Parm, NativeAccessSpecifierPublic)
// float                                   DelayAtEnd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayToNext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloseAtAllEnd                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisableSave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialSubtitleStartFromData2(bool* bSucceeded, const struct FRCSubtitleData& SubtitleData, float DelayAtEnd, float DelayToNext, bool bCloseAtAllEnd, bool bDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialSubtitleStartFromData2");

	Params::RCAdvHUDBFL_SequentialSubtitleStartFromData2 Parms{};

	Parms.SubtitleData = std::move(SubtitleData);
	Parms.DelayAtEnd = DelayAtEnd;
	Parms.DelayToNext = DelayToNext;
	Parms.bCloseAtAllEnd = bCloseAtAllEnd;
	Parms.bDisableSave = bDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialSubtitleStartFromDataTable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       Table                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubTitleID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayAtEnd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayToNext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloseAtAllEnd                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisableSave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialSubtitleStartFromDataTable(bool* bSucceeded, class UDataTable* Table, class FName SubTitleID, float DelayAtEnd, float DelayToNext, bool bCloseAtAllEnd, bool bDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialSubtitleStartFromDataTable");

	Params::RCAdvHUDBFL_SequentialSubtitleStartFromDataTable Parms{};

	Parms.Table = Table;
	Parms.SubTitleID = SubTitleID;
	Parms.DelayAtEnd = DelayAtEnd;
	Parms.DelayToNext = DelayToNext;
	Parms.bCloseAtAllEnd = bCloseAtAllEnd;
	Parms.bDisableSave = bDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialSubtitleStartFromDataTable_WaitPush
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       Table                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubTitleID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayAtEnd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayToNext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloseAtAllEnd                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisableSave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialSubtitleStartFromDataTable_WaitPush(bool* bSucceeded, class UDataTable* Table, class FName SubTitleID, float DelayAtEnd, float DelayToNext, bool bCloseAtAllEnd, bool bDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialSubtitleStartFromDataTable_WaitPush");

	Params::RCAdvHUDBFL_SequentialSubtitleStartFromDataTable_WaitPush Parms{};

	Parms.Table = Table;
	Parms.SubTitleID = SubTitleID;
	Parms.DelayAtEnd = DelayAtEnd;
	Parms.DelayToNext = DelayToNext;
	Parms.bCloseAtAllEnd = bCloseAtAllEnd;
	Parms.bDisableSave = bDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialSubtitleStartFromSubtitleID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubTitleID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayAtEnd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayToNext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloseAtAllEnd                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisableSave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialSubtitleStartFromSubtitleID(bool* bSucceeded, class FName SubTitleID, float DelayAtEnd, float DelayToNext, bool bCloseAtAllEnd, bool bDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialSubtitleStartFromSubtitleID");

	Params::RCAdvHUDBFL_SequentialSubtitleStartFromSubtitleID Parms{};

	Parms.SubTitleID = SubTitleID;
	Parms.DelayAtEnd = DelayAtEnd;
	Parms.DelayToNext = DelayToNext;
	Parms.bCloseAtAllEnd = bCloseAtAllEnd;
	Parms.bDisableSave = bDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialSubtitleStartFromSubtitleIDForMovie
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSubtitleID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayToNext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCloseAtAllEnd                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisableSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialSubtitleStartFromSubtitleIDForMovie(bool* bSucceeded, class FName InSubtitleID, float InDelayAtEnd, float InDelayToNext, bool bInCloseAtAllEnd, bool bInDisableSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialSubtitleStartFromSubtitleIDForMovie");

	Params::RCAdvHUDBFL_SequentialSubtitleStartFromSubtitleIDForMovie Parms{};

	Parms.InSubtitleID = InSubtitleID;
	Parms.InDelayAtEnd = InDelayAtEnd;
	Parms.InDelayToNext = InDelayToNext;
	Parms.bInCloseAtAllEnd = bInCloseAtAllEnd;
	Parms.bInDisableSave = bInDisableSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialTalkFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialTalkFinish(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialTalkFinish");

	Params::RCAdvHUDBFL_SequentialTalkFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialTalkForceFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialTalkForceFinish(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialTalkForceFinish");

	Params::RCAdvHUDBFL_SequentialTalkForceFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialTalkStart2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCTalkData                      TalkData                                               (Parm, NativeAccessSpecifierPublic)
// bool                                    bForceAutoPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialTalkStart2(bool* bSucceeded, class FName TalkID, const struct FRCTalkData& TalkData, bool bForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialTalkStart2");

	Params::RCAdvHUDBFL_SequentialTalkStart2 Parms{};

	Parms.TalkID = TalkID;
	Parms.TalkData = std::move(TalkData);
	Parms.bForceAutoPlay = bForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialTalkStartFromData2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCTalkData                      TalkData                                               (Parm, NativeAccessSpecifierPublic)
// bool                                    bForceAutoPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialTalkStartFromData2(bool* bSucceeded, const struct FRCTalkData& TalkData, bool bForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialTalkStartFromData2");

	Params::RCAdvHUDBFL_SequentialTalkStartFromData2 Parms{};

	Parms.TalkData = std::move(TalkData);
	Parms.bForceAutoPlay = bForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialTalkStartFromDataTable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       Table                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceAutoPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialTalkStartFromDataTable(bool* bSucceeded, class UDataTable* Table, class FName TalkID, bool bForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialTalkStartFromDataTable");

	Params::RCAdvHUDBFL_SequentialTalkStartFromDataTable Parms{};

	Parms.Table = Table;
	Parms.TalkID = TalkID;
	Parms.bForceAutoPlay = bForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SequentialTalkStartFromTalkID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceAutoPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SequentialTalkStartFromTalkID(bool* bSucceeded, class FName TalkID, bool bForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SequentialTalkStartFromTalkID");

	Params::RCAdvHUDBFL_SequentialTalkStartFromTalkID Parms{};

	Parms.TalkID = TalkID;
	Parms.bForceAutoPlay = bForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SetAreaMapMenuNewAreaSePlayed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPlayedNewAreaSE                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SetAreaMapMenuNewAreaSePlayed(bool bInPlayedNewAreaSE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SetAreaMapMenuNewAreaSePlayed");

	Params::RCAdvHUDBFL_SetAreaMapMenuNewAreaSePlayed Parms{};

	Parms.bInPlayedNewAreaSE = bInPlayedNewAreaSE;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.SetBacklogEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SetBacklogEnable(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SetBacklogEnable");

	Params::RCAdvHUDBFL_SetBacklogEnable Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.SetMenuButtonGuide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InModeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPlayOpenAnim                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SetMenuButtonGuide(class FName InModeID, bool bInPlayOpenAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SetMenuButtonGuide");

	Params::RCAdvHUDBFL_SetMenuButtonGuide Parms{};

	Parms.InModeID = InModeID;
	Parms.bInPlayOpenAnim = bInPlayOpenAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SetMenuButtonGuideResetKeyType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SetMenuButtonGuideResetKeyType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SetMenuButtonGuideResetKeyType");

	Params::RCAdvHUDBFL_SetMenuButtonGuideResetKeyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SetMenuEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SetMenuEnable(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SetMenuEnable");

	Params::RCAdvHUDBFL_SetMenuEnable Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.SetMenuHelpText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InHelpTextID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SetMenuHelpText(class FName InHelpTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SetMenuHelpText");

	Params::RCAdvHUDBFL_SetMenuHelpText Parms{};

	Parms.InHelpTextID = InHelpTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SetPauseEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SetPauseEnable(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SetPauseEnable");

	Params::RCAdvHUDBFL_SetPauseEnable Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.SkillMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SkillMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SkillMenuFinish");

	Params::RCAdvHUDBFL_SkillMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SkillMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SkillMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SkillMenuStart");

	Params::RCAdvHUDBFL_SkillMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SkillSelectMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SkillSelectMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SkillSelectMenuFinish");

	Params::RCAdvHUDBFL_SkillSelectMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SkillSelectMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SkillSelectMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SkillSelectMenuStart");

	Params::RCAdvHUDBFL_SkillSelectMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.StartKaiKagiSelect
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     KaiKagiIDArray                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             CorrectKaiKagiID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotPause                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::StartKaiKagiSelect(bool* bSucceeded, const TArray<class FName>& KaiKagiIDArray, class FName CorrectKaiKagiID, bool bNotPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "StartKaiKagiSelect");

	Params::RCAdvHUDBFL_StartKaiKagiSelect Parms{};

	Parms.KaiKagiIDArray = std::move(KaiKagiIDArray);
	Parms.CorrectKaiKagiID = CorrectKaiKagiID;
	Parms.bNotPause = bNotPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.StartKaiKagiSelect2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             QuestionTextID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     KaiKagiIDArray                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             CorrectKaiKagiID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     DeleteKaiKagiIDArray                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bNotPause                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCancelDisable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::StartKaiKagiSelect2(bool* bSucceeded, class FName QuestionTextID, const TArray<class FName>& KaiKagiIDArray, class FName CorrectKaiKagiID, const TArray<class FName>& DeleteKaiKagiIDArray, bool bNotPause, bool bCancelDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "StartKaiKagiSelect2");

	Params::RCAdvHUDBFL_StartKaiKagiSelect2 Parms{};

	Parms.QuestionTextID = QuestionTextID;
	Parms.KaiKagiIDArray = std::move(KaiKagiIDArray);
	Parms.CorrectKaiKagiID = CorrectKaiKagiID;
	Parms.DeleteKaiKagiIDArray = std::move(DeleteKaiKagiIDArray);
	Parms.bNotPause = bNotPause;
	Parms.bCancelDisable = bCancelDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SubQuestMenuFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SubQuestMenuFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SubQuestMenuFinish");

	Params::RCAdvHUDBFL_SubQuestMenuFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SubQuestMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::SubQuestMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SubQuestMenuStart");

	Params::RCAdvHUDBFL_SubQuestMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.SubtitleFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SubtitleFinish(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SubtitleFinish");

	Params::RCAdvHUDBFL_SubtitleFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SubtitleStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NameID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayAtEndVoice                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SubtitleStart(bool* bSucceeded, class FName NameID, class FName TextID, float DelayAtEndVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SubtitleStart");

	Params::RCAdvHUDBFL_SubtitleStart Parms{};

	Parms.NameID = NameID;
	Parms.TextID = TextID;
	Parms.DelayAtEndVoice = DelayAtEndVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SubtitleStart_OnlyCursor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SubtitleStart_OnlyCursor(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SubtitleStart_OnlyCursor");

	Params::RCAdvHUDBFL_SubtitleStart_OnlyCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SubtitleStart_WaitPush
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NameID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayAtEndVoice                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SubtitleStart_WaitPush(bool* bSucceeded, class FName NameID, class FName TextID, float DelayAtEndVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SubtitleStart_WaitPush");

	Params::RCAdvHUDBFL_SubtitleStart_WaitPush Parms{};

	Parms.NameID = NameID;
	Parms.TextID = TextID;
	Parms.DelayAtEndVoice = DelayAtEndVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SubtitleStartFromCharacterID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterNameID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterNameSubID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayAtEndVoice                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SubtitleStartFromCharacterID(bool* bSucceeded, int32 CharacterNameID, int32 CharacterNameSubID, class FName TextID, float DelayAtEndVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SubtitleStartFromCharacterID");

	Params::RCAdvHUDBFL_SubtitleStartFromCharacterID Parms{};

	Parms.CharacterNameID = CharacterNameID;
	Parms.CharacterNameSubID = CharacterNameSubID;
	Parms.TextID = TextID;
	Parms.DelayAtEndVoice = DelayAtEndVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SubtitleStartFromCharacterID_WaitPush
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterNameID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterNameSubID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayAtEndVoice                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SubtitleStartFromCharacterID_WaitPush(bool* bSucceeded, int32 CharacterNameID, int32 CharacterNameSubID, class FName TextID, float DelayAtEndVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SubtitleStartFromCharacterID_WaitPush");

	Params::RCAdvHUDBFL_SubtitleStartFromCharacterID_WaitPush Parms{};

	Parms.CharacterNameID = CharacterNameID;
	Parms.CharacterNameSubID = CharacterNameSubID;
	Parms.TextID = TextID;
	Parms.DelayAtEndVoice = DelayAtEndVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SuquestEndInformationStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             QuestID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   dispTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SuquestEndInformationStart(bool* bSucceeded, class FName QuestID, float dispTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SuquestEndInformationStart");

	Params::RCAdvHUDBFL_SuquestEndInformationStart Parms{};

	Parms.QuestID = QuestID;
	Parms.dispTime = dispTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.SuquestStartInformationStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             QuestID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   dispTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::SuquestStartInformationStart(bool* bSucceeded, class FName QuestID, float dispTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "SuquestStartInformationStart");

	Params::RCAdvHUDBFL_SuquestStartInformationStart Parms{};

	Parms.QuestID = QuestID;
	Parms.dispTime = dispTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkFinish(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkFinish");

	Params::RCAdvHUDBFL_TalkFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkForceFinish
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkForceFinish(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkForceFinish");

	Params::RCAdvHUDBFL_TalkForceFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkSetAuto
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkSetAuto(bool* bSucceeded, bool bAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkSetAuto");

	Params::RCAdvHUDBFL_TalkSetAuto Parms{};

	Parms.bAutoPlay = bAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkSetForceTextSpeedSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsForceTextSpeed                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ForceTextSpeed                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkSetForceTextSpeedSettings(bool* bSucceeded, bool bIsForceTextSpeed, int32 ForceTextSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkSetForceTextSpeedSettings");

	Params::RCAdvHUDBFL_TalkSetForceTextSpeedSettings Parms{};

	Parms.bIsForceTextSpeed = bIsForceTextSpeed;
	Parms.ForceTextSpeed = ForceTextSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkSetGradationFilter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FilterID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkSetGradationFilter(bool* bSucceeded, class FName FilterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkSetGradationFilter");

	Params::RCAdvHUDBFL_TalkSetGradationFilter Parms{};

	Parms.FilterID = FilterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkSetText2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterFaceID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterFacialID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Character3DID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharacterFacial3DID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkSetText2(bool* bSucceeded, int32 CharacterFaceID, int32 CharacterFacialID, class FName TextID, int32 Character3DID, class FName CharacterFacial3DID, class FName VoiceID, float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkSetText2");

	Params::RCAdvHUDBFL_TalkSetText2 Parms{};

	Parms.CharacterFaceID = CharacterFaceID;
	Parms.CharacterFacialID = CharacterFacialID;
	Parms.TextID = TextID;
	Parms.Character3DID = Character3DID;
	Parms.CharacterFacial3DID = CharacterFacial3DID;
	Parms.VoiceID = VoiceID;
	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkSetTextData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAdvHUDTalkTextData            TextData                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkSetTextData(bool* bSucceeded, const struct FRCAdvHUDTalkTextData& TextData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkSetTextData");

	Params::RCAdvHUDBFL_TalkSetTextData Parms{};

	Parms.TextData = std::move(TextData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkSetTextSimple
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkSetTextSimple(bool* bSucceeded, class FName TextID, float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkSetTextSimple");

	Params::RCAdvHUDBFL_TalkSetTextSimple Parms{};

	Parms.TextID = TextID;
	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkStart2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCAdvHUDTalkWindowType                 WindowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterFaceID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterFacialID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkStart2(bool* bSucceeded, ERCAdvHUDTalkWindowType WindowType, class FName TextID, int32 CharacterFaceID, int32 CharacterFacialID, bool bAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkStart2");

	Params::RCAdvHUDBFL_TalkStart2 Parms{};

	Parms.WindowType = WindowType;
	Parms.TextID = TextID;
	Parms.CharacterFaceID = CharacterFaceID;
	Parms.CharacterFacialID = CharacterFacialID;
	Parms.bAutoPlay = bAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TalkStartSimple
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCAdvHUDTalkWindowType                 WindowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::TalkStartSimple(bool* bSucceeded, ERCAdvHUDTalkWindowType WindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TalkStartSimple");

	Params::RCAdvHUDBFL_TalkStartSimple Parms{};

	Parms.WindowType = WindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCAdvHUDBFL.TextIDToFaceID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDBFL::TextIDToFaceID(class FName TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "TextIDToFaceID");

	Params::RCAdvHUDBFL_TextIDToFaceID Parms{};

	Parms.TextID = TextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDBFL.UpdateCollectionFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDBFL::UpdateCollectionFlag(class FName CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "UpdateCollectionFlag");

	Params::RCAdvHUDBFL_UpdateCollectionFlag Parms{};

	Parms.CharaID = CharaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDBFL.WorldMenuStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDBFL::WorldMenuStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDBFL", "WorldMenuStart");

	Params::RCAdvHUDBFL_WorldMenuStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiListBar.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiListBar::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiListBar", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiListBar.GetBattleKaiKagiListBarStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleKaiKagiListBarStatus       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleKaiKagiListBarStatus URCNzUiBattleKaiKagiListBar::GetBattleKaiKagiListBarStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiListBar", "GetBattleKaiKagiListBarStatus");

	Params::RCNzUiBattleKaiKagiListBar_GetBattleKaiKagiListBarStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiListBar.InitializeBattleKaiKagiListBar
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiListBar::InitializeBattleKaiKagiListBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiListBar", "InitializeBattleKaiKagiListBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiListBar.IsPlayWaitAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleKaiKagiListBar::IsPlayWaitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiListBar", "IsPlayWaitAnimation");

	Params::RCNzUiBattleKaiKagiListBar_IsPlayWaitAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiListBar.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiListBar::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiListBar", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiListBar.SetKaiKagiName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiListBar::SetKaiKagiName(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiListBar", "SetKaiKagiName");

	Params::RCNzUiBattleKaiKagiListBar_SetKaiKagiName Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiListBar.SetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiListBar::SetVisible(bool bInVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiListBar", "SetVisible");

	Params::RCNzUiBattleKaiKagiListBar_SetVisible Parms{};

	Parms.bInVisibility = bInVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTalkDataAsset.Import
// (Native, Public, BlueprintCallable)

void URCTalkDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTalkDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.Close
// (Native, Public, BlueprintCallable)

void URCUiInteractIcon::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.CloseSelectable
// (Native, Public, BlueprintCallable)

void URCUiInteractIcon::CloseSelectable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "CloseSelectable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.CloseText
// (Final, Native, Public, BlueprintCallable)

void URCUiInteractIcon::CloseText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "CloseText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.FinishSelectable
// (Native, Public, BlueprintCallable)

void URCUiInteractIcon::FinishSelectable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "FinishSelectable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.GetInteractStatusInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCUiInteractIcon::GetInteractStatusInt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "GetInteractStatusInt");

	Params::RCUiInteractIcon_GetInteractStatusInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiInteractIcon.InitializeInteractIcon
// (Native, Public, BlueprintCallable)

void URCUiInteractIcon::InitializeInteractIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "InitializeInteractIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.Open
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShowSubQuest                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInMoveable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiInteractIcon::Open(bool bInShowSubQuest, bool bInMoveable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "Open");

	Params::RCUiInteractIcon_Open Parms{};

	Parms.bInShowSubQuest = bInShowSubQuest;
	Parms.bInMoveable = bInMoveable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.OpenSelectable
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShowSubQuest                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInMoveable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiInteractIcon::OpenSelectable(bool bInShowSubQuest, bool bInMoveable, const class FString& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "OpenSelectable");

	Params::RCUiInteractIcon_OpenSelectable Parms{};

	Parms.bInShowSubQuest = bInShowSubQuest;
	Parms.bInMoveable = bInMoveable;
	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.OpenText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiInteractIcon::OpenText(const class FString& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "OpenText");

	Params::RCUiInteractIcon_OpenText Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.StartSelectable
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiInteractIcon::StartSelectable(const class FString& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "StartSelectable");

	Params::RCUiInteractIcon_StartSelectable Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractIcon.WaitOutside
// (Native, Public, BlueprintCallable)

void URCUiInteractIcon::WaitOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractIcon", "WaitOutside");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiIntJoint.SetBusIcon
// (Final, Native, Public, BlueprintCallable)

void URCUiIntJoint::SetBusIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiIntJoint", "SetBusIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiIntJoint.SetDoorIcon
// (Final, Native, Public, BlueprintCallable)

void URCUiIntJoint::SetDoorIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiIntJoint", "SetDoorIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSubtitleDataAsset.Import
// (Native, Public, BlueprintCallable)

void URCSubtitleDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSubtitleDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDInteractIconComponent.GetPressedDecideButtonSimpleResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDPressedDecideResult            InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDInteractIconComponent::GetPressedDecideButtonSimpleResult(ERCAdvHUDPressedDecideResult InResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAdvHUDInteractIconComponent", "GetPressedDecideButtonSimpleResult");

	Params::RCAdvHUDInteractIconComponent_GetPressedDecideButtonSimpleResult Parms{};

	Parms.InResult = InResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.AllAccessableWidgetsClose
// (Final, Native, Public, BlueprintCallable)

void URCAdvHUDInteractIconComponent::AllAccessableWidgetsClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "AllAccessableWidgetsClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDInteractIconComponent.AllAccessableWidgetsOpen
// (Final, Native, Public, BlueprintCallable)

void URCAdvHUDInteractIconComponent::AllAccessableWidgetsOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "AllAccessableWidgetsOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDInteractIconComponent.CheckAccessableWidgetReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDInteractIconComponent::CheckAccessableWidgetReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "CheckAccessableWidgetReady");

	Params::RCAdvHUDInteractIconComponent_CheckAccessableWidgetReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.CheckAccessedWidgetWait
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDInteractIconComponent::CheckAccessedWidgetWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "CheckAccessedWidgetWait");

	Params::RCAdvHUDInteractIconComponent_CheckAccessedWidgetWait Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.CheckAllAccessableWidgetsClosed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bInContainClosing                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDInteractIconComponent::CheckAllAccessableWidgetsClosed(bool bInContainClosing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "CheckAllAccessableWidgetsClosed");

	Params::RCAdvHUDInteractIconComponent_CheckAllAccessableWidgetsClosed Parms{};

	Parms.bInContainClosing = bInContainClosing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.CheckAllAccessableWidgetsOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDInteractIconComponent::CheckAllAccessableWidgetsOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "CheckAllAccessableWidgetsOpened");

	Params::RCAdvHUDInteractIconComponent_CheckAllAccessableWidgetsOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.GetAccessedCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCharacterRender* URCAdvHUDInteractIconComponent::GetAccessedCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "GetAccessedCharacter");

	Params::RCAdvHUDInteractIconComponent_GetAccessedCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.GetAccessedCheckActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCheckActor* URCAdvHUDInteractIconComponent::GetAccessedCheckActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "GetAccessedCheckActor");

	Params::RCAdvHUDInteractIconComponent_GetAccessedCheckActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.GetAccessedNPC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCPawnRender*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCPawnRender* URCAdvHUDInteractIconComponent::GetAccessedNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "GetAccessedNPC");

	Params::RCAdvHUDInteractIconComponent_GetAccessedNPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.PressedDecideButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDPressedDecideResult            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDPressedDecideResult URCAdvHUDInteractIconComponent::PressedDecideButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "PressedDecideButton");

	Params::RCAdvHUDInteractIconComponent_PressedDecideButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDInteractIconComponent.PressedDecideButtonSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDInteractIconComponent::PressedDecideButtonSimple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDInteractIconComponent", "PressedDecideButtonSimple");

	Params::RCAdvHUDInteractIconComponent_PressedDecideButtonSimple Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamAchievementData.Import
// (Native, Public, BlueprintCallable)

void URCParamAchievementData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamAchievementData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDMapComponent.CheckBusStopEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckBusStopEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckBusStopEnable");

	Params::RCAdvHUDMapComponent_CheckBusStopEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckChangeAreaEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckChangeAreaEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckChangeAreaEnable");

	Params::RCAdvHUDMapComponent_CheckChangeAreaEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckEnterBuildingEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckEnterBuildingEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckEnterBuildingEnable");

	Params::RCAdvHUDMapComponent_CheckEnterBuildingEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckLocationEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckLocationEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckLocationEnable");

	Params::RCAdvHUDMapComponent_CheckLocationEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckLocationFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckLocationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckLocationFinished");

	Params::RCAdvHUDMapComponent_CheckLocationFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckLocationRunning
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckLocationRunning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckLocationRunning");

	Params::RCAdvHUDMapComponent_CheckLocationRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckLocationStarted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMiniMap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckLocationStarted(bool bInMiniMap, bool bInLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckLocationStarted");

	Params::RCAdvHUDMapComponent_CheckLocationStarted Parms{};

	Parms.bInMiniMap = bInMiniMap;
	Parms.bInLocation = bInLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckMiniMapEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckMiniMapEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckMiniMapEnable");

	Params::RCAdvHUDMapComponent_CheckMiniMapEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckMiniMapEnableScene
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckMiniMapEnableScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckMiniMapEnableScene");

	Params::RCAdvHUDMapComponent_CheckMiniMapEnableScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.CheckMiniMapRunning
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::CheckMiniMapRunning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "CheckMiniMapRunning");

	Params::RCAdvHUDMapComponent_CheckMiniMapRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.FinishLocation
// (Final, Native, Public, BlueprintCallable)

void URCAdvHUDMapComponent::FinishLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "FinishLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDMapComponent.GetBusStopData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutSucceeded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAdvHUDEnterBuildingData       OutBusStopData                                         (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::GetBusStopData(int32 InIndex, bool* bOutSucceeded, struct FRCAdvHUDEnterBuildingData* OutBusStopData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetBusStopData");

	Params::RCAdvHUDMapComponent_GetBusStopData Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSucceeded != nullptr)
		*bOutSucceeded = Parms.bOutSucceeded;

	if (OutBusStopData != nullptr)
		*OutBusStopData = std::move(Parms.OutBusStopData);
}


// Function RC.RCAdvHUDMapComponent.GetBusStopDataNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDMapComponent::GetBusStopDataNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetBusStopDataNum");

	Params::RCAdvHUDMapComponent_GetBusStopDataNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.GetChangeAreaData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutSucceeded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAdvHUDChangeAreaData          OutChangeAreaData                                      (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::GetChangeAreaData(int32 InIndex, bool* bOutSucceeded, struct FRCAdvHUDChangeAreaData* OutChangeAreaData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetChangeAreaData");

	Params::RCAdvHUDMapComponent_GetChangeAreaData Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSucceeded != nullptr)
		*bOutSucceeded = Parms.bOutSucceeded;

	if (OutChangeAreaData != nullptr)
		*OutChangeAreaData = std::move(Parms.OutChangeAreaData);
}


// Function RC.RCAdvHUDMapComponent.GetChangeAreaDataNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDMapComponent::GetChangeAreaDataNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetChangeAreaDataNum");

	Params::RCAdvHUDMapComponent_GetChangeAreaDataNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.GetCurrentLocationDisplayLocationID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCAdvHUDMapComponent::GetCurrentLocationDisplayLocationID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetCurrentLocationDisplayLocationID");

	Params::RCAdvHUDMapComponent_GetCurrentLocationDisplayLocationID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.GetCurrentLocationDisplayTextID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCAdvHUDMapComponent::GetCurrentLocationDisplayTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetCurrentLocationDisplayTextID");

	Params::RCAdvHUDMapComponent_GetCurrentLocationDisplayTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.GetCurrentLocationID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCAdvHUDMapComponent::GetCurrentLocationID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetCurrentLocationID");

	Params::RCAdvHUDMapComponent_GetCurrentLocationID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.GetCurrentLocationTextID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCAdvHUDMapComponent::GetCurrentLocationTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetCurrentLocationTextID");

	Params::RCAdvHUDMapComponent_GetCurrentLocationTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.GetCurrentMiniMapLocationID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCAdvHUDMapComponent::GetCurrentMiniMapLocationID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetCurrentMiniMapLocationID");

	Params::RCAdvHUDMapComponent_GetCurrentMiniMapLocationID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.GetCurrentMiniMapTextID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCAdvHUDMapComponent::GetCurrentMiniMapTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetCurrentMiniMapTextID");

	Params::RCAdvHUDMapComponent_GetCurrentMiniMapTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.GetEnterBuildingData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutSucceeded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAdvHUDEnterBuildingData       OutEnterBuildingData                                   (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::GetEnterBuildingData(int32 InIndex, bool* bOutSucceeded, struct FRCAdvHUDEnterBuildingData* OutEnterBuildingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetEnterBuildingData");

	Params::RCAdvHUDMapComponent_GetEnterBuildingData Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSucceeded != nullptr)
		*bOutSucceeded = Parms.bOutSucceeded;

	if (OutEnterBuildingData != nullptr)
		*OutEnterBuildingData = std::move(Parms.OutEnterBuildingData);
}


// Function RC.RCAdvHUDMapComponent.GetEnterBuildingDataNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDMapComponent::GetEnterBuildingDataNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "GetEnterBuildingDataNum");

	Params::RCAdvHUDMapComponent_GetEnterBuildingDataNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.IsBusStopVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::IsBusStopVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "IsBusStopVisible");

	Params::RCAdvHUDMapComponent_IsBusStopVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.IsChangeAreaVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::IsChangeAreaVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "IsChangeAreaVisible");

	Params::RCAdvHUDMapComponent_IsChangeAreaVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.IsEnterBuildingVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::IsEnterBuildingVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "IsEnterBuildingVisible");

	Params::RCAdvHUDMapComponent_IsEnterBuildingVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.LoadLocationDataName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InLocationID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLocationTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::LoadLocationDataName(class FName InLocationID, class FName InLocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "LoadLocationDataName");

	Params::RCAdvHUDMapComponent_LoadLocationDataName Parms{};

	Parms.InLocationID = InLocationID;
	Parms.InLocationTextID = InLocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.SetBusStopData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLooksLikeUsable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::SetBusStopData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInLooksLikeUsable, bool bInAccessable, float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetBusStopData");

	Params::RCAdvHUDMapComponent_SetBusStopData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInLooksLikeUsable = bInLooksLikeUsable;
	Parms.bInAccessable = bInAccessable;
	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.SetBusStopEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::SetBusStopEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetBusStopEnable");

	Params::RCAdvHUDMapComponent_SetBusStopEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDMapComponent.SetChangeAreaData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDrawText                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::SetChangeAreaData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInDrawText, float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetChangeAreaData");

	Params::RCAdvHUDMapComponent_SetChangeAreaData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInDrawText = bInDrawText;
	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.SetChangeAreaEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::SetChangeAreaEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetChangeAreaEnable");

	Params::RCAdvHUDMapComponent_SetChangeAreaEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDMapComponent.SetEnterBuildingData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::SetEnterBuildingData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInAccessable, float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetEnterBuildingData");

	Params::RCAdvHUDMapComponent_SetEnterBuildingData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInAccessable = bInAccessable;
	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.SetEnterBuildingEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::SetEnterBuildingEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetEnterBuildingEnable");

	Params::RCAdvHUDMapComponent_SetEnterBuildingEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDMapComponent.SetLocationDisplayLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InLocationID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLocationTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::SetLocationDisplayLocation(class FName InLocationID, class FName InLocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetLocationDisplayLocation");

	Params::RCAdvHUDMapComponent_SetLocationDisplayLocation Parms{};

	Parms.InLocationID = InLocationID;
	Parms.InLocationTextID = InLocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.SetLocationEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::SetLocationEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetLocationEnable");

	Params::RCAdvHUDMapComponent_SetLocationEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDMapComponent.SetLocationName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InLocationID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLocationTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::SetLocationName(class FName InLocationID, class FName InLocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetLocationName");

	Params::RCAdvHUDMapComponent_SetLocationName Parms{};

	Parms.InLocationID = InLocationID;
	Parms.InLocationTextID = InLocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.SetMiniMapEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::SetMiniMapEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetMiniMapEnable");

	Params::RCAdvHUDMapComponent_SetMiniMapEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDMapComponent.SetMiniMapLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InLocationID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLocationTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDMapComponent::SetMiniMapLocation(class FName InLocationID, class FName InLocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "SetMiniMapLocation");

	Params::RCAdvHUDMapComponent_SetMiniMapLocation Parms{};

	Parms.InLocationID = InLocationID;
	Parms.InLocationTextID = InLocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDMapComponent.StartLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMiniMap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDMapComponent::StartLocation(bool bInMiniMap, bool bInLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDMapComponent", "StartLocation");

	Params::RCAdvHUDMapComponent_StartLocation Parms{};

	Parms.bInMiniMap = bInMiniMap;
	Parms.bInLocation = bInLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCOnlineStoreBFL.CheckInstallContents
// (Final, Native, Static, Public, BlueprintCallable)

void URCOnlineStoreBFL::CheckInstallContents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCOnlineStoreBFL", "CheckInstallContents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCOnlineStoreBFL.OpenStore
// (Final, Native, Static, Public, BlueprintCallable)

void URCOnlineStoreBFL::OpenStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCOnlineStoreBFL", "OpenStore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillSelectButton.DecidedProc
// (Final, Native, Public)

void URCUiMenuSkillSelectButton::DecidedProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillSelectButton", "DecidedProc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDResearchComponent.FinishTelopCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::FinishTelopCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "FinishTelopCheckFinished");

	Params::RCAdvHUDResearchComponent_FinishTelopCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.FinishTelopStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::FinishTelopStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "FinishTelopStart");

	Params::RCAdvHUDResearchComponent_FinishTelopStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.GetKagiCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::GetKagiCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "GetKagiCheckFinished");

	Params::RCAdvHUDResearchComponent_GetKagiCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.GetKagiSetData_Debug
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKagiImage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InKagiName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InKagiCaption                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::GetKagiSetData_Debug(class FName InKagiImage, const class FString& InKagiName, const class FString& InKagiCaption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "GetKagiSetData_Debug");

	Params::RCAdvHUDResearchComponent_GetKagiSetData_Debug Parms{};

	Parms.InKagiImage = InKagiImage;
	Parms.InKagiName = std::move(InKagiName);
	Parms.InKagiCaption = std::move(InKagiCaption);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.GetKagiSetDataFromKagiID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKagiID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::GetKagiSetDataFromKagiID(class FName InKagiID, int32 InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "GetKagiSetDataFromKagiID");

	Params::RCAdvHUDResearchComponent_GetKagiSetDataFromKagiID Parms{};

	Parms.InKagiID = InKagiID;
	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.GetKagiStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::GetKagiStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "GetKagiStart");

	Params::RCAdvHUDResearchComponent_GetKagiStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.GetMarkerData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutSucceeded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAdvHUDResearchMarkerData      OutMarkerData                                          (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void URCAdvHUDResearchComponent::GetMarkerData(int32 InIndex, bool* bOutSucceeded, struct FRCAdvHUDResearchMarkerData* OutMarkerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "GetMarkerData");

	Params::RCAdvHUDResearchComponent_GetMarkerData Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSucceeded != nullptr)
		*bOutSucceeded = Parms.bOutSucceeded;

	if (OutMarkerData != nullptr)
		*OutMarkerData = std::move(Parms.OutMarkerData);
}


// Function RC.RCAdvHUDResearchComponent.GetMarkerDataNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDResearchComponent::GetMarkerDataNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "GetMarkerDataNum");

	Params::RCAdvHUDResearchComponent_GetMarkerDataNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.GetResearchModeOldState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDResearchModeState              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDResearchModeState URCAdvHUDResearchComponent::GetResearchModeOldState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "GetResearchModeOldState");

	Params::RCAdvHUDResearchComponent_GetResearchModeOldState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.GetResearchModeState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDResearchModeState              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDResearchModeState URCAdvHUDResearchComponent::GetResearchModeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "GetResearchModeState");

	Params::RCAdvHUDResearchComponent_GetResearchModeState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.IsMarkerVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::IsMarkerVisible(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "IsMarkerVisible");

	Params::RCAdvHUDResearchComponent_IsMarkerVisible Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.LocationCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::LocationCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "LocationCheckFinished");

	Params::RCAdvHUDResearchComponent_LocationCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.LocationFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::LocationFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "LocationFinish");

	Params::RCAdvHUDResearchComponent_LocationFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.LocationStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InLocationID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLocationTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::LocationStart(class FName InLocationID, class FName InLocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "LocationStart");

	Params::RCAdvHUDResearchComponent_LocationStart Parms{};

	Parms.InLocationID = InLocationID;
	Parms.InLocationTextID = InLocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.OnChangeInputPlatform
// (Final, Native, Private)
// Parameters:
// ERCInputPlatform                        InInputPlatform                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDResearchComponent::OnChangeInputPlatform(ERCInputPlatform InInputPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "OnChangeInputPlatform");

	Params::RCAdvHUDResearchComponent_OnChangeInputPlatform Parms{};

	Parms.InInputPlatform = InInputPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDResearchComponent.OnMenuCloseMouseSettings
// (Final, Native, Private)

void URCAdvHUDResearchComponent::OnMenuCloseMouseSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "OnMenuCloseMouseSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDResearchComponent.OnMenuOpenMouseSettings
// (Final, Native, Private)

void URCAdvHUDResearchComponent::OnMenuOpenMouseSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "OnMenuOpenMouseSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailAutoSelectCheckActorMoveStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchDetailAutoSelectCheckActorMoveStart(class ARCCheckActor* InCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailAutoSelectCheckActorMoveStart");

	Params::RCAdvHUDResearchComponent_ResearchDetailAutoSelectCheckActorMoveStart Parms{};

	Parms.InCheckActor = InCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailAutoSelectMoveStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMarkerDataIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchDetailAutoSelectMoveStart(int32 InMarkerDataIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailAutoSelectMoveStart");

	Params::RCAdvHUDResearchComponent_ResearchDetailAutoSelectMoveStart Parms{};

	Parms.InMarkerDataIndex = InMarkerDataIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailCheck
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchDetailCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailCheck");

	Params::RCAdvHUDResearchComponent_ResearchDetailCheck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailCheckAutoSelectMoveFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchDetailCheckAutoSelectMoveFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailCheckAutoSelectMoveFinished");

	Params::RCAdvHUDResearchComponent_ResearchDetailCheckAutoSelectMoveFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchDetailFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailFinish");

	Params::RCAdvHUDResearchComponent_ResearchDetailFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailGetAccessedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDResearchComponent::ResearchDetailGetAccessedIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailGetAccessedIndex");

	Params::RCAdvHUDResearchComponent_ResearchDetailGetAccessedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailGetSelectIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDResearchComponent::ResearchDetailGetSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailGetSelectIndex");

	Params::RCAdvHUDResearchComponent_ResearchDetailGetSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailGetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDResearchDetailType             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDResearchDetailType URCAdvHUDResearchComponent::ResearchDetailGetType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailGetType");

	Params::RCAdvHUDResearchComponent_ResearchDetailGetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchDetailStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCAdvHUDResearchDetailStartData InStartData                                            (Parm, NativeAccessSpecifierPublic)
// ERCAdvHUDResearchDetailType             InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchDetailStart(const struct FRCAdvHUDResearchDetailStartData& InStartData, ERCAdvHUDResearchDetailType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchDetailStart");

	Params::RCAdvHUDResearchComponent_ResearchDetailStart Parms{};

	Parms.InStartData = std::move(InStartData);
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchFinish");

	Params::RCAdvHUDResearchComponent_ResearchFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShowLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInEnableFinish                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInMiniMap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchStart(bool bInShowLocation, bool bInEnableFinish, bool bInMiniMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchStart");

	Params::RCAdvHUDResearchComponent_ResearchStart Parms{};

	Parms.bInShowLocation = bInShowLocation;
	Parms.bInEnableFinish = bInEnableFinish;
	Parms.bInMiniMap = bInMiniMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.ResearchStartWithQuestionText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestionTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInEnableFinish                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInMiniMap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::ResearchStartWithQuestionText(class FName InQuestionTextID, bool bInEnableFinish, bool bInMiniMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "ResearchStartWithQuestionText");

	Params::RCAdvHUDResearchComponent_ResearchStartWithQuestionText Parms{};

	Parms.InQuestionTextID = InQuestionTextID;
	Parms.bInEnableFinish = bInEnableFinish;
	Parms.bInMiniMap = bInMiniMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.SetMarkerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCheckActor*                    InCheckActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInNameDraw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInResearched                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::SetMarkerData(class ARCCheckActor* InCheckActor, class FName InTextID, bool bInDraw, bool bInNameDraw, bool bInResearched, bool bInAccessable, float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "SetMarkerData");

	Params::RCAdvHUDResearchComponent_SetMarkerData Parms{};

	Parms.InCheckActor = InCheckActor;
	Parms.InTextID = InTextID;
	Parms.bInDraw = bInDraw;
	Parms.bInNameDraw = bInNameDraw;
	Parms.bInResearched = bInResearched;
	Parms.bInAccessable = bInAccessable;
	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.SetMarkerEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDResearchComponent::SetMarkerEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "SetMarkerEnable");

	Params::RCAdvHUDResearchComponent_SetMarkerEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDResearchComponent.SpotJudgeTelopCorrectStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::SpotJudgeTelopCorrectStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "SpotJudgeTelopCorrectStart");

	Params::RCAdvHUDResearchComponent_SpotJudgeTelopCorrectStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.SpotJudgeTelopMistakeStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::SpotJudgeTelopMistakeStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "SpotJudgeTelopMistakeStart");

	Params::RCAdvHUDResearchComponent_SpotJudgeTelopMistakeStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.SpotSelectStartTelopCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::SpotSelectStartTelopCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "SpotSelectStartTelopCheckFinished");

	Params::RCAdvHUDResearchComponent_SpotSelectStartTelopCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.SpotSelectStartTelopStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::SpotSelectStartTelopStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "SpotSelectStartTelopStart");

	Params::RCAdvHUDResearchComponent_SpotSelectStartTelopStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.StartTelopCheckFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::StartTelopCheckFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "StartTelopCheckFinished");

	Params::RCAdvHUDResearchComponent_StartTelopCheckFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDResearchComponent.StartTelopStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDResearchComponent::StartTelopStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDResearchComponent", "StartTelopStart");

	Params::RCAdvHUDResearchComponent_StartTelopStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSelectFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSelectFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSelectFinished");

	Params::RCAdvHUDTalkComponent_CheckSelectFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSelectStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSelectStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSelectStarted");

	Params::RCAdvHUDTalkComponent_CheckSelectStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSelectWindow
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSelectWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSelectWindow");

	Params::RCAdvHUDTalkComponent_CheckSelectWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSequentialTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSequentialTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSequentialTalk");

	Params::RCAdvHUDTalkComponent_CheckSequentialTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSequentialTalkCloseAtAllEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSequentialTalkCloseAtAllEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSequentialTalkCloseAtAllEnd");

	Params::RCAdvHUDTalkComponent_CheckSequentialTalkCloseAtAllEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSequentialTalkFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSequentialTalkFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSequentialTalkFinished");

	Params::RCAdvHUDTalkComponent_CheckSequentialTalkFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSequentialTalkFinishedLastText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSequentialTalkFinishedLastText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSequentialTalkFinishedLastText");

	Params::RCAdvHUDTalkComponent_CheckSequentialTalkFinishedLastText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSequentialTalkFromTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InTalkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSequentialTalkFromTalkID(class FName InTalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSequentialTalkFromTalkID");

	Params::RCAdvHUDTalkComponent_CheckSequentialTalkFromTalkID Parms{};

	Parms.InTalkID = InTalkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckSequentialTalkSuspending
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckSequentialTalkSuspending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckSequentialTalkSuspending");

	Params::RCAdvHUDTalkComponent_CheckSequentialTalkSuspending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckTalkEndText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckTalkEndText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckTalkEndText");

	Params::RCAdvHUDTalkComponent_CheckTalkEndText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckTalkFinished
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckTalkFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckTalkFinished");

	Params::RCAdvHUDTalkComponent_CheckTalkFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckTalkSkipVoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckTalkSkipVoice(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckTalkSkipVoice");

	Params::RCAdvHUDTalkComponent_CheckTalkSkipVoice Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckTalkStarted
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckTalkStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckTalkStarted");

	Params::RCAdvHUDTalkComponent_CheckTalkStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckTalkWindow
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckTalkWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckTalkWindow");

	Params::RCAdvHUDTalkComponent_CheckTalkWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.CheckTalkWindowClosed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDTalkWindowType                 InWindowType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::CheckTalkWindowClosed(ERCAdvHUDTalkWindowType InWindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "CheckTalkWindowClosed");

	Params::RCAdvHUDTalkComponent_CheckTalkWindowClosed Parms{};

	Parms.InWindowType = InWindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetBalloonData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAdvHUDBalloonData             OutBalloonData                                         (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::GetBalloonData(int32 InIndex, struct FRCAdvHUDBalloonData* OutBalloonData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetBalloonData");

	Params::RCAdvHUDTalkComponent_GetBalloonData Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBalloonData != nullptr)
		*OutBalloonData = std::move(Parms.OutBalloonData);

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetBalloonDataNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDTalkComponent::GetBalloonDataNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetBalloonDataNum");

	Params::RCAdvHUDTalkComponent_GetBalloonDataNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDTalkComponent::GetSelectedIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetSelectedIndex");

	Params::RCAdvHUDTalkComponent_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetSelectIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDTalkComponent::GetSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetSelectIndex");

	Params::RCAdvHUDTalkComponent_GetSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetSelectWindowState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDWidgetState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDWidgetState URCAdvHUDTalkComponent::GetSelectWindowState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetSelectWindowState");

	Params::RCAdvHUDTalkComponent_GetSelectWindowState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetSequentialTalkVoiceCharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDTalkComponent::GetSequentialTalkVoiceCharacterID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetSequentialTalkVoiceCharacterID");

	Params::RCAdvHUDTalkComponent_GetSequentialTalkVoiceCharacterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetTalkIconData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAdvHUDTalkIconData            OutTalkIconData                                        (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::GetTalkIconData(int32 InIndex, struct FRCAdvHUDTalkIconData* OutTalkIconData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetTalkIconData");

	Params::RCAdvHUDTalkComponent_GetTalkIconData Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTalkIconData != nullptr)
		*OutTalkIconData = std::move(Parms.OutTalkIconData);

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetTalkIconDataNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCAdvHUDTalkComponent::GetTalkIconDataNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetTalkIconDataNum");

	Params::RCAdvHUDTalkComponent_GetTalkIconDataNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetUsingTalkWidgetOldState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDWidgetState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDWidgetState URCAdvHUDTalkComponent::GetUsingTalkWidgetOldState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetUsingTalkWidgetOldState");

	Params::RCAdvHUDTalkComponent_GetUsingTalkWidgetOldState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.GetUsingTalkWidgetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDWidgetState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDWidgetState URCAdvHUDTalkComponent::GetUsingTalkWidgetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "GetUsingTalkWidgetState");

	Params::RCAdvHUDTalkComponent_GetUsingTalkWidgetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.IsBalloonVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::IsBalloonVisible(class APawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "IsBalloonVisible");

	Params::RCAdvHUDTalkComponent_IsBalloonVisible Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.IsTalkIconVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::IsTalkIconVisible(class APawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "IsTalkIconVisible");

	Params::RCAdvHUDTalkComponent_IsTalkIconVisible Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SelectFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SelectFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SelectFinish");

	Params::RCAdvHUDTalkComponent_SelectFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SelectSetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbCheckMark                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SelectSetData(int32 InIndex, class FName InTextID, bool InbCheckMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SelectSetData");

	Params::RCAdvHUDTalkComponent_SelectSetData Parms{};

	Parms.InIndex = InIndex;
	Parms.InTextID = InTextID;
	Parms.InbCheckMark = InbCheckMark;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SelectStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSelectNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InQuestionTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SelectStart(int32 InSelectNum, class FName InQuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SelectStart");

	Params::RCAdvHUDTalkComponent_SelectStart Parms{};

	Parms.InSelectNum = InSelectNum;
	Parms.InQuestionTextID = InQuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SelectStartWithDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRCReHUDSelectData>       InSelectDataArray                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             InQuestionTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SelectStartWithDataArray(const TArray<struct FRCReHUDSelectData>& InSelectDataArray, class FName InQuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SelectStartWithDataArray");

	Params::RCAdvHUDTalkComponent_SelectStartWithDataArray Parms{};

	Parms.InSelectDataArray = std::move(InSelectDataArray);
	Parms.InQuestionTextID = InQuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SequentialTalkFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SequentialTalkFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SequentialTalkFinish");

	Params::RCAdvHUDTalkComponent_SequentialTalkFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SequentialTalkRequestSuspend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SequentialTalkRequestSuspend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SequentialTalkRequestSuspend");

	Params::RCAdvHUDTalkComponent_SequentialTalkRequestSuspend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SequentialTalkRestart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SequentialTalkRestart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SequentialTalkRestart");

	Params::RCAdvHUDTalkComponent_SequentialTalkRestart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SequentialTalkResume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SequentialTalkResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SequentialTalkResume");

	Params::RCAdvHUDTalkComponent_SequentialTalkResume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SequentialTalkStart2
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTalkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCTalkData                      InTalkData                                             (Parm, NativeAccessSpecifierPublic)
// bool                                    bInForceAutoPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SequentialTalkStart2(class FName InTalkID, const struct FRCTalkData& InTalkData, bool bInForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SequentialTalkStart2");

	Params::RCAdvHUDTalkComponent_SequentialTalkStart2 Parms{};

	Parms.InTalkID = InTalkID;
	Parms.InTalkData = std::move(InTalkData);
	Parms.bInForceAutoPlay = bInForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SequentialTalkStartFromData2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCTalkData                      InTalkData                                             (Parm, NativeAccessSpecifierPublic)
// bool                                    bInForceAutoPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SequentialTalkStartFromData2(const struct FRCTalkData& InTalkData, bool bInForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SequentialTalkStartFromData2");

	Params::RCAdvHUDTalkComponent_SequentialTalkStartFromData2 Parms{};

	Parms.InTalkData = std::move(InTalkData);
	Parms.bInForceAutoPlay = bInForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SequentialTalkStartFromDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InTable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTalkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInForceAutoPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SequentialTalkStartFromDataTable(class UDataTable* InTable, class FName InTalkID, bool bInForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SequentialTalkStartFromDataTable");

	Params::RCAdvHUDTalkComponent_SequentialTalkStartFromDataTable Parms{};

	Parms.InTable = InTable;
	Parms.InTalkID = InTalkID;
	Parms.bInForceAutoPlay = bInForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SequentialTalkStartFromTalkID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTalkID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInForceAutoPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SequentialTalkStartFromTalkID(class FName InTalkID, bool bInForceAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SequentialTalkStartFromTalkID");

	Params::RCAdvHUDTalkComponent_SequentialTalkStartFromTalkID Parms{};

	Parms.InTalkID = InTalkID;
	Parms.bInForceAutoPlay = bInForceAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SetBalloonData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCBaloonFrame                          InBalloonFrameType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCBaloonType                           InBalloonContentType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBalloonDraw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInTextDraw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SetBalloonData(class APawn* InPawn, ESCBaloonFrame InBalloonFrameType, ESCBaloonType InBalloonContentType, class FName InTextID, bool bInBalloonDraw, bool bInTextDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SetBalloonData");

	Params::RCAdvHUDTalkComponent_SetBalloonData Parms{};

	Parms.InPawn = InPawn;
	Parms.InBalloonFrameType = InBalloonFrameType;
	Parms.InBalloonContentType = InBalloonContentType;
	Parms.InTextID = InTextID;
	Parms.bInBalloonDraw = bInBalloonDraw;
	Parms.bInTextDraw = bInTextDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SetShinigamiActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InShinigamiActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAdvHUDTalkComponent::SetShinigamiActor(class ARCCharacterRender* InShinigamiActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SetShinigamiActor");

	Params::RCAdvHUDTalkComponent_SetShinigamiActor Parms{};

	Parms.InShinigamiActor = InShinigamiActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAdvHUDTalkComponent.SetTalkIconData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAccessable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSubquest                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInGoal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SetTalkIconData(class APawn* InPawn, bool bInDraw, bool bInAccessable, bool bInSubquest, float InScale, bool bInGoal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SetTalkIconData");

	Params::RCAdvHUDTalkComponent_SetTalkIconData Parms{};

	Parms.InPawn = InPawn;
	Parms.bInDraw = bInDraw;
	Parms.bInAccessable = bInAccessable;
	Parms.bInSubquest = bInSubquest;
	Parms.InScale = InScale;
	Parms.bInGoal = bInGoal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SpSelect_CheckLoadWBPCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDSpSelectType                   SpSelectType_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SpSelect_CheckLoadWBPCompleted(ERCAdvHUDSpSelectType SpSelectType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SpSelect_CheckLoadWBPCompleted");

	Params::RCAdvHUDTalkComponent_SpSelect_CheckLoadWBPCompleted Parms{};

	Parms.SpSelectType_0 = SpSelectType_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SpSelect_ReleaseWBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDSpSelectType                   SpSelectType_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SpSelect_ReleaseWBP(ERCAdvHUDSpSelectType SpSelectType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SpSelect_ReleaseWBP");

	Params::RCAdvHUDTalkComponent_SpSelect_ReleaseWBP Parms{};

	Parms.SpSelectType_0 = SpSelectType_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SpSelect_StartLoadWBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDSpSelectType                   SpSelectType_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SpSelect_StartLoadWBP(ERCAdvHUDSpSelectType SpSelectType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SpSelect_StartLoadWBP");

	Params::RCAdvHUDTalkComponent_SpSelect_StartLoadWBP Parms{};

	Parms.SpSelectType_0 = SpSelectType_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.SpSelect_StartWithDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDSpSelectType                   SpSelectType_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRCReHUDSelectData>       SelectDataArray_0                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             QuestionTextID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::SpSelect_StartWithDataArray(ERCAdvHUDSpSelectType SpSelectType_0, const TArray<struct FRCReHUDSelectData>& SelectDataArray_0, class FName QuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "SpSelect_StartWithDataArray");

	Params::RCAdvHUDTalkComponent_SpSelect_StartWithDataArray Parms{};

	Parms.SpSelectType_0 = SpSelectType_0;
	Parms.SelectDataArray_0 = std::move(SelectDataArray_0);
	Parms.QuestionTextID = QuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkFinish");

	Params::RCAdvHUDTalkComponent_TalkFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkLoadCharacterData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterNameID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterNameSubID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkLoadCharacterData(int32 InCharacterNameID, int32 InCharacterNameSubID, int32 InCharacterFaceID, int32 InCharacterFacialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkLoadCharacterData");

	Params::RCAdvHUDTalkComponent_TalkLoadCharacterData Parms{};

	Parms.InCharacterNameID = InCharacterNameID;
	Parms.InCharacterNameSubID = InCharacterNameSubID;
	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkLoadCharacterData2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterNameID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           InCharacterNameSubIDs                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           InCharacterFacialIDs                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkLoadCharacterData2(int32 InCharacterNameID, const TArray<int32>& InCharacterNameSubIDs, int32 InCharacterFaceID, const TArray<int32>& InCharacterFacialIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkLoadCharacterData2");

	Params::RCAdvHUDTalkComponent_TalkLoadCharacterData2 Parms{};

	Parms.InCharacterNameID = InCharacterNameID;
	Parms.InCharacterNameSubIDs = std::move(InCharacterNameSubIDs);
	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialIDs = std::move(InCharacterFacialIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkLoadFaceData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkLoadFaceData(int32 InCharacterFaceID, int32 InCharacterFacialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkLoadFaceData");

	Params::RCAdvHUDTalkComponent_TalkLoadFaceData Parms{};

	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkLoadNameplateData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterNameID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterNameSubID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkLoadNameplateData(int32 InCharacterNameID, int32 InCharacterNameSubID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkLoadNameplateData");

	Params::RCAdvHUDTalkComponent_TalkLoadNameplateData Parms{};

	Parms.InCharacterNameID = InCharacterNameID;
	Parms.InCharacterNameSubID = InCharacterNameSubID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkSetAuto
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAutoPlay                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkSetAuto(bool bInAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkSetAuto");

	Params::RCAdvHUDTalkComponent_TalkSetAuto Parms{};

	Parms.bInAutoPlay = bInAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkSetForceTextSpeedSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsForceTextSpeed                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InForceTextSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkSetForceTextSpeedSettings(bool bInIsForceTextSpeed, int32 InForceTextSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkSetForceTextSpeedSettings");

	Params::RCAdvHUDTalkComponent_TalkSetForceTextSpeedSettings Parms{};

	Parms.bInIsForceTextSpeed = bInIsForceTextSpeed;
	Parms.InForceTextSpeed = InForceTextSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkSetGradationFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InFilterID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkSetGradationFilter(class FName InFilterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkSetGradationFilter");

	Params::RCAdvHUDTalkComponent_TalkSetGradationFilter Parms{};

	Parms.InFilterID = InFilterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkSetText2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacter3DID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCharacter3DFacialID                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InVoiceID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEndText                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkSetText2(int32 InCharacterFaceID, int32 InCharacterFacialID, class FName InTextID, int32 InCharacter3DID, class FName InCharacter3DFacialID, class FName InVoiceID, float InDelayAtEndText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkSetText2");

	Params::RCAdvHUDTalkComponent_TalkSetText2 Parms{};

	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;
	Parms.InTextID = InTextID;
	Parms.InCharacter3DID = InCharacter3DID;
	Parms.InCharacter3DFacialID = InCharacter3DFacialID;
	Parms.InVoiceID = InVoiceID;
	Parms.InDelayAtEndText = InDelayAtEndText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkSetTextData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCAdvHUDTalkTextData            InTextData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkSetTextData(const struct FRCAdvHUDTalkTextData& InTextData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkSetTextData");

	Params::RCAdvHUDTalkComponent_TalkSetTextData Parms{};

	Parms.InTextData = std::move(InTextData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkSetTextSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEndText                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkSetTextSimple(class FName InTextID, float InDelayAtEndText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkSetTextSimple");

	Params::RCAdvHUDTalkComponent_TalkSetTextSimple Parms{};

	Parms.InTextID = InTextID;
	Parms.InDelayAtEndText = InDelayAtEndText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkStart2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDTalkWindowType                 InWindowType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoPlay                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkStart2(ERCAdvHUDTalkWindowType InWindowType, class FName InTextID, int32 InCharacterFaceID, int32 InCharacterFacialID, bool bInAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkStart2");

	Params::RCAdvHUDTalkComponent_TalkStart2 Parms{};

	Parms.InWindowType = InWindowType;
	Parms.InTextID = InTextID;
	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;
	Parms.bInAutoPlay = bInAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkStartSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDTalkWindowType                 InWindowType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkStartSimple(ERCAdvHUDTalkWindowType InWindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkStartSimple");

	Params::RCAdvHUDTalkComponent_TalkStartSimple Parms{};

	Parms.InWindowType = InWindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAdvHUDTalkComponent.TalkWindowClose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDTalkWindowType                 InWindowType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCAdvHUDTalkComponent::TalkWindowClose(ERCAdvHUDTalkWindowType InWindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAdvHUDTalkComponent", "TalkWindowClose");

	Params::RCAdvHUDTalkComponent_TalkWindowClose Parms{};

	Parms.InWindowType = InWindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleAnswerBase.InitializePuzzleAnswerBase
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleAnswerBase::InitializePuzzleAnswerBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleAnswerBase", "InitializePuzzleAnswerBase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleAnswerBase.SetAnswer
// (Final, Native, Public)
// Parameters:
// class FName                             wordText                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       wordTexture                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleAnswerBase::SetAnswer(class FName wordText, class UTexture2D* wordTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleAnswerBase", "SetAnswer");

	Params::RCNzPuzzleAnswerBase_SetAnswer Parms{};

	Parms.wordText = wordText;
	Parms.wordTexture = wordTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapImage.OnFinishGenericWindow
// (Final, Native, Public)
// Parameters:
// bool                                    bResult                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuAreaMapImage::OnFinishGenericWindow(bool bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapImage", "OnFinishGenericWindow");

	Params::RCUiMenuAreaMapImage_OnFinishGenericWindow Parms{};

	Parms.bResult = bResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanBFL.SwitchBackFromAmatan
// (Final, Native, Static, Public, BlueprintCallable)

void URCAmatanBFL::SwitchBackFromAmatan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAmatanBFL", "SwitchBackFromAmatan");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanBFL.SwitchToAmatan
// (Final, Native, Static, Public, BlueprintCallable)

void URCAmatanBFL::SwitchToAmatan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAmatanBFL", "SwitchToAmatan");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiChousaFinish.GetNzChousaFinishPriority
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiChousaFinish::GetNzChousaFinishPriority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzUiChousaFinish", "GetNzChousaFinishPriority");

	Params::RCNzUiChousaFinish_GetNzChousaFinishPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiChousaFinish.CloseChousaFinish
// (Final, Native, Protected, BlueprintCallable)

void URCNzUiChousaFinish::CloseChousaFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiChousaFinish", "CloseChousaFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiChousaFinish.IsFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiChousaFinish::IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiChousaFinish", "IsFinished");

	Params::RCNzUiChousaFinish_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiChousaFinish.OpenChousaFinish
// (Final, Native, Public, BlueprintCallable)

void URCNzUiChousaFinish::OpenChousaFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiChousaFinish", "OpenChousaFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkill.CloseMenu
// (Final, Native, Protected)

void URCUiMenuSkill::CloseMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkill", "CloseMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGameModeBase.SetNextLevelName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCGameModeBase::SetNextLevelName(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGameModeBase", "SetNextLevelName");

	Params::RCGameModeBase_SetNextLevelName Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanHUD.Ask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FRCReHUDSelectData>       InSelectDataArray                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             InQuestionTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanHUD::Ask(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const TArray<struct FRCReHUDSelectData>& InSelectDataArray, class FName InQuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanHUD", "Ask");

	Params::RCAmatanHUD_Ask Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.InSelectDataArray = std::move(InSelectDataArray);
	Parms.InQuestionTextID = InQuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanHUD.CheckSelectFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanHUD::CheckSelectFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanHUD", "CheckSelectFinished");

	Params::RCAmatanHUD_CheckSelectFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanHUD.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAmatanHUD::GetSelectedIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanHUD", "GetSelectedIndex");

	Params::RCAmatanHUD_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanHUD.SelectStartWithDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRCReHUDSelectData>       InSelectDataArray                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             InQuestionTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanHUD::SelectStartWithDataArray(const TArray<struct FRCReHUDSelectData>& InSelectDataArray, class FName InQuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanHUD", "SelectStartWithDataArray");

	Params::RCAmatanHUD_SelectStartWithDataArray Parms{};

	Parms.InSelectDataArray = std::move(InSelectDataArray);
	Parms.InQuestionTextID = InQuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanHUD.SetRobotComponentVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanHUD::SetRobotComponentVisibility(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanHUD", "SetRobotComponentVisibility");

	Params::RCAmatanHUD_SetRobotComponentVisibility Parms{};

	Parms.Show = Show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawn.IsPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPawn::IsPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawn", "IsPause");

	Params::RCPawn_IsPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPawn.IsPauseCancelFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPawn::IsPauseCancelFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawn", "IsPauseCancelFlag");

	Params::RCPawn_IsPauseCancelFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPawn.IsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPawn::IsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawn", "IsVisibility");

	Params::RCPawn_IsVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPawn.SetPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPause                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawn::SetPause(bool bInPause, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawn", "SetPause");

	Params::RCPawn_SetPause Parms{};

	Parms.bInPause = bInPause;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawn.SetPauseCancelFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPauseCancel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawn::SetPauseCancelFlag(bool bInPauseCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawn", "SetPauseCancelFlag");

	Params::RCPawn_SetPauseCancelFlag Parms{};

	Parms.bInPauseCancel = bInPauseCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawn.SetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCollision                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawn::SetVisibility(bool bInVisible, bool bDirect, bool bIsCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawn", "SetVisibility");

	Params::RCPawn_SetVisibility Parms{};

	Parms.bInVisible = bInVisible;
	Parms.bDirect = bDirect;
	Parms.bIsCollision = bIsCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.BackupMovePosition
// (Final, Native, Public, BlueprintCallable)

void ARCPawnScript::BackupMovePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "BackupMovePosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.GetActorLocationBalloon
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCPawnScript::GetActorLocationBalloon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "GetActorLocationBalloon");

	Params::RCPawnScript_GetActorLocationBalloon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPawnScript.GetActorLocationFoot
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCPawnScript::GetActorLocationFoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "GetActorLocationFoot");

	Params::RCPawnScript_GetActorLocationFoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPawnScript.IsMoveEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPawnScript::IsMoveEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "IsMoveEnd");

	Params::RCPawnScript_IsMoveEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPawnScript.ResetMove
// (Final, Native, Public, BlueprintCallable)

void ARCPawnScript::ResetMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "ResetMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.RestoreMoveList
// (Final, Native, Public, BlueprintCallable)

void ARCPawnScript::RestoreMoveList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "RestoreMoveList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.RestoreMovePosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::RestoreMovePosition(float SpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "RestoreMovePosition");

	Params::RCPawnScript_RestoreMovePosition Parms{};

	Parms.SpeedScale = SpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.RestoreRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::RestoreRotationYaw(float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "RestoreRotationYaw");

	Params::RCPawnScript_RestoreRotationYaw Parms{};

	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.SetMovePause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMovePause                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::SetMovePause(bool bInMovePause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "SetMovePause");

	Params::RCPawnScript_SetMovePause Parms{};

	Parms.bInMovePause = bInMovePause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.SetMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWalkSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRunSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::SetMoveSpeed(float InWalkSpeed, float InRunSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "SetMoveSpeed");

	Params::RCPawnScript_SetMoveSpeed Parms{};

	Parms.InWalkSpeed = InWalkSpeed;
	Parms.InRunSpeed = InRunSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.SetPositionYaw
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::SetPositionYaw(const struct FVector& InPosition, float InYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "SetPositionYaw");

	Params::RCPawnScript_SetPositionYaw Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.InYaw = InYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.SetTransformPlayerStartName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPlayerStartTagName                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::SetTransformPlayerStartName(class FName InPlayerStartTagName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "SetTransformPlayerStartName");

	Params::RCPawnScript_SetTransformPlayerStartName Parms{};

	Parms.InPlayerStartTagName = InPlayerStartTagName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.SetTransformTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::SetTransformTargetPointName(class FName InPointName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "SetTransformTargetPointName");

	Params::RCPawnScript_SetTransformTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartMoveFromPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InLength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndPlayerYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartMoveFromPlayer(float InLength, float InAngle, float InHeight, float SpeedScale, bool bEndPlayerYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartMoveFromPlayer");

	Params::RCPawnScript_StartMoveFromPlayer Parms{};

	Parms.InLength = InLength;
	Parms.InAngle = InAngle;
	Parms.InHeight = InHeight;
	Parms.SpeedScale = SpeedScale;
	Parms.bEndPlayerYaw = bEndPlayerYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartMoveFromPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndChangeYawPosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartMoveFromPosition(const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bEndChangeYaw, const struct FVector& EndChangeYawPosition, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartMoveFromPosition");

	Params::RCPawnScript_StartMoveFromPosition Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.EndChangeYawPosition = std::move(EndChangeYawPosition);
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartMoveFromPositionList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRCScriptActorMoveInfo>   InMoveInfoList                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   StartMoveInfoNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartMoveFromPositionList(const TArray<struct FRCScriptActorMoveInfo>& InMoveInfoList, int32 StartMoveInfoNum, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartMoveFromPositionList");

	Params::RCPawnScript_StartMoveFromPositionList Parms{};

	Parms.InMoveInfoList = std::move(InMoveInfoList);
	Parms.StartMoveInfoNum = StartMoveInfoNum;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartMoveFromSplineName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSplineName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDistanceRange                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartMoveFromSplineName(class FName InSplineName, float StartDistanceRange, bool bReverse, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartMoveFromSplineName");

	Params::RCPawnScript_StartMoveFromSplineName Parms{};

	Parms.InSplineName = InSplineName;
	Parms.StartDistanceRange = StartDistanceRange;
	Parms.bReverse = bReverse;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartMoveFromTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InChangeYawSpeedScale                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartMoveFromTargetPointName(class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, bool bEndChangeYaw, float InOffsetYaw, float InChangeYawSpeedScale, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartMoveFromTargetPointName");

	Params::RCPawnScript_StartMoveFromTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.InChangeYawSpeedScale = InChangeYawSpeedScale;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartRotationFromCharacter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTargetCharacterName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartRotationFromCharacter(class FName InTargetCharacterName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartRotationFromCharacter");

	Params::RCPawnScript_StartRotationFromCharacter Parms{};

	Parms.InTargetCharacterName = InTargetCharacterName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartRotationFromPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartRotationFromPosition(const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartRotationFromPosition");

	Params::RCPawnScript_StartRotationFromPosition Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartRotationFromTargetPointName
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartRotationFromTargetPointName(class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartRotationFromTargetPointName");

	Params::RCPawnScript_StartRotationFromTargetPointName Parms{};

	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StartRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnScript::StartRotationYaw(float Yaw, float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StartRotationYaw");

	Params::RCPawnScript_StartRotationYaw Parms{};

	Parms.Yaw = Yaw;
	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnScript.StopMove
// (Final, Native, Public, BlueprintCallable)

void ARCPawnScript::StopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnScript", "StopMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPawnScript.AutoPilot
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          NewPosition                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         NewRotate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    Teleport                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IgnoreEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPawnScript::AutoPilot(const struct FVector& NewPosition, const struct FRotator& NewRotate, bool Teleport, bool IgnoreEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "AutoPilot");

	Params::RCAmatanPawnScript_AutoPilot Parms{};

	Parms.NewPosition = std::move(NewPosition);
	Parms.NewRotate = std::move(NewRotate);
	Parms.Teleport = Teleport;
	Parms.IgnoreEvent = IgnoreEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPawnScript.AutoPilotMove
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          NewPosition                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Teleport                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IgnoreEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPawnScript::AutoPilotMove(const struct FVector& NewPosition, bool Teleport, bool IgnoreEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "AutoPilotMove");

	Params::RCAmatanPawnScript_AutoPilotMove Parms{};

	Parms.NewPosition = std::move(NewPosition);
	Parms.Teleport = Teleport;
	Parms.IgnoreEvent = IgnoreEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPawnScript.AutoPilotRotate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         NewRotate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ARCAmatanPawnScript::AutoPilotRotate(const struct FRotator& NewRotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "AutoPilotRotate");

	Params::RCAmatanPawnScript_AutoPilotRotate Parms{};

	Parms.NewRotate = std::move(NewRotate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPawnScript.CalcDurationForAutoMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Dist                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCAmatanPawnScript::CalcDurationForAutoMove(class AActor* Dist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "CalcDurationForAutoMove");

	Params::RCAmatanPawnScript_CalcDurationForAutoMove Parms{};

	Parms.Dist = Dist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPawnScript.CalcDurationForAutoRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Dist                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCAmatanPawnScript::CalcDurationForAutoRotationYaw(class AActor* Dist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "CalcDurationForAutoRotationYaw");

	Params::RCAmatanPawnScript_CalcDurationForAutoRotationYaw Parms{};

	Parms.Dist = Dist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPawnScript.GetCapsuleComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCapsuleComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCapsuleComponent* ARCAmatanPawnScript::GetCapsuleComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "GetCapsuleComponent");

	Params::RCAmatanPawnScript_GetCapsuleComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPawnScript.GetPostEffectWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCAmatanPawnScript::GetPostEffectWeight(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "GetPostEffectWeight");

	Params::RCAmatanPawnScript_GetPostEffectWeight Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPawnScript.GetSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* ARCAmatanPawnScript::GetSkeletalMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "GetSkeletalMeshComponent");

	Params::RCAmatanPawnScript_GetSkeletalMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPawnScript.Pause_Anim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCAmatanPawnScript::Pause_Anim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "Pause_Anim");

	Params::RCAmatanPawnScript_Pause_Anim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPawnScript.Play_APull
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCAmatanPawnScript::Play_APull()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "Play_APull");

	Params::RCAmatanPawnScript_Play_APull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPawnScript.Play_APush
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCAmatanPawnScript::Play_APush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "Play_APush");

	Params::RCAmatanPawnScript_Play_APush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPawnScript.SetEffectOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPawnScript::SetEffectOffset(float Distance, float Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "SetEffectOffset");

	Params::RCAmatanPawnScript_SetEffectOffset Parms{};

	Parms.Distance = Distance;
	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPawnScript.SetPostEffectWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Weight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPawnScript::SetPostEffectWeight(int32 Index_0, float Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPawnScript", "SetPostEffectWeight");

	Params::RCAmatanPawnScript_SetPostEffectWeight Parms{};

	Parms.Index_0 = Index_0;
	Parms.Weight = Weight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuTutorialListBar.DecidedProc
// (Final, Native, Public)

void URCUiMenuTutorialListBar::DecidedProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuTutorialListBar", "DecidedProc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPlayerController.IsBeginPlayEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPlayerController::IsBeginPlayEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerController", "IsBeginPlayEnd");

	Params::RCPlayerController_IsBeginPlayEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPlayerController.IsReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPlayerController::IsReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerController", "IsReady");

	Params::RCPlayerController_IsReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPlayerController.LevelBeginPlayFinishedCallback
// (Event, Public, BlueprintEvent)

void ARCPlayerController::LevelBeginPlayFinishedCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerController", "LevelBeginPlayFinishedCallback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCPlayerController.SetMouseOverEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMouseOverEnable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPlayerController::SetMouseOverEnable(bool bInMouseOverEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerController", "SetMouseOverEnable");

	Params::RCPlayerController_SetMouseOverEnable Parms{};

	Parms.bInMouseOverEnable = bInMouseOverEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPlayerController.SetSkipEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSkipEnable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPlayerController::SetSkipEnable(bool bInSkipEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerController", "SetSkipEnable");

	Params::RCPlayerController_SetSkipEnable Parms{};

	Parms.bInSkipEnable = bInSkipEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPlayerController.IsMouseOverEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPlayerController::IsMouseOverEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerController", "IsMouseOverEnable");

	Params::RCPlayerController_IsMouseOverEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPlayerController.IsSkipEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPlayerController::IsSkipEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerController", "IsSkipEnable");

	Params::RCPlayerController_IsSkipEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.ActivateShockEffect
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::ActivateShockEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "ActivateShockEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.DeactivateShockEffect
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::DeactivateShockEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "DeactivateShockEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.DidGoal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanPlayerController::DidGoal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "DidGoal");

	Params::RCAmatanPlayerController_DidGoal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.ExtendArm
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::ExtendArm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "ExtendArm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.Face
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::Face(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "Face");

	Params::RCAmatanPlayerController_Face Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.FinishPuzzle
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::FinishPuzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "FinishPuzzle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.ForbidMovementSound
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::ForbidMovementSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "ForbidMovementSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.ForceGoal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanPlayerController::ForceGoal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "ForceGoal");

	Params::RCAmatanPlayerController_ForceGoal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.GetAmatanPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCAmatanPawnScript*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCAmatanPawnScript* ARCAmatanPlayerController::GetAmatanPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "GetAmatanPawn");

	Params::RCAmatanPlayerController_GetAmatanPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.GetRetryCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCAmatanPlayerController::GetRetryCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "GetRetryCount");

	Params::RCAmatanPlayerController_GetRetryCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.GetSkippable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanPlayerController::GetSkippable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "GetSkippable");

	Params::RCAmatanPlayerController_GetSkippable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.LockMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::LockMovement(float Timeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "LockMovement");

	Params::RCAmatanPlayerController_LockMovement Parms{};

	Parms.Timeout = Timeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.LockMovementInfinity
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::LockMovementInfinity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "LockMovementInfinity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.LockMovementOverride
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::LockMovementOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "LockMovementOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.LockMovementOverrideTemporary
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::LockMovementOverrideTemporary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "LockMovementOverrideTemporary");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.OnArmComponentOverlapped
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::OnArmComponentOverlapped(class UPrimitiveComponent* Comp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "OnArmComponentOverlapped");

	Params::RCAmatanPlayerController_OnArmComponentOverlapped Parms{};

	Parms.Comp = Comp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.OnComponentHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       R                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& R)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "OnComponentHit");

	Params::RCAmatanPlayerController_OnComponentHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.R = std::move(R);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.OnFailed
// (Final, Native, Public)
// Parameters:
// int32                                   nowsteps                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCAmatanPuzzleFailureCode              code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   last                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::OnFailed(int32 nowsteps, ERCAmatanPuzzleFailureCode code, int32 last)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "OnFailed");

	Params::RCAmatanPlayerController_OnFailed Parms{};

	Parms.nowsteps = nowsteps;
	Parms.code = code;
	Parms.last = last;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.PermitMovementSound
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::PermitMovementSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "PermitMovementSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.ResearchFinish
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::ResearchFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "ResearchFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.ResearchStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    UsePointer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::ResearchStart(bool UsePointer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "ResearchStart");

	Params::RCAmatanPlayerController_ResearchStart Parms{};

	Parms.UsePointer = UsePointer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.Restart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   After                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::Restart(float After)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "Restart");

	Params::RCAmatanPlayerController_Restart Parms{};

	Parms.After = After;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.RestartFrom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   After                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::RestartFrom(float After, class FName StartPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "RestartFrom");

	Params::RCAmatanPlayerController_RestartFrom Parms{};

	Parms.After = After;
	Parms.StartPoint = StartPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.Resume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanPlayerController::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "Resume");

	Params::RCAmatanPlayerController_Resume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.SetAnswer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           NewAnswer                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::SetAnswer(const TArray<int32>& NewAnswer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "SetAnswer");

	Params::RCAmatanPlayerController_SetAnswer Parms{};

	Parms.NewAnswer = std::move(NewAnswer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.SetEventScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Event                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::SetEventScene(bool Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "SetEventScene");

	Params::RCAmatanPlayerController_SetEventScene Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.SetForceArming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    UpdateUI                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::SetForceArming(bool UpdateUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "SetForceArming");

	Params::RCAmatanPlayerController_SetForceArming Parms{};

	Parms.UpdateUI = UpdateUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.SetNiagaraBlueprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ANiagaraActor*                    bp                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::SetNiagaraBlueprint(class ANiagaraActor* bp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "SetNiagaraBlueprint");

	Params::RCAmatanPlayerController_SetNiagaraBlueprint Parms{};

	Parms.bp = bp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.SetSaveable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Save                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::SetSaveable(bool Save)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "SetSaveable");

	Params::RCAmatanPlayerController_SetSaveable Parms{};

	Parms.Save = Save;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.SetSkippable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Skippable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::SetSkippable(bool Skippable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "SetSkippable");

	Params::RCAmatanPlayerController_SetSkippable Parms{};

	Parms.Skippable = Skippable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.ShrinkArm
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::ShrinkArm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "ShrinkArm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.StartPlay
// (Native, Public, BlueprintCallable)
// Parameters:
// ERCRealPlayerGameMode                   InGameMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::StartPlay(ERCRealPlayerGameMode InGameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "StartPlay");

	Params::RCAmatanPlayerController_StartPlay Parms{};

	Parms.InGameMode = InGameMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.StartPuzzle
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::StartPuzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "StartPuzzle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.UnlockMovement
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::UnlockMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "UnlockMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.UnlockMovementOverride
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::UnlockMovementOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "UnlockMovementOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.UnlockMovementOverrideTemorary
// (Final, Native, Public, BlueprintCallable)

void ARCAmatanPlayerController::UnlockMovementOverrideTemorary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "UnlockMovementOverrideTemorary");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.UnsetForceArming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    UpdateUI                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::UnsetForceArming(bool UpdateUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "UnsetForceArming");

	Params::RCAmatanPlayerController_UnsetForceArming Parms{};

	Parms.UpdateUI = UpdateUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.Voice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCAmatanPlayerController::Voice(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "Voice");

	Params::RCAmatanPlayerController_Voice Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAmatanPlayerController.CanExtendArm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanPlayerController::CanExtendArm() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "CanExtendArm");

	Params::RCAmatanPlayerController_CanExtendArm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.GetSaveable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanPlayerController::GetSaveable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "GetSaveable");

	Params::RCAmatanPlayerController_GetSaveable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAmatanPlayerController.IsMovementLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCAmatanPlayerController::IsMovementLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAmatanPlayerController", "IsMovementLocked");

	Params::RCAmatanPlayerController_IsMovementLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.AddChildLL
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      targetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveImageWidget::AddChildLL(class UUserWidget* targetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "AddChildLL");

	Params::RCNzUiFinaleDetectiveImageWidget_AddChildLL Parms{};

	Parms.targetWidget = targetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.AddChildLR
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      targetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveImageWidget::AddChildLR(class UUserWidget* targetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "AddChildLR");

	Params::RCNzUiFinaleDetectiveImageWidget_AddChildLR Parms{};

	Parms.targetWidget = targetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.AddChildRL
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      targetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveImageWidget::AddChildRL(class UUserWidget* targetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "AddChildRL");

	Params::RCNzUiFinaleDetectiveImageWidget_AddChildRL Parms{};

	Parms.targetWidget = targetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.AddChildRR
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      targetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveImageWidget::AddChildRR(class UUserWidget* targetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "AddChildRR");

	Params::RCNzUiFinaleDetectiveImageWidget_AddChildRR Parms{};

	Parms.targetWidget = targetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.InitializeDetectiveImageWidget
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleDetectiveImageWidget::InitializeDetectiveImageWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "InitializeDetectiveImageWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.PlaytoLeftAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleDetectiveImageWidget::PlaytoLeftAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "PlaytoLeftAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.PlayToRightAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleDetectiveImageWidget::PlayToRightAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "PlayToRightAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.ResetPageWidget
// (Final, Native, Public)

void URCNzUiFinaleDetectiveImageWidget::ResetPageWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "ResetPageWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.SetLeftPage
// (Final, Native, Public, HasOutParams)
// Parameters:
// TSubclassOf<class UUserWidget>          pageClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRCNzUiFinaleInteractImgInfo>PieceImgList                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveImageWidget::SetLeftPage(TSubclassOf<class UUserWidget> pageClass, const TArray<struct FRCNzUiFinaleInteractImgInfo>& PieceImgList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "SetLeftPage");

	Params::RCNzUiFinaleDetectiveImageWidget_SetLeftPage Parms{};

	Parms.pageClass = pageClass;
	Parms.PieceImgList = std::move(PieceImgList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.SetRightPage
// (Final, Native, Public, HasOutParams)
// Parameters:
// TSubclassOf<class UUserWidget>          pageClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRCNzUiFinaleInteractImgInfo>PieceImgList                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveImageWidget::SetRightPage(TSubclassOf<class UUserWidget> pageClass, const TArray<struct FRCNzUiFinaleInteractImgInfo>& PieceImgList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "SetRightPage");

	Params::RCNzUiFinaleDetectiveImageWidget_SetRightPage Parms{};

	Parms.pageClass = pageClass;
	Parms.PieceImgList = std::move(PieceImgList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageWidget.StartPageTurn
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleDetectiveImageWidget::StartPageTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageWidget", "StartPageTurn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInstallBFL.IsInstallComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInstallBFL::IsInstallComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCInstallBFL", "IsInstallComplete");

	Params::RCInstallBFL_IsInstallComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleTimer.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleTimer::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleTimer", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleTimer.GetBattleTimerStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleTimerStatus                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleTimerStatus URCNzUiBattleTimer::GetBattleTimerStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleTimer", "GetBattleTimerStatus");

	Params::RCNzUiBattleTimer_GetBattleTimerStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleTimer.InitializeBattleTimer
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleTimer::InitializeBattleTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleTimer", "InitializeBattleTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleTimer.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleTimer::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleTimer", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleTimer.SetElapsedTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InElapsedTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLimitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleTimer::SetElapsedTime(float InElapsedTime, float InLimitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleTimer", "SetElapsedTime");

	Params::RCNzUiBattleTimer_SetElapsedTime Parms{};

	Parms.InElapsedTime = InElapsedTime;
	Parms.InLimitTime = InLimitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleTimer.SetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLimitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleTimer::SetTime(float InTime, float InLimitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleTimer", "SetTime");

	Params::RCNzUiBattleTimer_SetTime Parms{};

	Parms.InTime = InTime;
	Parms.InLimitTime = InLimitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCKakiwariRender.SetKakiwariMotionIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMotionIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCKakiwariRender::SetKakiwariMotionIndex(const int32 InMotionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCKakiwariRender", "SetKakiwariMotionIndex");

	Params::RCKakiwariRender_SetKakiwariMotionIndex Parms{};

	Parms.InMotionIndex = InMotionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCKakiwariRender.GetKakiwariMotionIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float ARCKakiwariRender::GetKakiwariMotionIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCKakiwariRender", "GetKakiwariMotionIndex");

	Params::RCKakiwariRender_GetKakiwariMotionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.AddDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   AddDamage_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutResultHP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::AddDamage(int32 AddDamage_0, int32* OutResultHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "AddDamage");

	Params::RCNzUiFinaleWidget_AddDamage Parms{};

	Parms.AddDamage_0 = AddDamage_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResultHP != nullptr)
		*OutResultHP = Parms.OutResultHP;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.AddPieceList
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       pieceInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::AddPieceList(const struct FRCNzFinalePieceObjectInfo& pieceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "AddPieceList");

	Params::RCNzUiFinaleWidget_AddPieceList Parms{};

	Parms.pieceInfo = std::move(pieceInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleWidget.AlertStart
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleWidget::AlertStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "AlertStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.ChangeSelectPieceEvent
// (Final, Native, Public)
// Parameters:
// class FString                           PieceTitle                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       PieceDetail                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   isLock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isUsed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isUnlock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::ChangeSelectPieceEvent(const class FString& PieceTitle, class UTexture2D* PieceDetail, int32 isLock, bool isUsed, bool isUnlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "ChangeSelectPieceEvent");

	Params::RCNzUiFinaleWidget_ChangeSelectPieceEvent Parms{};

	Parms.PieceTitle = std::move(PieceTitle);
	Parms.PieceDetail = PieceDetail;
	Parms.isLock = isLock;
	Parms.isUsed = isUsed;
	Parms.isUnlock = isUnlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.ClosePieceList
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::ClosePieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "ClosePieceList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.CreateIndex
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleWidget::CreateIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "CreateIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.DirectingFinishedEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::DirectingFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "DirectingFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.FinishedFinishAnimation
// (Final, Native, Public)

void URCNzUiFinaleWidget::FinishedFinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "FinishedFinishAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.FinishedQuestionFinishAnimation
// (Final, Native, Public)
// Parameters:
// bool                                    isSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::FinishedQuestionFinishAnimation(bool isSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "FinishedQuestionFinishAnimation");

	Params::RCNzUiFinaleWidget_FinishedQuestionFinishAnimation Parms{};

	Parms.isSuccess = isSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.FinishedStartAnimation
// (Final, Native, Public)

void URCNzUiFinaleWidget::FinishedStartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "FinishedStartAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.FinishedTimerBurnLightingAAnimation
// (Final, Native, Public)

void URCNzUiFinaleWidget::FinishedTimerBurnLightingAAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "FinishedTimerBurnLightingAAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.GetCurrentSelectedPieceIdx
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinaleWidget::GetCurrentSelectedPieceIdx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetCurrentSelectedPieceIdx");

	Params::RCNzUiFinaleWidget_GetCurrentSelectedPieceIdx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetCurrentSelectPiece
// (Final, Native, Public)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCNzFinalePieceObjectInfo URCNzUiFinaleWidget::GetCurrentSelectPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetCurrentSelectPiece");

	Params::RCNzUiFinaleWidget_GetCurrentSelectPiece Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetIndexListParentWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCNzUiFinaleIndexListParentWidget*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCNzUiFinaleIndexListParentWidget* URCNzUiFinaleWidget::GetIndexListParentWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetIndexListParentWidget");

	Params::RCNzUiFinaleWidget_GetIndexListParentWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetIndexListWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCNzUiFinaleIndexListWidget*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCNzUiFinaleIndexListWidget* URCNzUiFinaleWidget::GetIndexListWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetIndexListWidget");

	Params::RCNzUiFinaleWidget_GetIndexListWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetIsHoverdPieceList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::GetIsHoverdPieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetIsHoverdPieceList");

	Params::RCNzUiFinaleWidget_GetIsHoverdPieceList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetOneLinePieceItemNum
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinaleWidget::GetOneLinePieceItemNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetOneLinePieceItemNum");

	Params::RCNzUiFinaleWidget_GetOneLinePieceItemNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetPGLayoutLocationAndSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::GetPGLayoutLocationAndSize(struct FVector2D* Location, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetPGLayoutLocationAndSize");

	Params::RCNzUiFinaleWidget_GetPGLayoutLocationAndSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function RC.RCNzUiFinaleWidget.GetPGLayoutWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCNzUiFinalePGLayoutWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCNzUiFinalePGLayoutWidget* URCNzUiFinaleWidget::GetPGLayoutWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetPGLayoutWidget");

	Params::RCNzUiFinaleWidget_GetPGLayoutWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetPieceListItemLArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class URCNzUiFinalePieceList_PieceBase*>ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class URCNzUiFinalePieceList_PieceBase*> URCNzUiFinaleWidget::GetPieceListItemLArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetPieceListItemLArray");

	Params::RCNzUiFinaleWidget_GetPieceListItemLArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetPieceListLAngle
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCNzUiFinaleWidget::GetPieceListLAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetPieceListLAngle");

	Params::RCNzUiFinaleWidget_GetPieceListLAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetPieceListLScale
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinaleWidget::GetPieceListLScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetPieceListLScale");

	Params::RCNzUiFinaleWidget_GetPieceListLScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetPieceLListParentSize
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinaleWidget::GetPieceLListParentSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetPieceLListParentSize");

	Params::RCNzUiFinaleWidget_GetPieceLListParentSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.GetPieceSListParentLocAndSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Loc                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::GetPieceSListParentLocAndSize(struct FVector2D* Loc, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetPieceSListParentLocAndSize");

	Params::RCNzUiFinaleWidget_GetPieceSListParentLocAndSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Loc != nullptr)
		*Loc = std::move(Parms.Loc);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function RC.RCNzUiFinaleWidget.GetPieceSLocationAndSize
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Loc                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::GetPieceSLocationAndSize(int32 idx, struct FVector2D* Loc, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetPieceSLocationAndSize");

	Params::RCNzUiFinaleWidget_GetPieceSLocationAndSize Parms{};

	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Loc != nullptr)
		*Loc = std::move(Parms.Loc);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function RC.RCNzUiFinaleWidget.GetQuestionWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCNzUiFinaleQuestionWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCNzUiFinaleQuestionWidget* URCNzUiFinaleWidget::GetQuestionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "GetQuestionWidget");

	Params::RCNzUiFinaleWidget_GetQuestionWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.HeadingClearEvent
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::HeadingClearEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "HeadingClearEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.HeadingClearFinishedEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::HeadingClearFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "HeadingClearFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.IndexClearEvent
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::IndexClearEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "IndexClearEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.IndexClearFinishedEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::IndexClearFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "IndexClearFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.IndexClearPlaySEEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::IndexClearPlaySEEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "IndexClearPlaySEEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.InitializeFinaleUI
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::InitializeFinaleUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "InitializeFinaleUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.InitializeHPBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   HpMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::InitializeHPBar(float HpMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "InitializeHPBar");

	Params::RCNzUiFinaleWidget_InitializeHPBar Parms{};

	Parms.HpMax = HpMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.InitializeIndexList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           chNumStr                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::InitializeIndexList(const class FString& chNumStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "InitializeIndexList");

	Params::RCNzUiFinaleWidget_InitializeIndexList Parms{};

	Parms.chNumStr = std::move(chNumStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.InitializePieceList
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FRCNzFinalePieceObjectInfo>pieceList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::InitializePieceList(const TArray<struct FRCNzFinalePieceObjectInfo>& pieceList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "InitializePieceList");

	Params::RCNzUiFinaleWidget_InitializePieceList Parms{};

	Parms.pieceList = std::move(pieceList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleWidget.InputDecideDetectiveMode
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::InputDecideDetectiveMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "InputDecideDetectiveMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.IsDebugDrawFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::IsDebugDrawFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "IsDebugDrawFlag");

	Params::RCNzUiFinaleWidget_IsDebugDrawFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.IsDetailPieceListMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::IsDetailPieceListMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "IsDetailPieceListMode");

	Params::RCNzUiFinaleWidget_IsDetailPieceListMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.IsShowKomaDescriptionTextUI
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::IsShowKomaDescriptionTextUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "IsShowKomaDescriptionTextUI");

	Params::RCNzUiFinaleWidget_IsShowKomaDescriptionTextUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.IsShowQuestionTextUI
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::IsShowQuestionTextUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "IsShowQuestionTextUI");

	Params::RCNzUiFinaleWidget_IsShowQuestionTextUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.IsVisiblePieceList
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::IsVisiblePieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "IsVisiblePieceList");

	Params::RCNzUiFinaleWidget_IsVisiblePieceList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.MoveDetectiveConstruct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<bool>                            isCheckList                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::MoveDetectiveConstruct(const TArray<bool>& isCheckList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "MoveDetectiveConstruct");

	Params::RCNzUiFinaleWidget_MoveDetectiveConstruct Parms{};

	Parms.isCheckList = std::move(isCheckList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.MoveDetectiveScene
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::MoveDetectiveScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "MoveDetectiveScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.MoveHeading
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::MoveHeading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "MoveHeading");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.MoveIndexScene
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::MoveIndexScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "MoveIndexScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.OpenPieceList
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::OpenPieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "OpenPieceList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.OpenPieceSelectWindow
// (Final, Native, Public)

void URCNzUiFinaleWidget::OpenPieceSelectWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "OpenPieceSelectWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceCorrectEvent
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::PieceCorrectEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceCorrectEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceCorrectFinishedEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::PieceCorrectFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceCorrectFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceDetailFinishApplyBlock_DoneEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::PieceDetailFinishApplyBlock_DoneEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceDetailFinishApplyBlock_DoneEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceDetailFinishApplyBlock_LockEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::PieceDetailFinishApplyBlock_LockEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceDetailFinishApplyBlock_LockEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceDetailFinishApplyFinishEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::PieceDetailFinishApplyFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceDetailFinishApplyFinishEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceDetailFinishApplyStartEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::PieceDetailFinishApplyStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceDetailFinishApplyStartEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceDetailFinishUnLockEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::PieceDetailFinishUnLockEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceDetailFinishUnLockEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceGetEvent
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::PieceGetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceGetEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceIncorrectFinishedEvent
// (Final, Native, Public)

void URCNzUiFinaleWidget::PieceIncorrectFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceIncorrectFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PieceMoveLeft
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::PieceMoveLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceMoveLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.PieceMoveRight
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::PieceMoveRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PieceMoveRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.PlayApplyBlock_Done
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::PlayApplyBlock_Done()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayApplyBlock_Done");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PlayApplyBlock_Lock
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::PlayApplyBlock_Lock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayApplyBlock_Lock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PlayClearAnimTimeLimit
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::PlayClearAnimTimeLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayClearAnimTimeLimit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.PlayDoneAnimPieceDetail
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::PlayDoneAnimPieceDetail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayDoneAnimPieceDetail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PlayFinishAnimation
// (Final, Native, Public)

void URCNzUiFinaleWidget::PlayFinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayFinishAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PlayGameOverAnimTimeLimit
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::PlayGameOverAnimTimeLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayGameOverAnimTimeLimit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.PlayIncorrectAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::PlayIncorrectAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayIncorrectAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PlayPageTurnIndexLAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::PlayPageTurnIndexLAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayPageTurnIndexLAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.PlayPageTurnIndexRAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::PlayPageTurnIndexRAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayPageTurnIndexRAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.PlayStartAnimation
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::PlayStartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayStartAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.PlayStartGameAnimTimeLimit
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::PlayStartGameAnimTimeLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayStartGameAnimTimeLimit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.PlayStartLogoAnim
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleWidget::PlayStartLogoAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "PlayStartLogoAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.SetDelayUnLockAnimTime
// (Final, Native, Public)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetDelayUnLockAnimTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetDelayUnLockAnimTime");

	Params::RCNzUiFinaleWidget_SetDelayUnLockAnimTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.SetIsHoverdPieceList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetIsHoverdPieceList(bool Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetIsHoverdPieceList");

	Params::RCNzUiFinaleWidget_SetIsHoverdPieceList Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.SetPageMoveDirIconVisiblity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPageMoveVisibleDirection               Visiblity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetPageMoveDirIconVisiblity(EPageMoveVisibleDirection Visiblity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetPageMoveDirIconVisiblity");

	Params::RCNzUiFinaleWidget_SetPageMoveDirIconVisiblity Parms{};

	Parms.Visiblity = Visiblity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.SetQuestionRestNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetQuestionRestNum(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetQuestionRestNum");

	Params::RCNzUiFinaleWidget_SetQuestionRestNum Parms{};

	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.SetSectionText
// (Final, Native, Public)
// Parameters:
// class FString                           sectionText1                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           sectionText2                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetSectionText(const class FString& sectionText1, const class FString& sectionText2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetSectionText");

	Params::RCNzUiFinaleWidget_SetSectionText Parms{};

	Parms.sectionText1 = std::move(sectionText1);
	Parms.sectionText2 = std::move(sectionText2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.SetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetTime");

	Params::RCNzUiFinaleWidget_SetTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.SetTimeLimitAlertTimingScale
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetTimeLimitAlertTimingScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetTimeLimitAlertTimingScale");

	Params::RCNzUiFinaleWidget_SetTimeLimitAlertTimingScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleWidget.SetTimeScale
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetTimeScale(float TimeScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetTimeScale");

	Params::RCNzUiFinaleWidget_SetTimeScale Parms{};

	Parms.TimeScale = TimeScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleWidget.SetVisibleDetailPieeList
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::SetVisibleDetailPieeList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetVisibleDetailPieeList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.SetVisibleHPBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetVisibleHPBar(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetVisibleHPBar");

	Params::RCNzUiFinaleWidget_SetVisibleHPBar Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.SetVisibleIndexBtnGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetVisibleIndexBtnGuide(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetVisibleIndexBtnGuide");

	Params::RCNzUiFinaleWidget_SetVisibleIndexBtnGuide Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.SetVisiblePieceList
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetVisiblePieceList(bool isShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetVisiblePieceList");

	Params::RCNzUiFinaleWidget_SetVisiblePieceList Parms{};

	Parms.isShow = isShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleWidget.SetVisiblityDetectiveTitleUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::SetVisiblityDetectiveTitleUI(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "SetVisiblityDetectiveTitleUI");

	Params::RCNzUiFinaleWidget_SetVisiblityDetectiveTitleUI Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.ShowQuestionFinishAnimation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::ShowQuestionFinishAnimation(const struct FVector2D& Position, bool isSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "ShowQuestionFinishAnimation");

	Params::RCNzUiFinaleWidget_ShowQuestionFinishAnimation Parms{};

	Parms.Position = std::move(Position);
	Parms.isSuccess = isSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.StartCorrect
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::StartCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "StartCorrect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.StartInCorrect
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleWidget::StartInCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "StartInCorrect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.UpdateCursorBtnGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::UpdateCursorBtnGuide(ERCInputKeyType Key, bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdateCursorBtnGuide");

	Params::RCNzUiFinaleWidget_UpdateCursorBtnGuide Parms{};

	Parms.Key = Key;
	Parms.IsVisible_0 = IsVisible_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.UpdateDetectiveTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Section                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::UpdateDetectiveTitle(const int32& Section, const class FString& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdateDetectiveTitle");

	Params::RCNzUiFinaleWidget_UpdateDetectiveTitle Parms{};

	Parms.Section = Section;
	Parms.Title = std::move(Title);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.UpdateHPBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Hp                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::UpdateHPBar(float Hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdateHPBar");

	Params::RCNzUiFinaleWidget_UpdateHPBar Parms{};

	Parms.Hp = Hp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleWidget.UpdateIndexBtnGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::UpdateIndexBtnGuide(ERCInputKeyType InKeyType, const class FString& str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdateIndexBtnGuide");

	Params::RCNzUiFinaleWidget_UpdateIndexBtnGuide Parms{};

	Parms.InKeyType = InKeyType;
	Parms.str = std::move(str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.UpdateLowSpeedBtnGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         kye                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::UpdateLowSpeedBtnGuide(ERCInputKeyType kye, const class FString& str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdateLowSpeedBtnGuide");

	Params::RCNzUiFinaleWidget_UpdateLowSpeedBtnGuide Parms{};

	Parms.kye = kye;
	Parms.str = std::move(str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.UpdatePageGuideBtnGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         keyL                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCInputKeyType                         keyR                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::UpdatePageGuideBtnGuide(ERCInputKeyType keyL, ERCInputKeyType keyR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdatePageGuideBtnGuide");

	Params::RCNzUiFinaleWidget_UpdatePageGuideBtnGuide Parms{};

	Parms.keyL = keyL;
	Parms.keyR = keyR;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.UpdatePieceList
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FRCNzFinalePieceObjectInfo>pieceList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FRCNzFinalePieceObjectInfo>releasePieceList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::UpdatePieceList(const TArray<struct FRCNzFinalePieceObjectInfo>& pieceList, const TArray<struct FRCNzFinalePieceObjectInfo>& releasePieceList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdatePieceList");

	Params::RCNzUiFinaleWidget_UpdatePieceList Parms{};

	Parms.pieceList = std::move(pieceList);
	Parms.releasePieceList = std::move(releasePieceList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleWidget.UpdatePieceListBtnGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleWidget::UpdatePieceListBtnGuide(ERCInputKeyType Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdatePieceListBtnGuide");

	Params::RCNzUiFinaleWidget_UpdatePieceListBtnGuide Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleWidget.UpdatePieceListUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleWidget::UpdatePieceListUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdatePieceListUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleWidget.UpdateQuestion
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           QuestionText                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isLeft                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFinaleInteractPointType                Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isZoom                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::UpdateQuestion(bool IsVisible_0, const class FString& QuestionText, const struct FVector2D& Position, const bool isLeft, const EFinaleInteractPointType Type, const bool isZoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdateQuestion");

	Params::RCNzUiFinaleWidget_UpdateQuestion Parms{};

	Parms.IsVisible_0 = IsVisible_0;
	Parms.QuestionText = std::move(QuestionText);
	Parms.Position = std::move(Position);
	Parms.isLeft = isLeft;
	Parms.Type = Type;
	Parms.isZoom = isZoom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleWidget.UpdateSelectedPieceIdx
// (Final, Native, Public)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleWidget::UpdateSelectedPieceIdx(int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleWidget", "UpdateSelectedPieceIdx");

	Params::RCNzUiFinaleWidget_UpdateSelectedPieceIdx Parms{};

	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOption.OnArrowButtonDownEvent
// (Final, Native, Public)

void URCUiOption::OnArrowButtonDownEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOption", "OnArrowButtonDownEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOption.TabOnMouseOver
// (Final, Native, Public)
// Parameters:
// class URCUiOptionTab*                   Tab                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOption::TabOnMouseOver(class URCUiOptionTab* Tab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOption", "TabOnMouseOver");

	Params::RCUiOption_TabOnMouseOver Parms{};

	Parms.Tab = Tab;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAnimNotify_PlayNiagaraEffectEX.GetSpawnedEffect
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UNiagaraComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraComponent* URCAnimNotify_PlayNiagaraEffectEX::GetSpawnedEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAnimNotify_PlayNiagaraEffectEX", "GetSpawnedEffect");

	Params::RCAnimNotify_PlayNiagaraEffectEX_GetSpawnedEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.DebugShowIndexSection
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        UL                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ur                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        dl                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        dr                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleIndexListWidget::DebugShowIndexSection(const struct FVector2D& UL, const struct FVector2D& ur, const struct FVector2D& dl, const struct FVector2D& dr, int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "DebugShowIndexSection");

	Params::RCNzUiFinaleIndexListWidget_DebugShowIndexSection Parms{};

	Parms.UL = std::move(UL);
	Parms.ur = std::move(ur);
	Parms.dl = std::move(dl);
	Parms.dr = std::move(dr);
	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetCurentSelectSectionIndex
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinaleIndexListWidget::GetCurentSelectSectionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetCurentSelectSectionIndex");

	Params::RCNzUiFinaleIndexListWidget_GetCurentSelectSectionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetCurrentSectionPieceUIPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCNzUiFinaleIndexListWidget::GetCurrentSectionPieceUIPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetCurrentSectionPieceUIPath");

	Params::RCNzUiFinaleIndexListWidget_GetCurrentSectionPieceUIPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetCurrentSectionText
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   SectionIdx                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           sectionTitle                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleIndexListWidget::GetCurrentSectionText(int32* SectionIdx, class FString* sectionTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetCurrentSectionText");

	Params::RCNzUiFinaleIndexListWidget_GetCurrentSectionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SectionIdx != nullptr)
		*SectionIdx = Parms.SectionIdx;

	if (sectionTitle != nullptr)
		*sectionTitle = std::move(Parms.sectionTitle);
}


// Function RC.RCNzUiFinaleIndexListWidget.GetCurrentSelectSetionID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCNzUiFinaleIndexListWidget::GetCurrentSelectSetionID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetCurrentSelectSetionID");

	Params::RCNzUiFinaleIndexListWidget_GetCurrentSelectSetionID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetIndexList
// (Final, Native, Public)
// Parameters:
// TArray<class URCNzUiFinaleHeadingTextWidget*>ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class URCNzUiFinaleHeadingTextWidget*> URCNzUiFinaleIndexListWidget::GetIndexList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetIndexList");

	Params::RCNzUiFinaleIndexListWidget_GetIndexList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetIndexMargin
// (Final, Native, Public)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMargin                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMargin URCNzUiFinaleIndexListWidget::GetIndexMargin(int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetIndexMargin");

	Params::RCNzUiFinaleIndexListWidget_GetIndexMargin Parms{};

	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetIsIndex02Flag
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleIndexListWidget::GetIsIndex02Flag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetIsIndex02Flag");

	Params::RCNzUiFinaleIndexListWidget_GetIsIndex02Flag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetListParentDesiredSize
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinaleIndexListWidget::GetListParentDesiredSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetListParentDesiredSize");

	Params::RCNzUiFinaleIndexListWidget_GetListParentDesiredSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetListParentMargin
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMargin                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMargin URCNzUiFinaleIndexListWidget::GetListParentMargin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetListParentMargin");

	Params::RCNzUiFinaleIndexListWidget_GetListParentMargin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.GetTargetIndexSectionID
// (Final, Native, Public)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCNzUiFinaleIndexListWidget::GetTargetIndexSectionID(int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "GetTargetIndexSectionID");

	Params::RCNzUiFinaleIndexListWidget_GetTargetIndexSectionID Parms{};

	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.InitializeFinaleIndexListWidget
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleIndexListWidget::InitializeFinaleIndexListWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "InitializeFinaleIndexListWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListWidget.IsCompleteInitialize
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleIndexListWidget::IsCompleteInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "IsCompleteInitialize");

	Params::RCNzUiFinaleIndexListWidget_IsCompleteInitialize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.IsCurrentSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleIndexListWidget::IsCurrentSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "IsCurrentSection");

	Params::RCNzUiFinaleIndexListWidget_IsCurrentSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.IsExistNextSection
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleIndexListWidget::IsExistNextSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "IsExistNextSection");

	Params::RCNzUiFinaleIndexListWidget_IsExistNextSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.IsExistPrevSection
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleIndexListWidget::IsExistPrevSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "IsExistPrevSection");

	Params::RCNzUiFinaleIndexListWidget_IsExistPrevSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.IsExistTargetSectionTextIDIndex
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                             TargetID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   lastIdx                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleIndexListWidget::IsExistTargetSectionTextIDIndex(class FName TargetID, int32* lastIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "IsExistTargetSectionTextIDIndex");

	Params::RCNzUiFinaleIndexListWidget_IsExistTargetSectionTextIDIndex Parms{};

	Parms.TargetID = TargetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (lastIdx != nullptr)
		*lastIdx = Parms.lastIdx;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.IsExsitTargteIdxSection
// (Final, Native, Public)
// Parameters:
// int32                                   targetIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleIndexListWidget::IsExsitTargteIdxSection(int32 targetIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "IsExsitTargteIdxSection");

	Params::RCNzUiFinaleIndexListWidget_IsExsitTargteIdxSection Parms{};

	Parms.targetIdx = targetIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListWidget.MoveNextSection
// (Final, Native, Public)

void URCNzUiFinaleIndexListWidget::MoveNextSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "MoveNextSection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListWidget.MovePrevSection
// (Final, Native, Public)

void URCNzUiFinaleIndexListWidget::MovePrevSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "MovePrevSection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListWidget.ResetSelectIndexWidget
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleIndexListWidget::ResetSelectIndexWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "ResetSelectIndexWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListWidget.SetVisibleSectionList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleIndexListWidget::SetVisibleSectionList(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "SetVisibleSectionList");

	Params::RCNzUiFinaleIndexListWidget_SetVisibleSectionList Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListWidget.UpdateIndexList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCParamNzFinaleSectionTableRow  Section                                                (Parm, NativeAccessSpecifierPublic)
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCNzFinaleManagerBase*           FinaleManager_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleIndexListWidget::UpdateIndexList(const struct FRCParamNzFinaleSectionTableRow& Section, int32 idx, class ARCNzFinaleManagerBase* FinaleManager_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "UpdateIndexList");

	Params::RCNzUiFinaleIndexListWidget_UpdateIndexList Parms{};

	Parms.Section = std::move(Section);
	Parms.idx = idx;
	Parms.FinaleManager_0 = FinaleManager_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListWidget.UpdateSectionDetectivePointState
// (Final, Native, Public)
// Parameters:
// class ARCNzFinaleManagerBase*           FinaleManager_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleIndexListWidget::UpdateSectionDetectivePointState(class ARCNzFinaleManagerBase* FinaleManager_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "UpdateSectionDetectivePointState");

	Params::RCNzUiFinaleIndexListWidget_UpdateSectionDetectivePointState Parms{};

	Parms.FinaleManager_0 = FinaleManager_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListWidget.UpdateSelectIndexWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   targetIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleIndexListWidget::UpdateSelectIndexWidget(int32 targetIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListWidget", "UpdateSelectIndexWidget");

	Params::RCNzUiFinaleIndexListWidget_UpdateSelectIndexWidget Parms{};

	Parms.targetIdx = targetIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLoopLevelScriptActor.IsInitialized
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLoopLevelScriptActor::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLoopLevelScriptActor", "IsInitialized");

	Params::RCNazoLoopLevelScriptActor_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoMoveLoopLevelScriptActor.ChangeBackCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::ChangeBackCamera(float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "ChangeBackCamera");

	Params::RCNazoMoveLoopLevelScriptActor_ChangeBackCamera Parms{};

	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActor.ChangeCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCineCameraActor*               Camera                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::ChangeCamera(class ARCCineCameraActor* Camera, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "ChangeCamera");

	Params::RCNazoMoveLoopLevelScriptActor_ChangeCamera Parms{};

	Parms.Camera = Camera;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActor.ChangeCameraBase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           CameraBase                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCCineCameraActor*               Camera                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::ChangeCameraBase(class AActor* CameraBase, class ARCCineCameraActor* Camera, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "ChangeCameraBase");

	Params::RCNazoMoveLoopLevelScriptActor_ChangeCameraBase Parms{};

	Parms.CameraBase = CameraBase;
	Parms.Camera = Camera;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActor.ChangeCameraBaseFromTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CameraBaseTag                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CameraTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::ChangeCameraBaseFromTag(class FName CameraBaseTag, class FName CameraTag, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "ChangeCameraBaseFromTag");

	Params::RCNazoMoveLoopLevelScriptActor_ChangeCameraBaseFromTag Parms{};

	Parms.CameraBaseTag = CameraBaseTag;
	Parms.CameraTag = CameraTag;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActor.ChangeCameraFromTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CameraTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::ChangeCameraFromTag(class FName CameraTag, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "ChangeCameraFromTag");

	Params::RCNazoMoveLoopLevelScriptActor_ChangeCameraFromTag Parms{};

	Parms.CameraTag = CameraTag;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActor.ChangePlayerSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::ChangePlayerSpeed(float Speed, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "ChangePlayerSpeed");

	Params::RCNazoMoveLoopLevelScriptActor_ChangePlayerSpeed Parms{};

	Parms.Speed = Speed;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActor.ChangeStateEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ERCNazoMoveLoopLSAState                 MoveLoopState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::ChangeStateEvent(ERCNazoMoveLoopLSAState MoveLoopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "ChangeStateEvent");

	Params::RCNazoMoveLoopLevelScriptActor_ChangeStateEvent Parms{};

	Parms.MoveLoopState = MoveLoopState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoMoveLoopLevelScriptActor.ChangeTalkStateEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ERCNazoMoveLoopLSATalkState             TalkState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::ChangeTalkStateEvent(ERCNazoMoveLoopLSATalkState TalkState, class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "ChangeTalkStateEvent");

	Params::RCNazoMoveLoopLevelScriptActor_ChangeTalkStateEvent Parms{};

	Parms.TalkState = TalkState;
	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoMoveLoopLevelScriptActor.FinishMoveLoop
// (Final, Native, Public, BlueprintCallable)

void ARCNazoMoveLoopLevelScriptActor::FinishMoveLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "FinishMoveLoop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActor.TalkFinishedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::TalkFinishedEvent(class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "TalkFinishedEvent");

	Params::RCNazoMoveLoopLevelScriptActor_TalkFinishedEvent Parms{};

	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoMoveLoopLevelScriptActor.TalkStartedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::TalkStartedEvent(class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "TalkStartedEvent");

	Params::RCNazoMoveLoopLevelScriptActor_TalkStartedEvent Parms{};

	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoMoveLoopLevelScriptActor.TalkStartTextEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TextIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoMoveLoopLevelScriptActor::TalkStartTextEvent(int32 TextIndex, class FName TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopLevelScriptActor", "TalkStartTextEvent");

	Params::RCNazoMoveLoopLevelScriptActor_TalkStartTextEvent Parms{};

	Parms.TextIndex = TextIndex;
	Parms.TextID = TextID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCSplineActorBFL.GetSplineActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCSplineActor*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCSplineActor* URCSplineActorBFL::GetSplineActor(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSplineActorBFL", "GetSplineActor");

	Params::RCSplineActorBFL_GetSplineActor Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAsset.ExecAssetLoadFinishChecker
// (Final, Native, Public)

void URCAsset::ExecAssetLoadFinishChecker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCAsset", "ExecAssetLoadFinishChecker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetAnswerID
// (Final, Native, Public)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCNzUiFinaleInteractIconWidget::GetAnswerID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetAnswerID");

	Params::RCNzUiFinaleInteractIconWidget_GetAnswerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetBackgroundImagePath
// (Final, Native, Public)
// Parameters:
// class ARCNzFinaleManagerBase*           FinaleManager                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCNzUiFinaleInteractIconWidget::GetBackgroundImagePath(class ARCNzFinaleManagerBase* FinaleManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetBackgroundImagePath");

	Params::RCNzUiFinaleInteractIconWidget_GetBackgroundImagePath Parms{};

	Parms.FinaleManager = FinaleManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetColScale
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCNzUiFinaleInteractIconWidget::GetColScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetColScale");

	Params::RCNzUiFinaleInteractIconWidget_GetColScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetInteractIconPosition
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    isLeft                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinaleInteractIconWidget::GetInteractIconPosition(bool* isLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetInteractIconPosition");

	Params::RCNzUiFinaleInteractIconWidget_GetInteractIconPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (isLeft != nullptr)
		*isLeft = Parms.isLeft;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetisCorrectFlag
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleInteractIconWidget::GetisCorrectFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetisCorrectFlag");

	Params::RCNzUiFinaleInteractIconWidget_GetisCorrectFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetIsFinishStartAnim
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleInteractIconWidget::GetIsFinishStartAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetIsFinishStartAnim");

	Params::RCNzUiFinaleInteractIconWidget_GetIsFinishStartAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetIsPlayInOutAnimationFlag
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleInteractIconWidget::GetIsPlayInOutAnimationFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetIsPlayInOutAnimationFlag");

	Params::RCNzUiFinaleInteractIconWidget_GetIsPlayInOutAnimationFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetIsUseFixedPosition
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleInteractIconWidget::GetIsUseFixedPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetIsUseFixedPosition");

	Params::RCNzUiFinaleInteractIconWidget_GetIsUseFixedPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetPieceData
// (Final, Native, Public)
// Parameters:
// struct FRCNzFinaleGamePieceData         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCNzFinaleGamePieceData URCNzUiFinaleInteractIconWidget::GetPieceData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetPieceData");

	Params::RCNzUiFinaleInteractIconWidget_GetPieceData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetPieceData_IsPick
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleInteractIconWidget::GetPieceData_IsPick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetPieceData_IsPick");

	Params::RCNzUiFinaleInteractIconWidget_GetPieceData_IsPick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetPieceDetailText
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCNzUiFinaleInteractIconWidget::GetPieceDetailText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetPieceDetailText");

	Params::RCNzUiFinaleInteractIconWidget_GetPieceDetailText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetPieceID
// (Final, Native, Public)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCNzUiFinaleInteractIconWidget::GetPieceID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetPieceID");

	Params::RCNzUiFinaleInteractIconWidget_GetPieceID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetPieceImg
// (Final, Native, Public)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* URCNzUiFinaleInteractIconWidget::GetPieceImg()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetPieceImg");

	Params::RCNzUiFinaleInteractIconWidget_GetPieceImg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetPieceText
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCNzUiFinaleInteractIconWidget::GetPieceText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetPieceText");

	Params::RCNzUiFinaleInteractIconWidget_GetPieceText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.GetQuestionTextFixedPosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinaleInteractIconWidget::GetQuestionTextFixedPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "GetQuestionTextFixedPosition");

	Params::RCNzUiFinaleInteractIconWidget_GetQuestionTextFixedPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleInteractIconWidget.InitializeInteractIconWidget
// (Final, Native, Public)
// Parameters:
// struct FRCNzFinaleGamePieceData         Data                                                   (Parm, NativeAccessSpecifierPublic)

void URCNzUiFinaleInteractIconWidget::InitializeInteractIconWidget(const struct FRCNzFinaleGamePieceData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "InitializeInteractIconWidget");

	Params::RCNzUiFinaleInteractIconWidget_InitializeInteractIconWidget Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlayCorrectAnim
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::PlayCorrectAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlayCorrectAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlayFailedAnim
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::PlayFailedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlayFailedAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlayFinishAnim
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::PlayFinishAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlayFinishAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlayFinishQuestionAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleInteractIconWidget::PlayFinishQuestionAnim(bool isSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlayFinishQuestionAnim");

	Params::RCNzUiFinaleInteractIconWidget_PlayFinishQuestionAnim Parms{};

	Parms.isSuccess = isSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlayHideAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::PlayHideAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlayHideAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlayQuestionAnim
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::PlayQuestionAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlayQuestionAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlayStartAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::PlayStartAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlayStartAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlaySuccessAnim
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::PlaySuccessAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlaySuccessAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.PlayWaitAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::PlayWaitAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "PlayWaitAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.SetCorrectedState
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleInteractIconWidget::SetCorrectedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "SetCorrectedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleInteractIconWidget.SetIsCorrectFlag
// (Final, Native, Public)
// Parameters:
// bool                                    Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleInteractIconWidget::SetIsCorrectFlag(bool Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "SetIsCorrectFlag");

	Params::RCNzUiFinaleInteractIconWidget_SetIsCorrectFlag Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconWidget.SetPieceData_IsPick
// (Final, Native, Public)
// Parameters:
// bool                                    isPick                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleInteractIconWidget::SetPieceData_IsPick(bool isPick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "SetPieceData_IsPick");

	Params::RCNzUiFinaleInteractIconWidget_SetPieceData_IsPick Parms{};

	Parms.isPick = isPick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconWidget.UpdateBackgroundImage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       tex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleInteractIconWidget::UpdateBackgroundImage(class UTexture2D* tex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconWidget", "UpdateBackgroundImage");

	Params::RCNzUiFinaleInteractIconWidget_UpdateBackgroundImage Parms{};

	Parms.tex = tex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.CalcVolume
// (Final, Native, Public)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCSoundManager::CalcVolume(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "CalcVolume");

	Params::RCSoundManager_CalcVolume Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.CheckSheetLoad
// (Final, Native, Private)

void ARCSoundManager::CheckSheetLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "CheckSheetLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.CrossFade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeInTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::CrossFade(ERCSoundType SoundType, const class FString& SoundId, float fadeInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "CrossFade");

	Params::RCSoundManager_CrossFade Parms{};

	Parms.SoundType = SoundType;
	Parms.SoundId = std::move(SoundId);
	Parms.fadeInTime = fadeInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.FadeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeInTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   finishVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isBaseOriginalVolume                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::FadeIn(ERCSoundType SoundType, const class FString& SoundId, float fadeInTime, float StartTime, float finishVolume, bool isBaseOriginalVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "FadeIn");

	Params::RCSoundManager_FadeIn Parms{};

	Parms.SoundType = SoundType;
	Parms.SoundId = std::move(SoundId);
	Parms.fadeInTime = fadeInTime;
	Parms.StartTime = StartTime;
	Parms.finishVolume = finishVolume;
	Parms.isBaseOriginalVolume = isBaseOriginalVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.FadeInAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeInTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   finishVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::FadeInAll(ERCSoundType SoundType, float fadeInTime, float StartTime, float finishVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "FadeInAll");

	Params::RCSoundManager_FadeInAll Parms{};

	Parms.SoundType = SoundType;
	Parms.fadeInTime = fadeInTime;
	Parms.StartTime = StartTime;
	Parms.finishVolume = finishVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.FadeOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   finishVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::FadeOut(ERCSoundType SoundType, const class FString& SoundId, float fadeOutTime, float finishVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "FadeOut");

	Params::RCSoundManager_FadeOut Parms{};

	Parms.SoundType = SoundType;
	Parms.SoundId = std::move(SoundId);
	Parms.fadeOutTime = fadeOutTime;
	Parms.finishVolume = finishVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.FadeOutAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   finishVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::FadeOutAll(ERCSoundType SoundType, float fadeOutTime, float finishVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "FadeOutAll");

	Params::RCSoundManager_FadeOutAll Parms{};

	Parms.SoundType = SoundType;
	Parms.fadeOutTime = fadeOutTime;
	Parms.finishVolume = finishVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.GetBgmSoundDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FSoundData>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FSoundData> ARCSoundManager::GetBgmSoundDataArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetBgmSoundDataArray");

	Params::RCSoundManager_GetBgmSoundDataArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetCueSheetParamPathArray
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> ARCSoundManager::GetCueSheetParamPathArray(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetCueSheetParamPathArray");

	Params::RCSoundManager_GetCueSheetParamPathArray Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetEnviromentSoundDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FSoundData>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FSoundData> ARCSoundManager::GetEnviromentSoundDataArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetEnviromentSoundDataArray");

	Params::RCSoundManager_GetEnviromentSoundDataArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetLipSyncParamDataAdjust
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             voiceCharaID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCParamLipSyncDataAdjustTableRowReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCParamLipSyncDataAdjustTableRow ARCSoundManager::GetLipSyncParamDataAdjust(class FName voiceCharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetLipSyncParamDataAdjust");

	Params::RCSoundManager_GetLipSyncParamDataAdjust Parms{};

	Parms.voiceCharaID = voiceCharaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetLipSyncVol
// (Final, Native, Private)
// Parameters:
// float                                   voiceVol                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCSoundManager::GetLipSyncVol(float voiceVol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetLipSyncVol");

	Params::RCSoundManager_GetLipSyncVol Parms{};

	Parms.voiceVol = voiceVol;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetNonResidentCueSheetParam
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FString                           SheetID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCParamSoundNonResidentListTableRowReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCParamSoundNonResidentListTableRow ARCSoundManager::GetNonResidentCueSheetParam(const class FString& SheetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetNonResidentCueSheetParam");

	Params::RCSoundManager_GetNonResidentCueSheetParam Parms{};

	Parms.SheetID = std::move(SheetID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetPlayingBGMID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCSoundManager::GetPlayingBGMID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetPlayingBGMID");

	Params::RCSoundManager_GetPlayingBGMID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetSeSoundDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FSoundData>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FSoundData> ARCSoundManager::GetSeSoundDataArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetSeSoundDataArray");

	Params::RCSoundManager_GetSeSoundDataArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetSoundAtomCue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLoadData                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLoadData ARCSoundManager::GetSoundAtomCue(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetSoundAtomCue");

	Params::RCSoundManager_GetSoundAtomCue Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetSoundDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSoundData>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FSoundData> ARCSoundManager::GetSoundDataArray(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetSoundDataArray");

	Params::RCSoundManager_GetSoundDataArray Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetSoundId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCSoundManager::GetSoundId(ERCSoundType SoundType, int32 soundIndex, const class FString& CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetSoundId");

	Params::RCSoundManager_GetSoundId Parms{};

	Parms.SoundType = SoundType;
	Parms.soundIndex = soundIndex;
	Parms.CharaID = std::move(CharaID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetSoundParamData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCParamSoundFormatTableRow      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCParamSoundFormatTableRow ARCSoundManager::GetSoundParamData(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetSoundParamData");

	Params::RCSoundManager_GetSoundParamData Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.GetVoiceSoundDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FSoundData>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FSoundData> ARCSoundManager::GetVoiceSoundDataArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "GetVoiceSoundDataArray");

	Params::RCSoundManager_GetVoiceSoundDataArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.Initialize
// (Final, Native, Public, BlueprintCallable)

void ARCSoundManager::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.isCurrentSoundID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCSoundManager::isCurrentSoundID(ERCSoundType SoundType, const class FString& SoundId, const class FString& CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "isCurrentSoundID");

	Params::RCSoundManager_isCurrentSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.SoundId = std::move(SoundId);
	Parms.CharaID = std::move(CharaID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.IsLoadedNonResidentSheet
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCSoundManager::IsLoadedNonResidentSheet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "IsLoadedNonResidentSheet");

	Params::RCSoundManager_IsLoadedNonResidentSheet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.isSameVolume
// (Final, Native, Private)
// Parameters:
// float                                   lVolume                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   rVolume                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCSoundManager::isSameVolume(float lVolume, float rVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "isSameVolume");

	Params::RCSoundManager_isSameVolume Parms{};

	Parms.lVolume = lVolume;
	Parms.rVolume = rVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManager.LoadNonResidentSheet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SheetID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::LoadNonResidentSheet(const class FString& SheetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "LoadNonResidentSheet");

	Params::RCSoundManager_LoadNonResidentSheet Parms{};

	Parms.SheetID = std::move(SheetID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.LoopSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundAtomCue*                    pSoundCue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::LoopSetting(class USoundAtomCue* pSoundCue, bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "LoopSetting");

	Params::RCSoundManager_LoopSetting Parms{};

	Parms.pSoundCue = pSoundCue;
	Parms.IsLoop = IsLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.Pause
// (Final, Native, Public, BlueprintCallable)

void ARCSoundManager::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "Pause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.PauseForSoundType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllPause                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::PauseForSoundType(ERCSoundType SoundType, bool bAllPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "PauseForSoundType");

	Params::RCSoundManager_PauseForSoundType Parms{};

	Parms.SoundType = SoundType;
	Parms.bAllPause = bAllPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.PauseSingle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::PauseSingle(ERCSoundType SoundType, const class FString& SoundId, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "PauseSingle");

	Params::RCSoundManager_PauseSingle Parms{};

	Parms.SoundType = SoundType;
	Parms.SoundId = std::move(SoundId);
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::Play(ERCSoundType SoundType, bool IsLoop, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "Play");

	Params::RCSoundManager_Play Parms{};

	Parms.SoundType = SoundType;
	Parms.IsLoop = IsLoop;
	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.PlayLipSync
// (Final, Native, Private, BlueprintCallable)

void ARCSoundManager::PlayLipSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "PlayLipSync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.ReloadVoiceSheet
// (Final, Native, Public)

void ARCSoundManager::ReloadVoiceSheet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "ReloadVoiceSheet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.ResetNonResidentSheet
// (Final, Native, Private, BlueprintCallable)

void ARCSoundManager::ResetNonResidentSheet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "ResetNonResidentSheet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.Resume
// (Final, Native, Public, BlueprintCallable)

void ARCSoundManager::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "Resume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.ResumeFieldSound
// (Final, Native, Public, BlueprintCallable)

void ARCSoundManager::ResumeFieldSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "ResumeFieldSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.ResumeForSoundType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::ResumeForSoundType(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "ResumeForSoundType");

	Params::RCSoundManager_ResumeForSoundType Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.ResumeSingle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::ResumeSingle(ERCSoundType SoundType, const class FString& SoundId, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "ResumeSingle");

	Params::RCSoundManager_ResumeSingle Parms{};

	Parms.SoundType = SoundType;
	Parms.SoundId = std::move(SoundId);
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.SetFadeSoundForPositionData
// (Final, Native, Public)
// Parameters:
// struct FSoundPlayerPosFade              Data                                                   (Parm, NativeAccessSpecifierPublic)

void ARCSoundManager::SetFadeSoundForPositionData(const struct FSoundPlayerPosFade& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "SetFadeSoundForPositionData");

	Params::RCSoundManager_SetFadeSoundForPositionData Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.SetLipSyncCharaArray
// (Final, Native, Public)
// Parameters:
// TArray<class ACharacter*>               charaArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCSoundManager::SetLipSyncCharaArray(const TArray<class ACharacter*>& charaArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "SetLipSyncCharaArray");

	Params::RCSoundManager_SetLipSyncCharaArray Parms{};

	Parms.charaArray = std::move(charaArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.SetPlaySound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isFadeIn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSoundType                            OptionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   volumeRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::SetPlaySound(ERCSoundType SoundType, const class FString& SoundId, bool IsLoop, const class FString& CharaID, bool isFadeIn, const class FString& ParamSoundID, ERCSoundType OptionType, float volumeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "SetPlaySound");

	Params::RCSoundManager_SetPlaySound Parms{};

	Parms.SoundType = SoundType;
	Parms.SoundId = std::move(SoundId);
	Parms.IsLoop = IsLoop;
	Parms.CharaID = std::move(CharaID);
	Parms.isFadeIn = isFadeIn;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.OptionType = OptionType;
	Parms.volumeRate = volumeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.StartSheetLoad
// (Final, Native, Private)

void ARCSoundManager::StartSheetLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "StartSheetLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.Stop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::Stop(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "Stop");

	Params::RCSoundManager_Stop Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.UpdateFade
// (Final, Native, Private)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::UpdateFade(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "UpdateFade");

	Params::RCSoundManager_UpdateFade Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.UpdateMasterVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   MasterVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::UpdateMasterVolume(float MasterVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "UpdateMasterVolume");

	Params::RCSoundManager_UpdateMasterVolume Parms{};

	Parms.MasterVolume = MasterVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.UpdateMenuPauseVolume
// (Final, Native, Public, BlueprintCallable)

void ARCSoundManager::UpdateMenuPauseVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "UpdateMenuPauseVolume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.UpdateOptionVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::UpdateOptionVolume(ERCSoundType SoundType, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "UpdateOptionVolume");

	Params::RCSoundManager_UpdateOptionVolume Parms{};

	Parms.SoundType = SoundType;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManager.UpdateSingleSoundVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   volumeRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSoundManager::UpdateSingleSoundVolume(ERCSoundType SoundType, const class FString& SoundId, float volumeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSoundManager", "UpdateSingleSoundVolume");

	Params::RCSoundManager_UpdateSingleSoundVolume Parms{};

	Parms.SoundType = SoundType;
	Parms.SoundId = std::move(SoundId);
	Parms.volumeRate = volumeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTPSCamera.RemoveFakeLocation
// (Final, Native, Public, BlueprintCallable)

void ARCTPSCamera::RemoveFakeLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTPSCamera", "RemoveFakeLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTPSCamera.ResetCamera
// (Native, Public, BlueprintCallable)

void ARCTPSCamera::ResetCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTPSCamera", "ResetCamera");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTPSCamera.SetFakeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCTPSCamera::SetFakeLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTPSCamera", "SetFakeLocation");

	Params::RCTPSCamera_SetFakeLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.GetBoat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCBoatPawn*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCBoatPawn* ARCRealPlayerController::GetBoat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "GetBoat");

	Params::RCRealPlayerController_GetBoat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.GetCharacter
// (Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCharacterRender* ARCRealPlayerController::GetCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "GetCharacter");

	Params::RCRealPlayerController_GetCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.GetLastPlayerStartName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCRealPlayerController::GetLastPlayerStartName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "GetLastPlayerStartName");

	Params::RCRealPlayerController_GetLastPlayerStartName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.GetRainMaker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCRainMaker*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCRainMaker* ARCRealPlayerController::GetRainMaker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "GetRainMaker");

	Params::RCRealPlayerController_GetRainMaker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.GetRealPlayerGameMode
// (Native, Public, BlueprintCallable)
// Parameters:
// ERCRealPlayerGameMode                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCRealPlayerGameMode ARCRealPlayerController::GetRealPlayerGameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "GetRealPlayerGameMode");

	Params::RCRealPlayerController_GetRealPlayerGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.GetResearchVisionTimeMode
// (Native, Public, BlueprintCallable)
// Parameters:
// ERCResearchVisionTimeMode               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCResearchVisionTimeMode ARCRealPlayerController::GetResearchVisionTimeMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "GetResearchVisionTimeMode");

	Params::RCRealPlayerController_GetResearchVisionTimeMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.IsInputFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealPlayerController::IsInputFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "IsInputFlag");

	Params::RCRealPlayerController_IsInputFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.IsPlayerActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealPlayerController::IsPlayerActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "IsPlayerActor");

	Params::RCRealPlayerController_IsPlayerActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.IsPlayerReady
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealPlayerController::IsPlayerReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "IsPlayerReady");

	Params::RCRealPlayerController_IsPlayerReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.IsReserchExitFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealPlayerController::IsReserchExitFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "IsReserchExitFlag");

	Params::RCRealPlayerController_IsReserchExitFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.IsReserchMinimapFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealPlayerController::IsReserchMinimapFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "IsReserchMinimapFlag");

	Params::RCRealPlayerController_IsReserchMinimapFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.IsReserchVisionChangeFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealPlayerController::IsReserchVisionChangeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "IsReserchVisionChangeFlag");

	Params::RCRealPlayerController_IsReserchVisionChangeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.Reset
// (Native, Public, BlueprintCallable)

void ARCRealPlayerController::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.Respawn
// (Final, Native, Public, BlueprintCallable)

void ARCRealPlayerController::Respawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "Respawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.RestartPlay
// (Native, Public, BlueprintCallable)

void ARCRealPlayerController::RestartPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "RestartPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetBoatEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCBoatPawn*                      BoatPawn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetBoatEnabled(bool Enable, class ARCBoatPawn* BoatPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetBoatEnabled");

	Params::RCRealPlayerController_SetBoatEnabled Parms{};

	Parms.Enable = Enable;
	Parms.BoatPawn = BoatPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetCharacterName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCharacterName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetCharacterName(class FName InCharacterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetCharacterName");

	Params::RCRealPlayerController_SetCharacterName Parms{};

	Parms.InCharacterName = InCharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetDebugScriptDraw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDraw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetDebugScriptDraw(bool bDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetDebugScriptDraw");

	Params::RCRealPlayerController_SetDebugScriptDraw Parms{};

	Parms.bDraw = bDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetInputFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetInputFlag(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetInputFlag");

	Params::RCRealPlayerController_SetInputFlag Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetLastPlayerStartName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InPlayerStartName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetLastPlayerStartName(class FName InPlayerStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetLastPlayerStartName");

	Params::RCRealPlayerController_SetLastPlayerStartName Parms{};

	Parms.InPlayerStartName = InPlayerStartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetMoveSpeedType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCPlayerMoveSpeedType                  InSpeedType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetMoveSpeedType(ERCPlayerMoveSpeedType InSpeedType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetMoveSpeedType");

	Params::RCRealPlayerController_SetMoveSpeedType Parms{};

	Parms.InSpeedType = InSpeedType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetNextToonDirectionalLightPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotator                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetNextToonDirectionalLightPosition(const struct FVector& InLocation, const struct FRotator& InRotator, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetNextToonDirectionalLightPosition");

	Params::RCRealPlayerController_SetNextToonDirectionalLightPosition Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRotator = std::move(InRotator);
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetRainDraw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetRainDraw(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetRainDraw");

	Params::RCRealPlayerController_SetRainDraw Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetRealPlayerGameMode
// (Native, Public, BlueprintCallable)
// Parameters:
// ERCRealPlayerGameMode                   InGameMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetRealPlayerGameMode(ERCRealPlayerGameMode InGameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetRealPlayerGameMode");

	Params::RCRealPlayerController_SetRealPlayerGameMode Parms{};

	Parms.InGameMode = InGameMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetResearchVisionTimeMode
// (Native, Public, BlueprintCallable)
// Parameters:
// ERCResearchVisionTimeMode               InTimeMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetResearchVisionTimeMode(ERCResearchVisionTimeMode InTimeMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetResearchVisionTimeMode");

	Params::RCRealPlayerController_SetResearchVisionTimeMode Parms{};

	Parms.InTimeMode = InTimeMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetReserchExitFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetReserchExitFlag(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetReserchExitFlag");

	Params::RCRealPlayerController_SetReserchExitFlag Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetReserchMinimapFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetReserchMinimapFlag(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetReserchMinimapFlag");

	Params::RCRealPlayerController_SetReserchMinimapFlag Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetReserchVisionChangeFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetReserchVisionChangeFlag(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetReserchVisionChangeFlag");

	Params::RCRealPlayerController_SetReserchVisionChangeFlag Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetSpotSelectQuestionTextID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSpotSelectQuestionTextID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetSpotSelectQuestionTextID(class FName InSpotSelectQuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetSpotSelectQuestionTextID");

	Params::RCRealPlayerController_SetSpotSelectQuestionTextID Parms{};

	Parms.InSpotSelectQuestionTextID = InSpotSelectQuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.SetStartMenuCollection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInStartMenuCollection                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::SetStartMenuCollection(bool bInStartMenuCollection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "SetStartMenuCollection");

	Params::RCRealPlayerController_SetStartMenuCollection Parms{};

	Parms.bInStartMenuCollection = bInStartMenuCollection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.StartPlay
// (Native, Public, BlueprintCallable)
// Parameters:
// ERCRealPlayerGameMode                   InGameMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRealPlayerController::StartPlay(ERCRealPlayerGameMode InGameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "StartPlay");

	Params::RCRealPlayerController_StartPlay Parms{};

	Parms.InGameMode = InGameMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerController.GetBoatSuspended
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealPlayerController::GetBoatSuspended() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "GetBoatSuspended");

	Params::RCRealPlayerController_GetBoatSuspended Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerController.GetToonDirectionalLightActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ARCCharacterLigthActor*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCharacterLigthActor* ARCRealPlayerController::GetToonDirectionalLightActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealPlayerController", "GetToonDirectionalLightActor");

	Params::RCRealPlayerController_GetToonDirectionalLightActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCAttachmentBFL.ChangeLightColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InAmbientColor                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InDirectionalColor                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCAttachmentBFL::ChangeLightColor(class AActor* InActor, const struct FLinearColor& InAmbientColor, const struct FLinearColor& InDirectionalColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAttachmentBFL", "ChangeLightColor");

	Params::RCAttachmentBFL_ChangeLightColor Parms{};

	Parms.InActor = InActor;
	Parms.InAmbientColor = std::move(InAmbientColor);
	Parms.InDirectionalColor = std::move(InDirectionalColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCAttachmentBFL.GetAttachmentActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCAttachmentBFL::GetAttachmentActor(const class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCAttachmentBFL", "GetAttachmentActor");

	Params::RCAttachmentBFL_GetAttachmentActor Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgActorBFL.GetBgActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InBgActorName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCBgActor*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCBgActor* URCBgActorBFL::GetBgActor(class FName InBgActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBgActorBFL", "GetBgActor");

	Params::RCBgActorBFL_GetBgActor Parms{};

	Parms.InBgActorName = InBgActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgActorBFL.IsVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InBgActorName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBgActorBFL::IsVisibility(class FName InBgActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBgActorBFL", "IsVisibility");

	Params::RCBgActorBFL_IsVisibility Parms{};

	Parms.InBgActorName = InBgActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgActorBFL.SetVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InBgActorName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBgActorBFL::SetVisibility(class FName InBgActorName, bool bVisibleFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBgActorBFL", "SetVisibility");

	Params::RCBgActorBFL_SetVisibility Parms{};

	Parms.InBgActorName = InBgActorName;
	Parms.bVisibleFlag = bVisibleFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBgActorBFL.SetVisibles
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InActorName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBgActorBFL::SetVisibles(const class FString& InActorName, bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBgActorBFL", "SetVisibles");

	Params::RCBgActorBFL_SetVisibles Parms{};

	Parms.InActorName = std::move(InActorName);
	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuManager.SetKeyboardFocusOnPossible
// (Final, Native, Public, BlueprintCallable)

void URCMenuManager::SetKeyboardFocusOnPossible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuManager", "SetKeyboardFocusOnPossible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTItleSubStoryList.SubStoryListSelectNavigation
// (Final, Native, Protected)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTItleSubStoryList::SubStoryListSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTItleSubStoryList", "SubStoryListSelectNavigation");

	Params::RCTItleSubStoryList_SubStoryListSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgBFL.IsMapIDEquale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID1                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMapID2                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBgBFL::IsMapIDEquale(class FName InMapID1, class FName InMapID2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBgBFL", "IsMapIDEquale");

	Params::RCBgBFL_IsMapIDEquale Parms{};

	Parms.InMapID1 = InMapID1;
	Parms.InMapID2 = InMapID2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgBFL.IsSyncSubLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBgBFL::IsSyncSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBgBFL", "IsSyncSubLevel");

	Params::RCBgBFL_IsSyncSubLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgBFL.LoadAllEventSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapterNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSceneNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBgBFL::LoadAllEventSetting(int32 InChapterNum, class FName InSceneNum, class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBgBFL", "LoadAllEventSetting");

	Params::RCBgBFL_LoadAllEventSetting Parms{};

	Parms.InChapterNum = InChapterNum;
	Parms.InSceneNum = InSceneNum;
	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgBFL.StartUnLoadSubLevelList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bLoadingDraw                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerMove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBgBFL::StartUnLoadSubLevelList(bool bLoadingDraw, bool bPlayerMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBgBFL", "StartUnLoadSubLevelList");

	Params::RCBgBFL_StartUnLoadSubLevelList Parms{};

	Parms.bLoadingDraw = bLoadingDraw;
	Parms.bPlayerMove = bPlayerMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCLevelScriptActor.LoadAssets
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     InAssets                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void ARCLevelScriptActor::LoadAssets(const TArray<TSoftClassPtr<class UClass>>& InAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCLevelScriptActor", "LoadAssets");

	Params::RCLevelScriptActor_LoadAssets Parms{};

	Parms.InAssets = std::move(InAssets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTrigger.GetOtherActorName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCEventTrigger::GetOtherActorName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTrigger", "GetOtherActorName");

	Params::RCEventTrigger_GetOtherActorName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEventTrigger.IsCollisionEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCEventTrigger::IsCollisionEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTrigger", "IsCollisionEnable");

	Params::RCEventTrigger_IsCollisionEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEventTrigger.IsOtherPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCEventTrigger::IsOtherPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTrigger", "IsOtherPlayer");

	Params::RCEventTrigger_IsOtherPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEventTrigger.OnActorBeginOverlapScriptEntry
// (Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCEventTrigger::OnActorBeginOverlapScriptEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTrigger", "OnActorBeginOverlapScriptEntry");

	Params::RCEventTrigger_OnActorBeginOverlapScriptEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTrigger.OnActorEndOverlapScriptEntry
// (Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCEventTrigger::OnActorEndOverlapScriptEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTrigger", "OnActorEndOverlapScriptEntry");

	Params::RCEventTrigger_OnActorEndOverlapScriptEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTrigger.SetCollisionEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCEventTrigger::SetCollisionEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTrigger", "SetCollisionEnable");

	Params::RCEventTrigger_SetCollisionEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTrigger.SetOtherActorName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             bName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCEventTrigger::SetOtherActorName(class FName bName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTrigger", "SetOtherActorName");

	Params::RCEventTrigger_SetOtherActorName Parms{};

	Parms.bName = bName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTrigger.SetOtherPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInOtherPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCEventTrigger::SetOtherPlayer(bool bInOtherPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTrigger", "SetOtherPlayer");

	Params::RCEventTrigger_SetOtherPlayer Parms{};

	Parms.bInOtherPlayer = bInOtherPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBgLevelScriptActor.DisableChangeSubLevel
// (Final, Native, Public, BlueprintCallable)

void ARCBgLevelScriptActor::DisableChangeSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "DisableChangeSubLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBgLevelScriptActor.GetBgArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCBgLevelScriptActor::GetBgArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "GetBgArea");

	Params::RCBgLevelScriptActor_GetBgArea Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.GetBgMapID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCBgLevelScriptActor::GetBgMapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "GetBgMapID");

	Params::RCBgLevelScriptActor_GetBgMapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.GetBgMapIDLong
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCBgLevelScriptActor::GetBgMapIDLong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "GetBgMapIDLong");

	Params::RCBgLevelScriptActor_GetBgMapIDLong Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.GetBgMapNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCBgLevelScriptActor::GetBgMapNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "GetBgMapNum");

	Params::RCBgLevelScriptActor_GetBgMapNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.GetBgType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCBgLevelScriptActor::GetBgType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "GetBgType");

	Params::RCBgLevelScriptActor_GetBgType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.GetCharacterSettingList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     OutCharacterSettingList                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InChapterNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCommonOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::GetCharacterSettingList(TArray<class FName>* OutCharacterSettingList, class FName InMapID, int32 InChapterNum, bool bCommonOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "GetCharacterSettingList");

	Params::RCBgLevelScriptActor_GetCharacterSettingList Parms{};

	Parms.InMapID = InMapID;
	Parms.InChapterNum = InChapterNum;
	Parms.bCommonOnly = bCommonOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCharacterSettingList != nullptr)
		*OutCharacterSettingList = std::move(Parms.OutCharacterSettingList);

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.GetEventSettingList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     OutEventSettingList                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>                     OutMapIDList                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InChapterNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCommonOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::GetEventSettingList(TArray<class FName>* OutEventSettingList, TArray<class FName>* OutMapIDList, int32 InChapterNum, bool bCommonOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "GetEventSettingList");

	Params::RCBgLevelScriptActor_GetEventSettingList Parms{};

	Parms.InChapterNum = InChapterNum;
	Parms.bCommonOnly = bCommonOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEventSettingList != nullptr)
		*OutEventSettingList = std::move(Parms.OutEventSettingList);

	if (OutMapIDList != nullptr)
		*OutMapIDList = std::move(Parms.OutMapIDList);

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.GetSubLevelList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     OutSubLevelList                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCommonOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::GetSubLevelList(TArray<class FName>* OutSubLevelList, class FName InMapID, bool bCommonOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "GetSubLevelList");

	Params::RCBgLevelScriptActor_GetSubLevelList Parms{};

	Parms.InMapID = InMapID;
	Parms.bCommonOnly = bCommonOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSubLevelList != nullptr)
		*OutSubLevelList = std::move(Parms.OutSubLevelList);

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.IsEnableSubLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::IsEnableSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "IsEnableSubLevel");

	Params::RCBgLevelScriptActor_IsEnableSubLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.IsSyncSubLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::IsSyncSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "IsSyncSubLevel");

	Params::RCBgLevelScriptActor_IsSyncSubLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.IsVisibledSubLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::IsVisibledSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "IsVisibledSubLevel");

	Params::RCBgLevelScriptActor_IsVisibledSubLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.LoadAllLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapterNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSceneNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCommonOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::LoadAllLevel(int32 InChapterNum, class FName InSceneNum, class FName InMapID, bool bCommonOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "LoadAllLevel");

	Params::RCBgLevelScriptActor_LoadAllLevel Parms{};

	Parms.InChapterNum = InChapterNum;
	Parms.InSceneNum = InSceneNum;
	Parms.InMapID = InMapID;
	Parms.bCommonOnly = bCommonOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.LoadEventSubLevelList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapterNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSceneNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCommonOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::LoadEventSubLevelList(int32 InChapterNum, class FName InSceneNum, class FName InMapID, bool bCommonOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "LoadEventSubLevelList");

	Params::RCBgLevelScriptActor_LoadEventSubLevelList Parms{};

	Parms.InChapterNum = InChapterNum;
	Parms.InSceneNum = InSceneNum;
	Parms.InMapID = InMapID;
	Parms.bCommonOnly = bCommonOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.ReadyLoadBgListMapID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::ReadyLoadBgListMapID(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "ReadyLoadBgListMapID");

	Params::RCBgLevelScriptActor_ReadyLoadBgListMapID Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.ReleaseEventSubLevelList
// (Final, Native, Public, BlueprintCallable)

void ARCBgLevelScriptActor::ReleaseEventSubLevelList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "ReleaseEventSubLevelList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBgLevelScriptActor.SetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBgLevelScriptActor::SetVisibility(bool bFlag, bool bIsActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "SetVisibility");

	Params::RCBgLevelScriptActor_SetVisibility Parms{};

	Parms.bFlag = bFlag;
	Parms.bIsActor = bIsActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBgLevelScriptActor.StartAddLoadSubLevelList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSubLevelNameList                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bLoadingDraw                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::StartAddLoadSubLevelList(const TArray<class FName>& InSubLevelNameList, bool bLoadingDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "StartAddLoadSubLevelList");

	Params::RCBgLevelScriptActor_StartAddLoadSubLevelList Parms{};

	Parms.InSubLevelNameList = std::move(InSubLevelNameList);
	Parms.bLoadingDraw = bLoadingDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.StartLoadBgList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Area                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MapNum                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoadingDraw                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerMove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::StartLoadBgList(int32 Area, int32 MapNum, int32 Type, bool bLoadingDraw, bool bPlayerMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "StartLoadBgList");

	Params::RCBgLevelScriptActor_StartLoadBgList Parms{};

	Parms.Area = Area;
	Parms.MapNum = MapNum;
	Parms.Type = Type;
	Parms.bLoadingDraw = bLoadingDraw;
	Parms.bPlayerMove = bPlayerMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.StartLoadBgListMapID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoadingDraw                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerMove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::StartLoadBgListMapID(class FName InMapID, bool bLoadingDraw, bool bPlayerMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "StartLoadBgListMapID");

	Params::RCBgLevelScriptActor_StartLoadBgListMapID Parms{};

	Parms.InMapID = InMapID;
	Parms.bLoadingDraw = bLoadingDraw;
	Parms.bPlayerMove = bPlayerMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.StartLoadCommonSubLevel
// (Final, Native, Public, BlueprintCallable)

void ARCBgLevelScriptActor::StartLoadCommonSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "StartLoadCommonSubLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBgLevelScriptActor.StartLoadSubLevelList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSubLevelNameList                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bLoadingDraw                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerMove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::StartLoadSubLevelList(const TArray<class FName>& InSubLevelNameList, bool bLoadingDraw, bool bPlayerMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "StartLoadSubLevelList");

	Params::RCBgLevelScriptActor_StartLoadSubLevelList Parms{};

	Parms.InSubLevelNameList = std::move(InSubLevelNameList);
	Parms.bLoadingDraw = bLoadingDraw;
	Parms.bPlayerMove = bPlayerMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBgLevelScriptActor.StartUnLoadSubLevelList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bLoadingDraw                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerMove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCBgLevelScriptActor::StartUnLoadSubLevelList(bool bLoadingDraw, bool bPlayerMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBgLevelScriptActor", "StartUnLoadSubLevelList");

	Params::RCBgLevelScriptActor_StartUnLoadSubLevelList Parms{};

	Parms.bLoadingDraw = bLoadingDraw;
	Parms.bPlayerMove = bPlayerMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.EndTipsScreen_Debug
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::EndTipsScreen_Debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "EndTipsScreen_Debug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.GetSvnCommitDateRC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCBlueprintFunctionLibrary::GetSvnCommitDateRC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "GetSvnCommitDateRC");

	Params::RCBlueprintFunctionLibrary_GetSvnCommitDateRC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.GetSvnCommitDateRCDev
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCBlueprintFunctionLibrary::GetSvnCommitDateRCDev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "GetSvnCommitDateRCDev");

	Params::RCBlueprintFunctionLibrary_GetSvnCommitDateRCDev Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.GetSvnRevisionNumberRC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCBlueprintFunctionLibrary::GetSvnRevisionNumberRC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "GetSvnRevisionNumberRC");

	Params::RCBlueprintFunctionLibrary_GetSvnRevisionNumberRC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.GetSvnRevisionNumberRCDev
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCBlueprintFunctionLibrary::GetSvnRevisionNumberRCDev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "GetSvnRevisionNumberRCDev");

	Params::RCBlueprintFunctionLibrary_GetSvnRevisionNumberRCDev Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.InitLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::InitLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "InitLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.InitRealLevelOpen
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::InitRealLevelOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "InitRealLevelOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.IsAssetAllLoadComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsAssetAllLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsAssetAllLoadComplete");

	Params::RCBlueprintFunctionLibrary_IsAssetAllLoadComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsDevelopmentBuild
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsDevelopmentBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsDevelopmentBuild");

	Params::RCBlueprintFunctionLibrary_IsDevelopmentBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsDisableChangeSubLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsDisableChangeSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsDisableChangeSubLevel");

	Params::RCBlueprintFunctionLibrary_IsDisableChangeSubLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsLoadComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsLoadComplete");

	Params::RCBlueprintFunctionLibrary_IsLoadComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsMapMoveNotRealPlChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsMapMoveNotRealPlChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsMapMoveNotRealPlChange");

	Params::RCBlueprintFunctionLibrary_IsMapMoveNotRealPlChange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsOpenDebugMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsOpenDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsOpenDebugMenu");

	Params::RCBlueprintFunctionLibrary_IsOpenDebugMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsOpenSpUEDebugMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsOpenSpUEDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsOpenSpUEDebugMenu");

	Params::RCBlueprintFunctionLibrary_IsOpenSpUEDebugMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsPause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsPause");

	Params::RCBlueprintFunctionLibrary_IsPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsPauseEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsPauseEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsPauseEnable");

	Params::RCBlueprintFunctionLibrary_IsPauseEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsRealSceneChangePLChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsRealSceneChangePLChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsRealSceneChangePLChange");

	Params::RCBlueprintFunctionLibrary_IsRealSceneChangePLChange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsScreenFade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsScreenFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsScreenFade");

	Params::RCBlueprintFunctionLibrary_IsScreenFade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsScreenFadeOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsScreenFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsScreenFadeOut");

	Params::RCBlueprintFunctionLibrary_IsScreenFadeOut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.IsScreenFadeTypeUi
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::IsScreenFadeTypeUi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "IsScreenFadeTypeUi");

	Params::RCBlueprintFunctionLibrary_IsScreenFadeTypeUi Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.SetLoadCompletePlayerWarp
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::SetLoadCompletePlayerWarp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "SetLoadCompletePlayerWarp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.SetLoadDisplayNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBlueprintFunctionLibrary::SetLoadDisplayNum(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "SetLoadDisplayNum");

	Params::RCBlueprintFunctionLibrary_SetLoadDisplayNum Parms{};

	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.SetPause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBlueprintFunctionLibrary::SetPause(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "SetPause");

	Params::RCBlueprintFunctionLibrary_SetPause Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.SetPauseEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBlueprintFunctionLibrary::SetPauseEnable(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "SetPauseEnable");

	Params::RCBlueprintFunctionLibrary_SetPauseEnable Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.SetPlayerPauseMoveTest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBlueprintFunctionLibrary::SetPlayerPauseMoveTest(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "SetPlayerPauseMoveTest");

	Params::RCBlueprintFunctionLibrary_SetPlayerPauseMoveTest Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.StartLongLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::StartLongLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "StartLongLoadingScreen");

	Params::RCBlueprintFunctionLibrary_StartLongLoadingScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.StartNextSubLevel
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::StartNextSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "StartNextSubLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.StartSceneChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSceneChangeType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBlueprintFunctionLibrary::StartSceneChange(ERCSceneChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "StartSceneChange");

	Params::RCBlueprintFunctionLibrary_StartSceneChange Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.StartScreenFadeIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBlueprintFunctionLibrary::StartScreenFadeIn(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "StartScreenFadeIn");

	Params::RCBlueprintFunctionLibrary_StartScreenFadeIn Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.StartScreenFadeOut
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCFadeType                             InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBlueprintFunctionLibrary::StartScreenFadeOut(float Duration, const struct FLinearColor& Color, ERCFadeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "StartScreenFadeOut");

	Params::RCBlueprintFunctionLibrary_StartScreenFadeOut Parms{};

	Parms.Duration = Duration;
	Parms.Color = std::move(Color);
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.StartShortLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBlueprintFunctionLibrary::StartShortLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "StartShortLoadingScreen");

	Params::RCBlueprintFunctionLibrary_StartShortLoadingScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBlueprintFunctionLibrary.StartTipsScreen_Debug
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::StartTipsScreen_Debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "StartTipsScreen_Debug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.StopLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::StopLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "StopLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.ToggleDebugMenu
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::ToggleDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "ToggleDebugMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBlueprintFunctionLibrary.ToggleTipsScreenDebugPrintFlag_Debug
// (Final, Native, Static, Public, BlueprintCallable)

void URCBlueprintFunctionLibrary::ToggleTipsScreenDebugPrintFlag_Debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBlueprintFunctionLibrary", "ToggleTipsScreenDebugPrintFlag_Debug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBoatBFL.Disemberk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    OnlyFreeingControl                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBoatBFL::Disemberk(bool OnlyFreeingControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBoatBFL", "Disemberk");

	Params::RCBoatBFL_Disemberk Parms{};

	Parms.OnlyFreeingControl = OnlyFreeingControl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBoatBFL.GetPassenger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Boat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Socket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCCharacterScript*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCharacterScript* URCBoatBFL::GetPassenger(class APawn* Boat, class FName Socket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBoatBFL", "GetPassenger");

	Params::RCBoatBFL_GetPassenger Parms{};

	Parms.Boat = Boat;
	Parms.Socket = Socket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatBFL.GetPassengers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Boat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ARCCharacterScript*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ARCCharacterScript*> URCBoatBFL::GetPassengers(class APawn* Boat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBoatBFL", "GetPassengers");

	Params::RCBoatBFL_GetPassengers Parms{};

	Parms.Boat = Boat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatBFL.GoAboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Boat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Driver                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBoatBFL::GoAboard(class APawn* Boat, class APawn* Driver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBoatBFL", "GoAboard");

	Params::RCBoatBFL_GoAboard Parms{};

	Parms.Boat = Boat;
	Parms.Driver = Driver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBoatBFL.GoAboard2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Boat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Socket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCCharacterScript*               Passenger                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Reset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBoatBFL::GoAboard2(class APawn* Boat, class FName Socket, class ARCCharacterScript* Passenger, bool Player, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBoatBFL", "GoAboard2");

	Params::RCBoatBFL_GoAboard2 Parms{};

	Parms.Boat = Boat;
	Parms.Socket = Socket;
	Parms.Passenger = Passenger;
	Parms.Player = Player;
	Parms.Reset = Reset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatBFL.Pause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* URCBoatBFL::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBoatBFL", "Pause");

	Params::RCBoatBFL_Pause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatBFL.Resume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Boat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBoatBFL::Resume(class APawn* Boat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBoatBFL", "Resume");

	Params::RCBoatBFL_Resume Parms{};

	Parms.Boat = Boat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBoatBFL.TakePayload
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Boat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Socket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Passenger                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBoatBFL::TakePayload(class APawn* Boat, class FName Socket, class AActor* Passenger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCBoatBFL", "TakePayload");

	Params::RCBoatBFL_TakePayload Parms{};

	Parms.Boat = Boat;
	Parms.Socket = Socket;
	Parms.Passenger = Passenger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatPawn.GetNavigationHead
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCBoatPawn::GetNavigationHead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "GetNavigationHead");

	Params::RCBoatPawn_GetNavigationHead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatPawn.GetNavigationVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCBoatPawn::GetNavigationVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "GetNavigationVelocity");

	Params::RCBoatPawn_GetNavigationVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatPawn.GetNavigationVelocityNorm
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCBoatPawn::GetNavigationVelocityNorm(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "GetNavigationVelocityNorm");

	Params::RCBoatPawn_GetNavigationVelocityNorm Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatPawn.GetSimulationTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Tick                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCBoatPawn::GetSimulationTick(float Tick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "GetSimulationTick");

	Params::RCBoatPawn_GetSimulationTick Parms{};

	Parms.Tick = Tick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBoatPawn.OnCrash
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DidSpawnEffect                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLoc                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          head                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBoatPawn::OnCrash(bool DidSpawnEffect, const struct FVector& HitLoc, const struct FVector& head, const struct FVector& Velocity, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "OnCrash");

	Params::RCBoatPawn_OnCrash Parms{};

	Parms.DidSpawnEffect = DidSpawnEffect;
	Parms.HitLoc = std::move(HitLoc);
	Parms.head = std::move(head);
	Parms.Velocity = std::move(Velocity);
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCBoatPawn.OnCrashed
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Normal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ARCBoatPawn::OnCrashed(class UPrimitiveComponent* Component, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& Normal, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "OnCrashed");

	Params::RCBoatPawn_OnCrashed Parms{};

	Parms.Component = Component;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.Normal = std::move(Normal);
	Parms.HitResult = std::move(HitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBoatPawn.OnNavigationUpdate
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          head                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationDegrees                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBoatPawn::OnNavigationUpdate(const struct FVector& head, const struct FVector& Velocity, float RotationDegrees, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "OnNavigationUpdate");

	Params::RCBoatPawn_OnNavigationUpdate Parms{};

	Parms.head = std::move(head);
	Parms.Velocity = std::move(Velocity);
	Parms.RotationDegrees = RotationDegrees;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCBoatPawn.OnReset
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          head                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationDegrees                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBoatPawn::OnReset(const struct FVector& head, const struct FVector& Velocity, float RotationDegrees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "OnReset");

	Params::RCBoatPawn_OnReset Parms{};

	Parms.head = std::move(head);
	Parms.Velocity = std::move(Velocity);
	Parms.RotationDegrees = RotationDegrees;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCBoatPawn.OnThrottleDown
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   step                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          head                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Forward                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBoatPawn::OnThrottleDown(int32 step, const struct FVector& head, const struct FVector& Velocity, bool Forward, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "OnThrottleDown");

	Params::RCBoatPawn_OnThrottleDown Parms{};

	Parms.step = step;
	Parms.head = std::move(head);
	Parms.Velocity = std::move(Velocity);
	Parms.Forward = Forward;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCBoatPawn.OnThrottleUp
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   step                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          head                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Forward                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBoatPawn::OnThrottleUp(int32 step, const struct FVector& head, const struct FVector& Velocity, bool Forward, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "OnThrottleUp");

	Params::RCBoatPawn_OnThrottleUp Parms{};

	Parms.step = step;
	Parms.head = std::move(head);
	Parms.Velocity = std::move(Velocity);
	Parms.Forward = Forward;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCBoatPawn.SetSteering
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCBoatPawn::SetSteering(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBoatPawn", "SetSteering");

	Params::RCBoatPawn_SetSteering Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealLevelScriptActor.GetNextGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCGameMode                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCGameMode ARCRealLevelScriptActor::GetNextGameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealLevelScriptActor", "GetNextGameMode");

	Params::RCRealLevelScriptActor_GetNextGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.ChangeCheckPointScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRecoverPlayerHP                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::ChangeCheckPointScene(bool bRecoverPlayerHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "ChangeCheckPointScene");

	Params::RCNazoLevelScriptActor_ChangeCheckPointScene Parms{};

	Parms.bRecoverPlayerHP = bRecoverPlayerHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.ChangeFirstScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::ChangeFirstScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "ChangeFirstScene");

	Params::RCNazoLevelScriptActor_ChangeFirstScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.ChangeNextScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::ChangeNextScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "ChangeNextScene");

	Params::RCNazoLevelScriptActor_ChangeNextScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.ChangeScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::ChangeScene(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "ChangeScene");

	Params::RCNazoLevelScriptActor_ChangeScene Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.ChangeTitle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::ChangeTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "ChangeTitle");

	Params::RCNazoLevelScriptActor_ChangeTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.GetCurrentSceneID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoLevelScriptActor::GetCurrentSceneID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "GetCurrentSceneID");

	Params::RCNazoLevelScriptActor_GetCurrentSceneID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.GetCurrentSceneLevelScriptActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ALevelScriptActor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ALevelScriptActor* ARCNazoLevelScriptActor::GetCurrentSceneLevelScriptActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "GetCurrentSceneLevelScriptActor");

	Params::RCNazoLevelScriptActor_GetCurrentSceneLevelScriptActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.GetNextSceneID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoLevelScriptActor::GetNextSceneID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "GetNextSceneID");

	Params::RCNazoLevelScriptActor_GetNextSceneID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.IsCurrentSceneReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::IsCurrentSceneReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "IsCurrentSceneReady");

	Params::RCNazoLevelScriptActor_IsCurrentSceneReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.IsCurrentSceneVisibleCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::IsCurrentSceneVisibleCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "IsCurrentSceneVisibleCompleted");

	Params::RCNazoLevelScriptActor_IsCurrentSceneVisibleCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "IsInitialized");

	Params::RCNazoLevelScriptActor_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.IsLoadSceneCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::IsLoadSceneCompleted(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "IsLoadSceneCompleted");

	Params::RCNazoLevelScriptActor_IsLoadSceneCompleted Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.IsReleaseSceneCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::IsReleaseSceneCompleted(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "IsReleaseSceneCompleted");

	Params::RCNazoLevelScriptActor_IsReleaseSceneCompleted Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.IsSceneInvisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::IsSceneInvisible(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "IsSceneInvisible");

	Params::RCNazoLevelScriptActor_IsSceneInvisible Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.LoadAllNextScenes
// (Final, Native, Public, BlueprintCallable)

void ARCNazoLevelScriptActor::LoadAllNextScenes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "LoadAllNextScenes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActor.LoadLevelCompleted
// (Final, Native, Public)

void ARCNazoLevelScriptActor::LoadLevelCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "LoadLevelCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActor.LoadNextScene
// (Final, Native, Public, BlueprintCallable)

void ARCNazoLevelScriptActor::LoadNextScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "LoadNextScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActor.LoadScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoLevelScriptActor::LoadScene(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "LoadScene");

	Params::RCNazoLevelScriptActor_LoadScene Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActor.ReleaseCurrentScene
// (Final, Native, Public, BlueprintCallable)

void ARCNazoLevelScriptActor::ReleaseCurrentScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "ReleaseCurrentScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActor.ReleaseScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoLevelScriptActor::ReleaseScene(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "ReleaseScene");

	Params::RCNazoLevelScriptActor_ReleaseScene Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActor.SetCurrentSceneLevelScriptActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ALevelScriptActor*                LevelScriptActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoLevelScriptActor::SetCurrentSceneLevelScriptActor(class ALevelScriptActor* LevelScriptActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "SetCurrentSceneLevelScriptActor");

	Params::RCNazoLevelScriptActor_SetCurrentSceneLevelScriptActor Parms{};

	Parms.LevelScriptActor = LevelScriptActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActor.StartScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoLevelScriptActor::StartScene(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "StartScene");

	Params::RCNazoLevelScriptActor_StartScene Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActor.UnloadLevelCompleted
// (Final, Native, Public)

void ARCNazoLevelScriptActor::UnloadLevelCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoLevelScriptActor", "UnloadLevelCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMapViewerLevelScriptActor.CloseMenu
// (Final, Native, Public, BlueprintCallable)

void ARCNazoMapViewerLevelScriptActor::CloseMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMapViewerLevelScriptActor", "CloseMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMapViewerLevelScriptActor.OpenMenu
// (Final, Native, Public, BlueprintCallable)

void ARCNazoMapViewerLevelScriptActor::OpenMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMapViewerLevelScriptActor", "OpenMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMapViewerLevelScriptActor.ToggleMenu
// (Final, Native, Public, BlueprintCallable)

void ARCNazoMapViewerLevelScriptActor::ToggleMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMapViewerLevelScriptActor", "ToggleMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleChapterSelect.CancelWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleChapterSelect::CancelWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleChapterSelect", "CancelWrap");

	Params::RCTitleChapterSelect_CancelWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleChapterSelect.DecideWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleChapterSelect::DecideWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleChapterSelect", "DecideWrap");

	Params::RCTitleChapterSelect_DecideWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleChapterSelect.OnFinishedFinishAnim
// (Final, Native, Private)

void URCTitleChapterSelect::OnFinishedFinishAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleChapterSelect", "OnFinishedFinishAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseGame.SetMistakeVisible
// (Final, Native, Public)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBombReleaseGame::SetMistakeVisible(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseGame", "SetMistakeVisible");

	Params::RCBombReleaseGame_SetMistakeVisible Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseGame.SetSuccessVisible
// (Final, Native, Public)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBombReleaseGame::SetSuccessVisible(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseGame", "SetSuccessVisible");

	Params::RCBombReleaseGame_SetSuccessVisible Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTriggerBFL.GetEventTrigger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCEventTrigger*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCEventTrigger* URCEventTriggerBFL::GetEventTrigger(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEventTriggerBFL", "GetEventTrigger");

	Params::RCEventTriggerBFL_GetEventTrigger Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEventTriggerBFL.IsCollisionEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEventTriggerBFL::IsCollisionEnable(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEventTriggerBFL", "IsCollisionEnable");

	Params::RCEventTriggerBFL_IsCollisionEnable Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEventTriggerBFL.SetCollisionEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEventTriggerBFL::SetCollisionEnable(class FName InName, bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEventTriggerBFL", "SetCollisionEnable");

	Params::RCEventTriggerBFL_SetCollisionEnable Parms{};

	Parms.InName = InName;
	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTopMenu.Close
// (Final, Native, Public, BlueprintCallable)

void URCTopMenu::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTopMenu", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTopMenu.CloseMenuWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyTyoe                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTopMenu::CloseMenuWrap(ERCInputKeyType InKeyTyoe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTopMenu", "CloseMenuWrap");

	Params::RCTopMenu_CloseMenuWrap Parms{};

	Parms.InKeyTyoe = InKeyTyoe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTopMenu.CloseWorldMapWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyTyoe                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTopMenu::CloseWorldMapWrap(ERCInputKeyType InKeyTyoe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTopMenu", "CloseWorldMapWrap");

	Params::RCTopMenu_CloseWorldMapWrap Parms{};

	Parms.InKeyTyoe = InKeyTyoe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTopMenu.InitializeTopMenu
// (Final, Native, Public, BlueprintCallable)

void URCTopMenu::InitializeTopMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTopMenu", "InitializeTopMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTopMenu.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCGameMenuDirectAccessType             bInAccessType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsAreaMenuCancel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTopMenu::Open(ERCGameMenuDirectAccessType bInAccessType, bool bInIsAreaMenuCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTopMenu", "Open");

	Params::RCTopMenu_Open Parms{};

	Parms.bInAccessType = bInAccessType;
	Parms.bInIsAreaMenuCancel = bInIsAreaMenuCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTopMenu.OpenContentWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyTyoe                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTopMenu::OpenContentWrap(ERCInputKeyType InKeyTyoe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTopMenu", "OpenContentWrap");

	Params::RCTopMenu_OpenContentWrap Parms{};

	Parms.InKeyTyoe = InKeyTyoe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTopMenu.OpenKagiSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InKaiKagiIDArray                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bInNotPause                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTopMenu::OpenKagiSelect(const TArray<class FName>& InKaiKagiIDArray, bool bInNotPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTopMenu", "OpenKagiSelect");

	Params::RCTopMenu_OpenKagiSelect Parms{};

	Parms.InKaiKagiIDArray = std::move(InKaiKagiIDArray);
	Parms.bInNotPause = bInNotPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseMistake.FinishAnimation
// (Final, Native, Public)

void URCBombReleaseMistake::FinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseMistake", "FinishAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseMistake.IsFinishedAnimation
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBombReleaseMistake::IsFinishedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseMistake", "IsFinishedAnimation");

	Params::RCBombReleaseMistake_IsFinishedAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBombReleaseMistake.OffAnimation
// (Final, Native, Public)

void URCBombReleaseMistake::OffAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseMistake", "OffAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseMistake.StartAnimation
// (Final, Native, Public)

void URCBombReleaseMistake::StartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseMistake", "StartAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCFixedCameraActor.AtouchRain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   lenght                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Zfollow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCFixedCameraActor::AtouchRain(float lenght, bool Zfollow, float OffsetZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCFixedCameraActor", "AtouchRain");

	Params::RCFixedCameraActor_AtouchRain Parms{};

	Parms.lenght = lenght;
	Parms.Zfollow = Zfollow;
	Parms.OffsetZ = OffsetZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCFixedCameraActor.RemoveRain
// (Final, Native, Public, BlueprintCallable)

void ARCFixedCameraActor::RemoveRain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCFixedCameraActor", "RemoveRain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseSuccess.FinishAnimation
// (Final, Native, Public)

void URCBombReleaseSuccess::FinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseSuccess", "FinishAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseSuccess.IsFinishedAnimation
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBombReleaseSuccess::IsFinishedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseSuccess", "IsFinishedAnimation");

	Params::RCBombReleaseSuccess_IsFinishedAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCBombReleaseSuccess.OffAnimation
// (Final, Native, Public)

void URCBombReleaseSuccess::OffAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseSuccess", "OffAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseSuccess.StartAnimation
// (Final, Native, Public)

void URCBombReleaseSuccess::StartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseSuccess", "StartAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCKusariBlueprintFunctionLibrary.CorrectChain
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*                NiagaraTemplate                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCKusariBlueprintFunctionLibrary::CorrectChain(class UNiagaraComponent* NiagaraTemplate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCKusariBlueprintFunctionLibrary", "CorrectChain");

	Params::RCKusariBlueprintFunctionLibrary_CorrectChain Parms{};

	Parms.NiagaraTemplate = NiagaraTemplate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCKusariBlueprintFunctionLibrary.CorrectChainAuto
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    On                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCKusariBlueprintFunctionLibrary::CorrectChainAuto(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCKusariBlueprintFunctionLibrary", "CorrectChainAuto");

	Params::RCKusariBlueprintFunctionLibrary_CorrectChainAuto Parms{};

	Parms.On = On;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCKusariBlueprintFunctionLibrary.SetChainParam
// (Final, Native, Static, Private, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Gravity                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Drag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCKusariBlueprintFunctionLibrary::SetChainParam(const struct FVector& Gravity, float Drag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCKusariBlueprintFunctionLibrary", "SetChainParam");

	Params::RCKusariBlueprintFunctionLibrary_SetChainParam Parms{};

	Parms.Gravity = std::move(Gravity);
	Parms.Drag = Drag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.GetDetectiveUIPath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCNzUiFinaleHeadingTextWidget::GetDetectiveUIPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "GetDetectiveUIPath");

	Params::RCNzUiFinaleHeadingTextWidget_GetDetectiveUIPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.GetHeadingText
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCNzUiFinaleHeadingTextWidget::GetHeadingText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "GetHeadingText");

	Params::RCNzUiFinaleHeadingTextWidget_GetHeadingText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.GetIndexText
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinaleHeadingTextWidget::GetIndexText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "GetIndexText");

	Params::RCNzUiFinaleHeadingTextWidget_GetIndexText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.GetSectionID
// (Final, Native, Public)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCNzUiFinaleHeadingTextWidget::GetSectionID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "GetSectionID");

	Params::RCNzUiFinaleHeadingTextWidget_GetSectionID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.GetSectionIdx
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinaleHeadingTextWidget::GetSectionIdx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "GetSectionIdx");

	Params::RCNzUiFinaleHeadingTextWidget_GetSectionIdx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.GetSectionTextID
// (Final, Native, Public)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCNzUiFinaleHeadingTextWidget::GetSectionTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "GetSectionTextID");

	Params::RCNzUiFinaleHeadingTextWidget_GetSectionTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.InitializeHeadingTextWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SectionID_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID_0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCNzFinaleManagerBase*           FinaleManager_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           uiPath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleHeadingTextWidget::InitializeHeadingTextWidget(class FName SectionID_0, class FName TextID_0, class ARCNzFinaleManagerBase* FinaleManager_0, int32 idx, const class FString& uiPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "InitializeHeadingTextWidget");

	Params::RCNzUiFinaleHeadingTextWidget_InitializeHeadingTextWidget Parms{};

	Parms.SectionID_0 = SectionID_0;
	Parms.TextID_0 = TextID_0;
	Parms.FinaleManager_0 = FinaleManager_0;
	Parms.idx = idx;
	Parms.uiPath = std::move(uiPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.UpdateDebugDrawLine
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FVector2D>                Points                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleHeadingTextWidget::UpdateDebugDrawLine(const TArray<struct FVector2D>& Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "UpdateDebugDrawLine");

	Params::RCNzUiFinaleHeadingTextWidget_UpdateDebugDrawLine Parms{};

	Parms.Points = std::move(Points);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleHeadingTextWidget.UpdateDetectiveRestStatus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<bool>                            statusList                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleHeadingTextWidget::UpdateDetectiveRestStatus(const TArray<bool>& statusList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "UpdateDetectiveRestStatus");

	Params::RCNzUiFinaleHeadingTextWidget_UpdateDetectiveRestStatus Parms{};

	Parms.statusList = std::move(statusList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleHeadingTextWidget.UpdateHeadingText
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleHeadingTextWidget::UpdateHeadingText(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "UpdateHeadingText");

	Params::RCNzUiFinaleHeadingTextWidget_UpdateHeadingText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleHeadingTextWidget.UpdateIndexTex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       tex                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleHeadingTextWidget::UpdateIndexTex(const class UTexture2D* tex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "UpdateIndexTex");

	Params::RCNzUiFinaleHeadingTextWidget_UpdateIndexTex Parms{};

	Parms.tex = tex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleHeadingTextWidget.UpdateIndexText
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleHeadingTextWidget::UpdateIndexText(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "UpdateIndexText");

	Params::RCNzUiFinaleHeadingTextWidget_UpdateIndexText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleHeadingTextWidget.UpdatePieceState
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<bool>                            isStateList                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleHeadingTextWidget::UpdatePieceState(const TArray<bool>& isStateList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "UpdatePieceState");

	Params::RCNzUiFinaleHeadingTextWidget_UpdatePieceState Parms{};

	Parms.isStateList = std::move(isStateList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleHeadingTextWidget.UpdateSelectStatus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSelect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleHeadingTextWidget::UpdateSelectStatus(bool IsSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingTextWidget", "UpdateSelectStatus");

	Params::RCNzUiFinaleHeadingTextWidget_UpdateSelectStatus Parms{};

	Parms.IsSelect = IsSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCBombReleaseWidget.Finish
// (Final, Native, Public)

void URCBombReleaseWidget::Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "Finish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.GameOver
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBombReleaseWidget::GameOver(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "GameOver");

	Params::RCBombReleaseWidget_GameOver Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.PlayScene
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBombReleaseWidget::PlayScene(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "PlayScene");

	Params::RCBombReleaseWidget_PlayScene Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.PreFinish
// (Final, Native, Public)

void URCBombReleaseWidget::PreFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "PreFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.PreGameOver
// (Final, Native, Public)

void URCBombReleaseWidget::PreGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "PreGameOver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.PrePlayScene
// (Final, Native, Public)

void URCBombReleaseWidget::PrePlayScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "PrePlayScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.PreStartScene
// (Final, Native, Public)

void URCBombReleaseWidget::PreStartScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "PreStartScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.PreSuccess
// (Final, Native, Public)

void URCBombReleaseWidget::PreSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "PreSuccess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.PreTitleScene
// (Final, Native, Public)

void URCBombReleaseWidget::PreTitleScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "PreTitleScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.PreTutorialScene
// (Final, Native, Public)

void URCBombReleaseWidget::PreTutorialScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "PreTutorialScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.StartScene
// (Final, Native, Public)

void URCBombReleaseWidget::StartScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "StartScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.Success
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBombReleaseWidget::Success(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "Success");

	Params::RCBombReleaseWidget_Success Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.TitleScene
// (Final, Native, Public)

void URCBombReleaseWidget::TitleScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "TitleScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCBombReleaseWidget.TutorialScene
// (Final, Native, Public)

void URCBombReleaseWidget::TutorialScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBombReleaseWidget", "TutorialScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTextData.Import
// (Final, Native, Public, BlueprintCallable)

void URCTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.CheckAcvivationCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCameraBlueprintFunctionLibrary::CheckAcvivationCamera(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "CheckAcvivationCamera");

	Params::RCCameraBlueprintFunctionLibrary_CheckAcvivationCamera Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCameraBlueprintFunctionLibrary.GetCameraAngle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCCameraBlueprintFunctionLibrary::GetCameraAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "GetCameraAngle");

	Params::RCCameraBlueprintFunctionLibrary_GetCameraAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCameraBlueprintFunctionLibrary.GetCameraVAngle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCCameraBlueprintFunctionLibrary::GetCameraVAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "GetCameraVAngle");

	Params::RCCameraBlueprintFunctionLibrary_GetCameraVAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCameraBlueprintFunctionLibrary.GetCurrentCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCCameraBlueprintFunctionLibrary::GetCurrentCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "GetCurrentCamera");

	Params::RCCameraBlueprintFunctionLibrary_GetCurrentCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCameraBlueprintFunctionLibrary.GetCurrentCameraTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCCameraBlueprintFunctionLibrary::GetCurrentCameraTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "GetCurrentCameraTag");

	Params::RCCameraBlueprintFunctionLibrary_GetCurrentCameraTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCameraBlueprintFunctionLibrary.IsLoadingCamra
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCameraBlueprintFunctionLibrary::IsLoadingCamra()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "IsLoadingCamra");

	Params::RCCameraBlueprintFunctionLibrary_IsLoadingCamra Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCameraBlueprintFunctionLibrary.ReActivationCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Blend                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCameraBlueprintFunctionLibrary::ReActivationCamera(bool Blend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "ReActivationCamera");

	Params::RCCameraBlueprintFunctionLibrary_ReActivationCamera Parms{};

	Parms.Blend = Blend;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.RemoveFakeLocation
// (Final, Native, Static, Public, BlueprintCallable)

void URCCameraBlueprintFunctionLibrary::RemoveFakeLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "RemoveFakeLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.ResetActivationCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCameraBlueprintFunctionLibrary::ResetActivationCamera(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "ResetActivationCamera");

	Params::RCCameraBlueprintFunctionLibrary_ResetActivationCamera Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.SetActivationCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Blend                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCameraBlueprintFunctionLibrary::SetActivationCamera(class FName Tag, bool Blend, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "SetActivationCamera");

	Params::RCCameraBlueprintFunctionLibrary_SetActivationCamera Parms{};

	Parms.Tag = Tag;
	Parms.Blend = Blend;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.SetActivationCameraWithBlendParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FViewTargetTransitionParams      Param                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void URCCameraBlueprintFunctionLibrary::SetActivationCameraWithBlendParam(class FName Tag, const struct FViewTargetTransitionParams& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "SetActivationCameraWithBlendParam");

	Params::RCCameraBlueprintFunctionLibrary_SetActivationCameraWithBlendParam Parms{};

	Parms.Tag = Tag;
	Parms.Param = std::move(Param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.SetCameraAnglePlayerBack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   va                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCameraBlueprintFunctionLibrary::SetCameraAnglePlayerBack(float va)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "SetCameraAnglePlayerBack");

	Params::RCCameraBlueprintFunctionLibrary_SetCameraAnglePlayerBack Parms{};

	Parms.va = va;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.SetFakeLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCameraBlueprintFunctionLibrary::SetFakeLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "SetFakeLocation");

	Params::RCCameraBlueprintFunctionLibrary_SetFakeLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.SetFoceCameraAngle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   A                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   va                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCameraBlueprintFunctionLibrary::SetFoceCameraAngle(float A, float va)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "SetFoceCameraAngle");

	Params::RCCameraBlueprintFunctionLibrary_SetFoceCameraAngle Parms{};

	Parms.A = A;
	Parms.va = va;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCameraBlueprintFunctionLibrary.SetPlayerCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCameraBlueprintFunctionLibrary::SetPlayerCamera(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCameraBlueprintFunctionLibrary", "SetPlayerCamera");

	Params::RCCameraBlueprintFunctionLibrary_SetPlayerCamera Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGetFrameBufferActor.ReSetOnlyColor
// (Final, Native, Public, BlueprintCallable)

void ARCGetFrameBufferActor::ReSetOnlyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGetFrameBufferActor", "ReSetOnlyColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGetFrameBufferActor.ReSetTriming
// (Final, Native, Public, BlueprintCallable)

void ARCGetFrameBufferActor::ReSetTriming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGetFrameBufferActor", "ReSetTriming");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGetFrameBufferActor.SetMaterialInstanceDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         MI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCGetFrameBufferActor::SetMaterialInstanceDynamic(class UMaterialInstanceDynamic* MI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGetFrameBufferActor", "SetMaterialInstanceDynamic");

	Params::RCGetFrameBufferActor_SetMaterialInstanceDynamic Parms{};

	Parms.MI = MI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGetFrameBufferActor.SetOnlyColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           col                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCGetFrameBufferActor::SetOnlyColor(const struct FColor& col)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGetFrameBufferActor", "SetOnlyColor");

	Params::RCGetFrameBufferActor_SetOnlyColor Parms{};

	Parms.col = std::move(col);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGetFrameBufferActor.SetTriming
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCGetFrameBufferActor::SetTriming(const struct FVector& Min, const struct FVector& Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGetFrameBufferActor", "SetTriming");

	Params::RCGetFrameBufferActor_SetTriming Parms{};

	Parms.Min = std::move(Min);
	Parms.Max = std::move(Max);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGetFrameBufferActor.StartFrameGrab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCGetFrameBufferActor::StartFrameGrab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGetFrameBufferActor", "StartFrameGrab");

	Params::RCGetFrameBufferActor_StartFrameGrab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGetFrameBufferActor.StopFrameGrab
// (Final, Native, Public, BlueprintCallable)

void ARCGetFrameBufferActor::StopFrameGrab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGetFrameBufferActor", "StopFrameGrab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePageGuideWidget.ChangePageGuideState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsSelect                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePageGuideWidget::ChangePageGuideState(const bool IsSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageGuideWidget", "ChangePageGuideState");

	Params::RCNzUiFinalePageGuideWidget_ChangePageGuideState Parms{};

	Parms.IsSelect = IsSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePageGuideWidget.InitializePageGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPageGuideType                          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePageGuideWidget::InitializePageGuide(EPageGuideType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageGuideWidget", "InitializePageGuide");

	Params::RCNzUiFinalePageGuideWidget_InitializePageGuide Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePageGuideWidget.PlayAnimDefaultL
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePageGuideWidget::PlayAnimDefaultL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageGuideWidget", "PlayAnimDefaultL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePageGuideWidget.PlayAnimDefaultS
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePageGuideWidget::PlayAnimDefaultS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageGuideWidget", "PlayAnimDefaultS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePageGuideWidget.PlayAnimQuestionL
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePageGuideWidget::PlayAnimQuestionL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageGuideWidget", "PlayAnimQuestionL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePageGuideWidget.PlayAnimQuestionS
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePageGuideWidget::PlayAnimQuestionS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageGuideWidget", "PlayAnimQuestionS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePageGuideWidget.UpdatePageGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPageGuideType                          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isCurrentPage                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePageGuideWidget::UpdatePageGuide(EPageGuideType Type, bool isCurrentPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageGuideWidget", "UpdatePageGuide");

	Params::RCNzUiFinalePageGuideWidget_UpdatePageGuide Parms{};

	Parms.Type = Type;
	Parms.isCurrentPage = isCurrentPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCHardwareXboxSX.GetXSXConsoleType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCXSXConsoleType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCXSXConsoleType URCHardwareXboxSX::GetXSXConsoleType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCHardwareXboxSX", "GetXSXConsoleType");

	Params::RCHardwareXboxSX_GetXSXConsoleType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuTutorial.SelectTutorialWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuTutorial::SelectTutorialWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuTutorial", "SelectTutorialWrap");

	Params::RCUiMenuTutorial_SelectTutorialWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar.Cancel
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectBar::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar", "Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar.Decide
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectBar::Decide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar", "Decide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar.InitializeBattleKaiKagiSelectBar
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectBar::InitializeBattleKaiKagiSelectBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar", "InitializeBattleKaiKagiSelectBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar.PlayAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleKaiKagiSelectPartsAnimType InAnimType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectBar::PlayAnim(ERCNzUiBattleKaiKagiSelectPartsAnimType InAnimType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar", "PlayAnim");

	Params::RCNzUiBattleKaiKagiSelectBar_PlayAnim Parms{};

	Parms.InAnimType = InAnimType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar.Select
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectBar::Select()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar", "Select");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar.SetKaiKagiName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectBar::SetKaiKagiName(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar", "SetKaiKagiName");

	Params::RCNzUiBattleKaiKagiSelectBar_SetKaiKagiName Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar.SetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectBar::SetVisible(bool bInVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar", "SetVisible");

	Params::RCNzUiBattleKaiKagiSelectBar_SetVisible Parms{};

	Parms.bInVisibility = bInVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar.Unselect
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectBar::Unselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar", "Unselect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.EventFinished
// (Final, Native, Public, BlueprintCallable)

void URCCharacterAnimCtrl::EventFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "EventFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.EventFinishedInMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSlotNumber                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::EventFinishedInMotion(const int32 InSlotNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "EventFinishedInMotion");

	Params::RCCharacterAnimCtrl_EventFinishedInMotion Parms{};

	Parms.InSlotNumber = InSlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.EventFinishedLoopMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSlotNumber                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::EventFinishedLoopMotion(const int32 InSlotNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "EventFinishedLoopMotion");

	Params::RCCharacterAnimCtrl_EventFinishedLoopMotion Parms{};

	Parms.InSlotNumber = InSlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.EventFinishedOutMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSlotNumber                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendSec                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::EventFinishedOutMotion(const int32 InSlotNumber, const float InBlendSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "EventFinishedOutMotion");

	Params::RCCharacterAnimCtrl_EventFinishedOutMotion Parms{};

	Parms.InSlotNumber = InSlotNumber;
	Parms.InBlendSec = InBlendSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.EventIdle
// (Final, Native, Public, BlueprintCallable)

void URCCharacterAnimCtrl::EventIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "EventIdle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.EventReset
// (Final, Native, Public, BlueprintCallable)

void URCCharacterAnimCtrl::EventReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "EventReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.EventSequenceFinished
// (Final, Native, Public, BlueprintCallable)

void URCCharacterAnimCtrl::EventSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "EventSequenceFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.GetUseExtraIdleIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCCharacterAnimCtrl::GetUseExtraIdleIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "GetUseExtraIdleIndex");

	Params::RCCharacterAnimCtrl_GetUseExtraIdleIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimCtrl.IsExistOutCurrentMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterAnimCtrl::IsExistOutCurrentMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "IsExistOutCurrentMotion");

	Params::RCCharacterAnimCtrl_IsExistOutCurrentMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimCtrl.IsExtraIdleTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterAnimCtrl::IsExtraIdleTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "IsExtraIdleTransition");

	Params::RCCharacterAnimCtrl_IsExtraIdleTransition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimCtrl.IsFinishedMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterAnimCtrl::IsFinishedMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "IsFinishedMotion");

	Params::RCCharacterAnimCtrl_IsFinishedMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimCtrl.IsMotionBlend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterAnimCtrl::IsMotionBlend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "IsMotionBlend");

	Params::RCCharacterAnimCtrl_IsMotionBlend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimCtrl.IsStartedMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterAnimCtrl::IsStartedMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "IsStartedMotion");

	Params::RCCharacterAnimCtrl_IsStartedMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimCtrl.PlayLipsyncMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMotionName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterAnimCtrl::PlayLipsyncMotion(const class FName InMotionName, bool bLoop, const float InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "PlayLipsyncMotion");

	Params::RCCharacterAnimCtrl_PlayLipsyncMotion Parms{};

	Parms.InMotionName = InMotionName;
	Parms.bLoop = bLoop;
	Parms.InPlayRate = InPlayRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimCtrl.PlayMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMotionName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMotionSlotType                         InUseSlot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMotionEventSlotSwitchType              InSwitchType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLoopMotionPlayStartPosRate                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSwitchDurationSec                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBlend                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterAnimCtrl::PlayMotion(const class FName InMotionName, bool bLoop, const float InPlayRate, EMotionSlotType InUseSlot, EMotionEventSlotSwitchType InSwitchType, const float InLoopMotionPlayStartPosRate, const float InSwitchDurationSec, bool bBlend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "PlayMotion");

	Params::RCCharacterAnimCtrl_PlayMotion Parms{};

	Parms.InMotionName = InMotionName;
	Parms.bLoop = bLoop;
	Parms.InPlayRate = InPlayRate;
	Parms.InUseSlot = InUseSlot;
	Parms.InSwitchType = InSwitchType;
	Parms.InLoopMotionPlayStartPosRate = InLoopMotionPlayStartPosRate;
	Parms.InSwitchDurationSec = InSwitchDurationSec;
	Parms.bBlend = bBlend;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimCtrl.SetDeathMatchFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDeathMatch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::SetDeathMatchFlag(bool bInDeathMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "SetDeathMatchFlag");

	Params::RCCharacterAnimCtrl_SetDeathMatchFlag Parms{};

	Parms.bInDeathMatch = bInDeathMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.SetExtraIdleTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInbExtraIdleTransition                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::SetExtraIdleTransition(bool bInbExtraIdleTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "SetExtraIdleTransition");

	Params::RCCharacterAnimCtrl_SetExtraIdleTransition Parms{};

	Parms.bInbExtraIdleTransition = bInbExtraIdleTransition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.SetNewAnimBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           InNewAnimClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::SetNewAnimBP(class UClass* InNewAnimClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "SetNewAnimBP");

	Params::RCCharacterAnimCtrl_SetNewAnimBP Parms{};

	Parms.InNewAnimClass = InNewAnimClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.SetPlayLoop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::SetPlayLoop(bool bLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "SetPlayLoop");

	Params::RCCharacterAnimCtrl_SetPlayLoop Parms{};

	Parms.bLoop = bLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.SetPlayRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRate                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::SetPlayRate(const float InRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "SetPlayRate");

	Params::RCCharacterAnimCtrl_SetPlayRate Parms{};

	Parms.InRate = InRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.SetPlayRateBasis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRate                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimCtrl::SetPlayRateBasis(const float InRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "SetPlayRateBasis");

	Params::RCCharacterAnimCtrl_SetPlayRateBasis Parms{};

	Parms.InRate = InRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.StopLipsyncMotion
// (Final, Native, Public, BlueprintCallable)

void URCCharacterAnimCtrl::StopLipsyncMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "StopLipsyncMotion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.SwitchLipsyncIdle
// (Final, Native, Public, BlueprintCallable)

void URCCharacterAnimCtrl::SwitchLipsyncIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "SwitchLipsyncIdle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimCtrl.SwitchOutCurrentMotion
// (Final, Native, Public, BlueprintCallable)

void URCCharacterAnimCtrl::SwitchOutCurrentMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimCtrl", "SwitchOutCurrentMotion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimInstance.GetSequencePlayerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InStateMachineName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InStateName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSequenceName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCCharacterSequencePlayerInfo   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCCharacterSequencePlayerInfo URCCharacterAnimInstance::GetSequencePlayerInfo(class FName InStateMachineName, class FName InStateName, class FName InSequenceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimInstance", "GetSequencePlayerInfo");

	Params::RCCharacterAnimInstance_GetSequencePlayerInfo Parms{};

	Parms.InStateMachineName = InStateMachineName;
	Parms.InStateName = InStateName;
	Parms.InSequenceName = InSequenceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimInstance.GetSequencePlayerInfos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimGraphName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRCCharacterSequencePlayerInfo>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRCCharacterSequencePlayerInfo> URCCharacterAnimInstance::GetSequencePlayerInfos(class FName InAnimGraphName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimInstance", "GetSequencePlayerInfos");

	Params::RCCharacterAnimInstance_GetSequencePlayerInfos Parms{};

	Parms.InAnimGraphName = InAnimGraphName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleChapterSelectList.ChapterSelectListSelectNavigation
// (Final, Native, Protected)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleChapterSelectList::ChapterSelectListSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleChapterSelectList", "ChapterSelectListSelectNavigation");

	Params::RCTitleChapterSelectList_ChapterSelectListSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterAnimNotify.SetFloatValue1
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimNotify::SetFloatValue1(float InValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimNotify", "SetFloatValue1");

	Params::RCCharacterAnimNotify_SetFloatValue1 Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimNotify.SetFloatValue2
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimNotify::SetFloatValue2(float InValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimNotify", "SetFloatValue2");

	Params::RCCharacterAnimNotify_SetFloatValue2 Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimNotify.SetNotifyType
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// EAnimationNotifyType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimNotify::SetNotifyType(EAnimationNotifyType InType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimNotify", "SetNotifyType");

	Params::RCCharacterAnimNotify_SetNotifyType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimNotify.SetStrValue1
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FString                           InValue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimNotify::SetStrValue1(const class FString& InValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimNotify", "SetStrValue1");

	Params::RCCharacterAnimNotify_SetStrValue1 Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterAnimNotify.SetStrValue2
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FString                           InValue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterAnimNotify::SetStrValue2(const class FString& InValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterAnimNotify", "SetStrValue2");

	Params::RCCharacterAnimNotify_SetStrValue2 Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterFacialCtrl.Blink
// (Final, Native, Public, BlueprintCallable)

void URCCharacterFacialCtrl::Blink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterFacialCtrl", "Blink");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterFacialCtrl.ChangeFacial
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InFacialName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowFlowLiquid                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterFacialCtrl::ChangeFacial(const class FName InFacialName, bool bAllowFlowLiquid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterFacialCtrl", "ChangeFacial");

	Params::RCCharacterFacialCtrl_ChangeFacial Parms{};

	Parms.InFacialName = InFacialName;
	Parms.bAllowFlowLiquid = bAllowFlowLiquid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterFacialCtrl.SetCanBlink
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterFacialCtrl::SetCanBlink(bool bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterFacialCtrl", "SetCanBlink");

	Params::RCCharacterFacialCtrl_SetCanBlink Parms{};

	Parms.bState = bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventCharacter.GetAnimCtrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimCtrl*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCCharacterAnimCtrl* ARCEventCharacter::GetAnimCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventCharacter", "GetAnimCtrl");

	Params::RCEventCharacter_GetAnimCtrl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEventCharacter.GetEyeSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class USkeletalMeshComponent*     ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USkeletalMeshComponent* ARCEventCharacter::GetEyeSkeletalMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventCharacter", "GetEyeSkeletalMesh");

	Params::RCEventCharacter_GetEyeSkeletalMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterFacialDataAsset.Reimport
// (Final, Native, Public)

void URCCharacterFacialDataAsset::Reimport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterFacialDataAsset", "Reimport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInstanceTransformer.UpdateGrassTransform
// (Final, Native, Protected, BlueprintCallable)

void ARCInstanceTransformer::UpdateGrassTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInstanceTransformer", "UpdateGrassTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterFacialListDataAsset.Reimport
// (Final, Native, Public)

void URCCharacterFacialListDataAsset::Reimport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterFacialListDataAsset", "Reimport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiCountdown.CloseCountdown
// (Final, Native, Public, BlueprintCallable)

void URCNzUiCountdown::CloseCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiCountdown", "CloseCountdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiCountdown.InitCountdown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   blinkingStartTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiCountdown::InitCountdown(int32 Time, int32 blinkingStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiCountdown", "InitCountdown");

	Params::RCNzUiCountdown_InitCountdown Parms{};

	Parms.Time = Time;
	Parms.blinkingStartTime = blinkingStartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiCountdown.SetFTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiCountdown::SetFTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiCountdown", "SetFTime");

	Params::RCNzUiCountdown_SetFTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiCountdown.ShowCountdown
// (Final, Native, Public, BlueprintCallable)

void URCNzUiCountdown::ShowCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiCountdown", "ShowCountdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiCountdown.StartCountdown
// (Final, Native, Public, BlueprintCallable)

void URCNzUiCountdown::StartCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiCountdown", "StartCountdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiCountdown.StopCountdown
// (Final, Native, Public, BlueprintCallable)

void URCNzUiCountdown::StopCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiCountdown", "StopCountdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiCountdown.IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiCountdown::IsFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiCountdown", "IsFinished");

	Params::RCNzUiCountdown_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiCountdown.IsShown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiCountdown::IsShown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiCountdown", "IsShown");

	Params::RCNzUiCountdown_IsShown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterFootIKBFL.AnimInstSetCanFootIK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimInstance*         AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanFootIK                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterFootIKBFL::AnimInstSetCanFootIK(class URCCharacterAnimInstance* AnimInst, bool bCanFootIK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterFootIKBFL", "AnimInstSetCanFootIK");

	Params::RCCharacterFootIKBFL_AnimInstSetCanFootIK Parms{};

	Parms.AnimInst = AnimInst;
	Parms.bCanFootIK = bCanFootIK;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterFootIKBFL.AnimInstTickFootIK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimInstance*         AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterFootIKBFL::AnimInstTickFootIK(class URCCharacterAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterFootIKBFL", "AnimInstTickFootIK");

	Params::RCCharacterFootIKBFL_AnimInstTickFootIK Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterFootIKBFL.InitFootIK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URCCharacterMovementComponent*    MovementComp                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterFootIKBFL::InitFootIK(class URCCharacterMovementComponent* MovementComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterFootIKBFL", "InitFootIK");

	Params::RCCharacterFootIKBFL_InitFootIK Parms{};

	Parms.MovementComp = MovementComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterFootIKBFL.SetFootIKEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFootIKEnable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterFootIKBFL::SetFootIKEnable(class AActor* Actor, bool bFootIKEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterFootIKBFL", "SetFootIKEnable");

	Params::RCCharacterFootIKBFL_SetFootIKEnable Parms{};

	Parms.Actor = Actor;
	Parms.bFootIKEnable = bFootIKEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterFootIKBFL.TickFootIK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCCharacterMovementComponent*    MovementComp                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterFootIKBFL::TickFootIK(float DeltaTime, class URCCharacterMovementComponent* MovementComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterFootIKBFL", "TickFootIK");

	Params::RCCharacterFootIKBFL_TickFootIK Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.MovementComp = MovementComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCScreenshotBFL.IsEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCScreenshotBFL::IsEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScreenshotBFL", "IsEnable");

	Params::RCScreenshotBFL_IsEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCScreenshotBFL.SetEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCScreenshotBFL::SetEnable(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScreenshotBFL", "SetEnable");

	Params::RCScreenshotBFL_SetEnable Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCScreenshotBFL.SetEnableFromChapter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCScreenshotBFL::SetEnableFromChapter(int32 InChapter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScreenshotBFL", "SetEnableFromChapter");

	Params::RCScreenshotBFL_SetEnableFromChapter Parms{};

	Parms.InChapter = InChapter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterHitReactionBFL.AnimInstTickHitReaction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCCharacterAnimInstance*         AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterHitReactionBFL::AnimInstTickHitReaction(float DeltaTime, class URCCharacterAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterHitReactionBFL", "AnimInstTickHitReaction");

	Params::RCCharacterHitReactionBFL_AnimInstTickHitReaction Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterHitReactionBFL.TickHitReaction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCCharacterMovementComponent*    MovementComp                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterHitReactionBFL::TickHitReaction(float DeltaTime, class URCCharacterMovementComponent* MovementComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterHitReactionBFL", "TickHitReaction");

	Params::RCCharacterHitReactionBFL_TickHitReaction Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.MovementComp = MovementComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterLookCtrl.LookAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLookAtBoneName                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterLookCtrl::LookAt(const class AActor* InActor, const class FName InLookAtBoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterLookCtrl", "LookAt");

	Params::RCCharacterLookCtrl_LookAt Parms{};

	Parms.InActor = InActor;
	Parms.InLookAtBoneName = InLookAtBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterLookCtrl.SetLookTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InTargetPos                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterLookCtrl::SetLookTarget(const struct FVector& InTargetPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterLookCtrl", "SetLookTarget");

	Params::RCCharacterLookCtrl_SetLookTarget Parms{};

	Parms.InTargetPos = std::move(InTargetPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterLookCtrl.SetViewParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InCanViewDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCanViewAngle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterLookCtrl::SetViewParam(float InCanViewDistance, float InCanViewAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterLookCtrl", "SetViewParam");

	Params::RCCharacterLookCtrl_SetViewParam Parms{};

	Parms.InCanViewDistance = InCanViewDistance;
	Parms.InCanViewAngle = InCanViewAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterLookCtrl.StopLookAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDurationSec                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterLookCtrl::StopLookAt(float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterLookCtrl", "StopLookAt");

	Params::RCCharacterLookCtrl_StopLookAt Parms{};

	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterLookCtrl.GetCurrentLookAtTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCCharacterLookCtrl::GetCurrentLookAtTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterLookCtrl", "GetCurrentLookAtTargetActor");

	Params::RCCharacterLookCtrl_GetCurrentLookAtTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterLookCtrl.GetCurrentLookAtTargetBoneName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCCharacterLookCtrl::GetCurrentLookAtTargetBoneName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterLookCtrl", "GetCurrentLookAtTargetBoneName");

	Params::RCCharacterLookCtrl_GetCurrentLookAtTargetBoneName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEventTriggerSequencerComponent.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InEventTriggerName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEventTriggerSequencerComponent::Init(class FName InEventTriggerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTriggerSequencerComponent", "Init");

	Params::RCEventTriggerSequencerComponent_Init Parms{};

	Parms.InEventTriggerName = InEventTriggerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTriggerSequencerComponent.ResetSequencer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEventTriggerSequencerComponent::ResetSequencer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTriggerSequencerComponent", "ResetSequencer");

	Params::RCEventTriggerSequencerComponent_ResetSequencer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEventTriggerSequencerComponent.StartSequencer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEventTriggerSequencerComponent::StartSequencer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTriggerSequencerComponent", "StartSequencer");

	Params::RCEventTriggerSequencerComponent_StartSequencer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCShinigamiTargetPoint.SetShinigami
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCOptionCharaShinigami*          Shinigami                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCShinigamiTargetPoint::SetShinigami(class ARCOptionCharaShinigami* Shinigami)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCShinigamiTargetPoint", "SetShinigami");

	Params::RCShinigamiTargetPoint_SetShinigami Parms{};

	Parms.Shinigami = Shinigami;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterMotionDataAsset.Reimport
// (Final, Native, Public)

void URCCharacterMotionDataAsset::Reimport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterMotionDataAsset", "Reimport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveTitleWidget.SetSectionText
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           sectionText1                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           sectionText2                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveTitleWidget::SetSectionText(const class FString& sectionText1, const class FString& sectionText2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveTitleWidget", "SetSectionText");

	Params::RCNzUiFinaleDetectiveTitleWidget_SetSectionText Parms{};

	Parms.sectionText1 = std::move(sectionText1);
	Parms.sectionText2 = std::move(sectionText2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleDetectiveTitleWidget.UpdateTitle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SectionName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveTitleWidget::UpdateTitle(const int32& SectionName, const class FString& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveTitleWidget", "UpdateTitle");

	Params::RCNzUiFinaleDetectiveTitleWidget_UpdateTitle Parms{};

	Parms.SectionName = SectionName;
	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCCharacterMotionDataTable.Import
// (Final, Native, Public, BlueprintCallable)

void URCCharacterMotionDataTable::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterMotionDataTable", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterMotionListDataAsset.Reimport
// (Final, Native, Public)

void URCCharacterMotionListDataAsset::Reimport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCharacterMotionListDataAsset", "Reimport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSelectText3DActorBFL.GetSelectText3DActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCSelectText3DActor*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCSelectText3DActor* URCSelectText3DActorBFL::GetSelectText3DActor(class FName InActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSelectText3DActorBFL", "GetSelectText3DActor");

	Params::RCSelectText3DActorBFL_GetSelectText3DActor Parms{};

	Parms.InActorName = InActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSelectText3DActorBFL.SetTextColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InTextColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSelectText3DActorBFL::SetTextColor(class FName InActorName, const struct FLinearColor& InTextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSelectText3DActorBFL", "SetTextColor");

	Params::RCSelectText3DActorBFL_SetTextColor Parms{};

	Parms.InActorName = InActorName;
	Parms.InTextColor = std::move(InTextColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamFaceEffectAnimListData.Import
// (Native, Public, BlueprintCallable)

void URCParamFaceEffectAnimListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamFaceEffectAnimListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleCutin.GetBattleCutinStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleCutinStatus                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleCutinStatus URCNzUiBattleCutin::GetBattleCutinStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleCutin", "GetBattleCutinStatus");

	Params::RCNzUiBattleCutin_GetBattleCutinStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleCutin.InitializeBattleCutin
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  InAssistImagePath                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleCutin::InitializeBattleCutin(const struct FSoftObjectPath& InAssistImagePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleCutin", "InitializeBattleCutin");

	Params::RCNzUiBattleCutin_InitializeBattleCutin Parms{};

	Parms.InAssistImagePath = std::move(InAssistImagePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleCutin.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleCutinType                  InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleCutin::Open(ERCNzUiBattleCutinType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleCutin", "Open");

	Params::RCNzUiBattleCutin_Open Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleCutin.UninitializeBattleCutin
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleCutin::UninitializeBattleCutin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleCutin", "UninitializeBattleCutin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ApplyCharacterMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMaterialId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ApplyCharacterMaterial(const class FName InMaterialId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ApplyCharacterMaterial");

	Params::RCCharacterProxyBFL_ApplyCharacterMaterial Parms{};

	Parms.InMaterialId = InMaterialId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ApplyColorPalette
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorPaletteId                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFaceColorPaletteId                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSoliderNumberId                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEyeId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSkinId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ApplyColorPalette(class AActor* InActor, const class FName InColorPaletteId, const class FName InFaceColorPaletteId, const class FName InSoliderNumberId, const class FName InEyeId, const class FName InSkinId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ApplyColorPalette");

	Params::RCCharacterProxyBFL_ApplyColorPalette Parms{};

	Parms.InActor = InActor;
	Parms.InColorPaletteId = InColorPaletteId;
	Parms.InFaceColorPaletteId = InFaceColorPaletteId;
	Parms.InSoliderNumberId = InSoliderNumberId;
	Parms.InEyeId = InEyeId;
	Parms.InSkinId = InSkinId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ApplyEventEmissive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InCharacterName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEventEmissiveValue                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ApplyEventEmissive(const class FName InCharacterName, const float InEventEmissiveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ApplyEventEmissive");

	Params::RCCharacterProxyBFL_ApplyEventEmissive Parms{};

	Parms.InCharacterName = InCharacterName;
	Parms.InEventEmissiveValue = InEventEmissiveValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ApplyEventHairSpecular
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InCharacterName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEventHairSpecularX                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEventHairSpecularY                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEventHairSpecularZ                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ApplyEventHairSpecular(const class FName InCharacterName, const float InEventHairSpecularX, const float InEventHairSpecularY, const float InEventHairSpecularZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ApplyEventHairSpecular");

	Params::RCCharacterProxyBFL_ApplyEventHairSpecular Parms{};

	Parms.InCharacterName = InCharacterName;
	Parms.InEventHairSpecularX = InEventHairSpecularX;
	Parms.InEventHairSpecularY = InEventHairSpecularY;
	Parms.InEventHairSpecularZ = InEventHairSpecularZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToEye
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToEye(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToEye");

	Params::RCCharacterProxyBFL_AttachActorToEye Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToHead
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToHead(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToHead");

	Params::RCCharacterProxyBFL_AttachActorToHead Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToLeftHand
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToLeftHand(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToLeftHand");

	Params::RCCharacterProxyBFL_AttachActorToLeftHand Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToMouth
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToMouth(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToMouth");

	Params::RCCharacterProxyBFL_AttachActorToMouth Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToOverhead
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToOverhead(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToOverhead");

	Params::RCCharacterProxyBFL_AttachActorToOverhead Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToPelvis
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToPelvis(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToPelvis");

	Params::RCCharacterProxyBFL_AttachActorToPelvis Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToRightHand
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToRightHand(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToRightHand");

	Params::RCCharacterProxyBFL_AttachActorToRightHand Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToSpine
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToSpine(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToSpine");

	Params::RCCharacterProxyBFL_AttachActorToSpine Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToUlity01
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToUlity01(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToUlity01");

	Params::RCCharacterProxyBFL_AttachActorToUlity01 Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToUlity02
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToUlity02(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToUlity02");

	Params::RCCharacterProxyBFL_AttachActorToUlity02 Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToUlity03
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToUlity03(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToUlity03");

	Params::RCCharacterProxyBFL_AttachActorToUlity03 Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToUlity04
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToUlity04(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToUlity04");

	Params::RCCharacterProxyBFL_AttachActorToUlity04 Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.AttachActorToUlity05
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAttachment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InColorParretId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::AttachActorToUlity05(class AActor* InActor, class AActor* InAttachment, const class FName InColorParretId, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "AttachActorToUlity05");

	Params::RCCharacterProxyBFL_AttachActorToUlity05 Parms{};

	Parms.InActor = InActor;
	Parms.InAttachment = InAttachment;
	Parms.InColorParretId = InColorParretId;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.BackupMovePosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::BackupMovePosition(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "BackupMovePosition");

	Params::RCCharacterProxyBFL_BackupMovePosition Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.BackupMovePositionByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::BackupMovePositionByCharacterName(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "BackupMovePositionByCharacterName");

	Params::RCCharacterProxyBFL_BackupMovePositionByCharacterName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.Blink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::Blink(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "Blink");

	Params::RCCharacterProxyBFL_Blink Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ChangeAttachmentAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachPlaceType                        InPlaceType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCAttachAnimType                       InAnimationType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ChangeAttachmentAnimation(class AActor* InActor, const EAttachPlaceType InPlaceType, const ERCAttachAnimType InAnimationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ChangeAttachmentAnimation");

	Params::RCCharacterProxyBFL_ChangeAttachmentAnimation Parms{};

	Parms.InActor = InActor;
	Parms.InPlaceType = InPlaceType;
	Parms.InAnimationType = InAnimationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ChangeColorPatternOnEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InCharacterName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventFacialColorName                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFadeTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ChangeColorPatternOnEvent(const class FName InCharacterName, const class FName InEventFacialColorName, float InFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ChangeColorPatternOnEvent");

	Params::RCCharacterProxyBFL_ChangeColorPatternOnEvent Parms{};

	Parms.InCharacterName = InCharacterName;
	Parms.InEventFacialColorName = InEventFacialColorName;
	Parms.InFadeTime = InFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ChangeColorPatternOnEventForActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventFacialColorName                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFadeTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ChangeColorPatternOnEventForActor(class AActor* InActor, const class FName InEventFacialColorName, float InFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ChangeColorPatternOnEventForActor");

	Params::RCCharacterProxyBFL_ChangeColorPatternOnEventForActor Parms{};

	Parms.InActor = InActor;
	Parms.InEventFacialColorName = InEventFacialColorName;
	Parms.InFadeTime = InFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ChangeDecalParentSocket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ChangeDecalParentSocket(class AActor* InActor, const class FName InSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ChangeDecalParentSocket");

	Params::RCCharacterProxyBFL_ChangeDecalParentSocket Parms{};

	Parms.InActor = InActor;
	Parms.InSocketName = InSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ChangeFacial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFacialName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowFlowLiquid                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ChangeFacial(class AActor* InActor, const class FName InFacialName, bool bAllowFlowLiquid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ChangeFacial");

	Params::RCCharacterProxyBFL_ChangeFacial Parms{};

	Parms.InActor = InActor;
	Parms.InFacialName = InFacialName;
	Parms.bAllowFlowLiquid = bAllowFlowLiquid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ChangeRimLight
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InOutlineColor                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOutlineCoverageValue                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOutlineSmoothValue                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRimLightDurationSec                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ChangeRimLight(class AActor* InActor, const struct FLinearColor& InOutlineColor, const float InOutlineCoverageValue, const float InOutlineSmoothValue, const float InRimLightDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ChangeRimLight");

	Params::RCCharacterProxyBFL_ChangeRimLight Parms{};

	Parms.InActor = InActor;
	Parms.InOutlineColor = std::move(InOutlineColor);
	Parms.InOutlineCoverageValue = InOutlineCoverageValue;
	Parms.InOutlineSmoothValue = InOutlineSmoothValue;
	Parms.InRimLightDurationSec = InRimLightDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.DetachAttachment
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachPlaceType                        InPlaceType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPutPos                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::DetachAttachment(class AActor* InActor, const EAttachPlaceType InPlaceType, const struct FVector& InPutPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "DetachAttachment");

	Params::RCCharacterProxyBFL_DetachAttachment Parms{};

	Parms.InActor = InActor;
	Parms.InPlaceType = InPlaceType;
	Parms.InPutPos = std::move(InPutPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.EventFinishedOutMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendSec                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::EventFinishedOutMotion(class AActor* InActor, const float InBlendSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "EventFinishedOutMotion");

	Params::RCCharacterProxyBFL_EventFinishedOutMotion Parms{};

	Parms.InActor = InActor;
	Parms.InBlendSec = InBlendSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ExecuteHoldingHand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTaegetActor                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ExecuteHoldingHand(class AActor* InActor, const class AActor* InTaegetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ExecuteHoldingHand");

	Params::RCCharacterProxyBFL_ExecuteHoldingHand Parms{};

	Parms.InActor = InActor;
	Parms.InTaegetActor = InTaegetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.GetActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCCharacterProxyBFL::GetActor(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "GetActor");

	Params::RCCharacterProxyBFL_GetActor Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.GetActorContainKakiwari
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCCharacterProxyBFL::GetActorContainKakiwari(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "GetActorContainKakiwari");

	Params::RCCharacterProxyBFL_GetActorContainKakiwari Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.GetCharacterAttatchmentFormId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCCharacterProxyBFL::GetCharacterAttatchmentFormId(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "GetCharacterAttatchmentFormId");

	Params::RCCharacterProxyBFL_GetCharacterAttatchmentFormId Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.GetFacial2DMotionNameList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InFacial2DId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     OutMotionNameList                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::GetFacial2DMotionNameList(const class FName InFacial2DId, TArray<class FName>* OutMotionNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "GetFacial2DMotionNameList");

	Params::RCCharacterProxyBFL_GetFacial2DMotionNameList Parms{};

	Parms.InFacial2DId = InFacial2DId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMotionNameList != nullptr)
		*OutMotionNameList = std::move(Parms.OutMotionNameList);

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.GetFinishChangeRimLight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::GetFinishChangeRimLight(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "GetFinishChangeRimLight");

	Params::RCCharacterProxyBFL_GetFinishChangeRimLight Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.GetShinigamiActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCCharacterProxyBFL::GetShinigamiActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "GetShinigamiActor");

	Params::RCCharacterProxyBFL_GetShinigamiActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.InitShinigamiPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   InLength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::InitShinigamiPosition(float InLength, float InHeight, float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "InitShinigamiPosition");

	Params::RCCharacterProxyBFL_InitShinigamiPosition Parms{};

	Parms.InLength = InLength;
	Parms.InHeight = InHeight;
	Parms.InAngle = InAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.IsAllLoadComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsAllLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsAllLoadComplete");

	Params::RCCharacterProxyBFL_IsAllLoadComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.IsAllMoveEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsAllMoveEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsAllMoveEnd");

	Params::RCCharacterProxyBFL_IsAllMoveEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.IsExistOutCurrentMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsExistOutCurrentMotion(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsExistOutCurrentMotion");

	Params::RCCharacterProxyBFL_IsExistOutCurrentMotion Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.IsFinishedMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsFinishedMotion(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsFinishedMotion");

	Params::RCCharacterProxyBFL_IsFinishedMotion Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.IsLoadActorComplete
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InCheckCharacterNameArray                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsLoadActorComplete(const TArray<class FName>& InCheckCharacterNameArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsLoadActorComplete");

	Params::RCCharacterProxyBFL_IsLoadActorComplete Parms{};

	Parms.InCheckCharacterNameArray = std::move(InCheckCharacterNameArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.IsLoadComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsLoadComplete(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsLoadComplete");

	Params::RCCharacterProxyBFL_IsLoadComplete Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.IsMotionBlend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsMotionBlend(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsMotionBlend");

	Params::RCCharacterProxyBFL_IsMotionBlend Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.IsMoveEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsMoveEnd(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsMoveEnd");

	Params::RCCharacterProxyBFL_IsMoveEnd Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.IsMoveMobDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::IsMoveMobDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "IsMoveMobDraw");

	Params::RCCharacterProxyBFL_IsMoveMobDraw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.PlayLipsyncBasedOnLines
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLineCharacters                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLineDisplaySec                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLineIntervalAjust                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::PlayLipsyncBasedOnLines(class AActor* InActor, float InLineCharacters, const float InLineDisplaySec, const float InLineIntervalAjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "PlayLipsyncBasedOnLines");

	Params::RCCharacterProxyBFL_PlayLipsyncBasedOnLines Parms{};

	Parms.InActor = InActor;
	Parms.InLineCharacters = InLineCharacters;
	Parms.InLineDisplaySec = InLineDisplaySec;
	Parms.InLineIntervalAjust = InLineIntervalAjust;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.PlayLipsyncMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::PlayLipsyncMotion(class AActor* InActor, const class FName InMotionName, bool bLoop, const float InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "PlayLipsyncMotion");

	Params::RCCharacterProxyBFL_PlayLipsyncMotion Parms{};

	Parms.InActor = InActor;
	Parms.InMotionName = InMotionName;
	Parms.bLoop = bLoop;
	Parms.InPlayRate = InPlayRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.Release
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::Release(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "Release");

	Params::RCCharacterProxyBFL_Release Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ReserveAppearance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBodyColorPaletteId                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFaceColorPaletteId                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSoliderNumberId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEyeId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSkinId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ReserveAppearance(const class FName InName, class FName InBodyColorPaletteId, class FName InFaceColorPaletteId, class FName InSoliderNumberId, class FName InEyeId, class FName InSkinId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ReserveAppearance");

	Params::RCCharacterProxyBFL_ReserveAppearance Parms{};

	Parms.InName = InName;
	Parms.InBodyColorPaletteId = InBodyColorPaletteId;
	Parms.InFaceColorPaletteId = InFaceColorPaletteId;
	Parms.InSoliderNumberId = InSoliderNumberId;
	Parms.InEyeId = InEyeId;
	Parms.InSkinId = InSkinId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ReservePlayMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStartLoopMotion                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ReservePlayMotion(const class FName InName, const class FName InMotionName, bool bStartLoopMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ReservePlayMotion");

	Params::RCCharacterProxyBFL_ReservePlayMotion Parms{};

	Parms.InName = InName;
	Parms.InMotionName = InMotionName;
	Parms.bStartLoopMotion = bStartLoopMotion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ResetCameraAlphaLength
// (Final, Native, Static, Public, BlueprintCallable)

void URCCharacterProxyBFL::ResetCameraAlphaLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ResetCameraAlphaLength");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ResetEventMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ResetEventMotion(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ResetEventMotion");

	Params::RCCharacterProxyBFL_ResetEventMotion Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ResetMove
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ResetMove(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ResetMove");

	Params::RCCharacterProxyBFL_ResetMove Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.ResetMoveByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::ResetMoveByCharacterName(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "ResetMoveByCharacterName");

	Params::RCCharacterProxyBFL_ResetMoveByCharacterName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.RestoreMoveList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::RestoreMoveList(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "RestoreMoveList");

	Params::RCCharacterProxyBFL_RestoreMoveList Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.RestoreMoveListByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::RestoreMoveListByCharacterName(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "RestoreMoveListByCharacterName");

	Params::RCCharacterProxyBFL_RestoreMoveListByCharacterName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.RestoreMovePosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::RestoreMovePosition(class AActor* InActor, float SpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "RestoreMovePosition");

	Params::RCCharacterProxyBFL_RestoreMovePosition Parms{};

	Parms.InActor = InActor;
	Parms.SpeedScale = SpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.RestoreMovePositionByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::RestoreMovePositionByCharacterName(class FName InName, float SpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "RestoreMovePositionByCharacterName");

	Params::RCCharacterProxyBFL_RestoreMovePositionByCharacterName Parms{};

	Parms.InName = InName;
	Parms.SpeedScale = SpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.RestoreRotationYaw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::RestoreRotationYaw(class AActor* InActor, float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "RestoreRotationYaw");

	Params::RCCharacterProxyBFL_RestoreRotationYaw Parms{};

	Parms.InActor = InActor;
	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.RestoreRotationYawByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::RestoreRotationYawByCharacterName(class FName InName, float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "RestoreRotationYawByCharacterName");

	Params::RCCharacterProxyBFL_RestoreRotationYawByCharacterName Parms{};

	Parms.InName = InName;
	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetAllNoDelayLookProcessFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetAllNoDelayLookProcessFlag(bool bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetAllNoDelayLookProcessFlag");

	Params::RCCharacterProxyBFL_SetAllNoDelayLookProcessFlag Parms{};

	Parms.bState = bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetAllPause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bPauseFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetAllPause(bool bPauseFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetAllPause");

	Params::RCCharacterProxyBFL_SetAllPause Parms{};

	Parms.bPauseFlag = bPauseFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetAllVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetAllVisibility(bool bVisibleFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetAllVisibility");

	Params::RCCharacterProxyBFL_SetAllVisibility Parms{};

	Parms.bVisibleFlag = bVisibleFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetAutoOutlineWidth
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAuto                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetAutoOutlineWidth(class AActor* InActor, bool bAuto)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetAutoOutlineWidth");

	Params::RCCharacterProxyBFL_SetAutoOutlineWidth Parms{};

	Parms.InActor = InActor;
	Parms.bAuto = bAuto;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetCameraAlphaLengh
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InLengthMin                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLengthMax                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetCameraAlphaLengh(int32 InLengthMin, int32 InLengthMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetCameraAlphaLengh");

	Params::RCCharacterProxyBFL_SetCameraAlphaLengh Parms{};

	Parms.InLengthMin = InLengthMin;
	Parms.InLengthMax = InLengthMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetCameraFadeEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetCameraFadeEnable(class AActor* InActor, bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetCameraFadeEnable");

	Params::RCCharacterProxyBFL_SetCameraFadeEnable Parms{};

	Parms.InActor = InActor;
	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetCanBlink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetCanBlink(class AActor* InActor, bool bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetCanBlink");

	Params::RCCharacterProxyBFL_SetCanBlink Parms{};

	Parms.InActor = InActor;
	Parms.bState = bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetCenterActorType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCCharacterProxyCenterActorType        InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetCenterActorType(ERCCharacterProxyCenterActorType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetCenterActorType");

	Params::RCCharacterProxyBFL_SetCenterActorType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetCharacterAttatchmentFormId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCharacterAttatchmentFormId                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetCharacterAttatchmentFormId(class FName InName, class FName InCharacterAttatchmentFormId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetCharacterAttatchmentFormId");

	Params::RCCharacterProxyBFL_SetCharacterAttatchmentFormId Parms{};

	Parms.InName = InName;
	Parms.InCharacterAttatchmentFormId = InCharacterAttatchmentFormId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetDefaultLookSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetDefaultLookSetting(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetDefaultLookSetting");

	Params::RCCharacterProxyBFL_SetDefaultLookSetting Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetExtraIdle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetExtraIdle(class AActor* InActor, bool bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetExtraIdle");

	Params::RCCharacterProxyBFL_SetExtraIdle Parms{};

	Parms.InActor = InActor;
	Parms.bState = bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetLookAtActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InLookAtTargetActor                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLookAtTargetBoneName                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetLookAtActor(class AActor* InActor, const class AActor* InLookAtTargetActor, const class FName InLookAtTargetBoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetLookAtActor");

	Params::RCCharacterProxyBFL_SetLookAtActor Parms{};

	Parms.InActor = InActor;
	Parms.InLookAtTargetActor = InLookAtTargetActor;
	Parms.InLookAtTargetBoneName = InLookAtTargetBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetLookAtCharacterFace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InLookAtTargetActor                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetLookAtCharacterFace(class AActor* InActor, const class AActor* InLookAtTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetLookAtCharacterFace");

	Params::RCCharacterProxyBFL_SetLookAtCharacterFace Parms{};

	Parms.InActor = InActor;
	Parms.InLookAtTargetActor = InLookAtTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetLookAtPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLookAtTargetPos                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetLookAtPosition(class AActor* InActor, const struct FVector& InLookAtTargetPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetLookAtPosition");

	Params::RCCharacterProxyBFL_SetLookAtPosition Parms{};

	Parms.InActor = InActor;
	Parms.InLookAtTargetPos = std::move(InLookAtTargetPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetMoveMobDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetMoveMobDraw(bool bInDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetMoveMobDraw");

	Params::RCCharacterProxyBFL_SetMoveMobDraw Parms{};

	Parms.bInDraw = bInDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetMovePause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInMovePause                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetMovePause(class AActor* InActor, bool bInMovePause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetMovePause");

	Params::RCCharacterProxyBFL_SetMovePause Parms{};

	Parms.InActor = InActor;
	Parms.bInMovePause = bInMovePause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetMovNearPlayerHide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetMovNearPlayerHide(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetMovNearPlayerHide");

	Params::RCCharacterProxyBFL_SetMovNearPlayerHide Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetNewAnimBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           InNewAnimClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetNewAnimBP(class AActor* InActor, class UClass* InNewAnimClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetNewAnimBP");

	Params::RCCharacterProxyBFL_SetNewAnimBP Parms{};

	Parms.InActor = InActor;
	Parms.InNewAnimClass = InNewAnimClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetNoDelayLookProcessFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetNoDelayLookProcessFlag(class AActor* InActor, bool bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetNoDelayLookProcessFlag");

	Params::RCCharacterProxyBFL_SetNoDelayLookProcessFlag Parms{};

	Parms.InActor = InActor;
	Parms.bState = bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetOrientRotationtoMovementFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetOrientRotationtoMovementFlag(class AActor* InActor, bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetOrientRotationtoMovementFlag");

	Params::RCCharacterProxyBFL_SetOrientRotationtoMovementFlag Parms{};

	Parms.InActor = InActor;
	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetOutlineWidth
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWidth                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetOutlineWidth(class AActor* InActor, const float InWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetOutlineWidth");

	Params::RCCharacterProxyBFL_SetOutlineWidth Parms{};

	Parms.InActor = InActor;
	Parms.InWidth = InWidth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetPause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPauseFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetPause(class AActor* InActor, bool bPauseFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetPause");

	Params::RCCharacterProxyBFL_SetPause Parms{};

	Parms.InActor = InActor;
	Parms.bPauseFlag = bPauseFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetPauseByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPauseFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetPauseByCharacterName(class FName InName, bool bPauseFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetPauseByCharacterName");

	Params::RCCharacterProxyBFL_SetPauseByCharacterName Parms{};

	Parms.InName = InName;
	Parms.bPauseFlag = bPauseFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetPositionYaw
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetPositionYaw(class AActor* InActor, const struct FVector& InPosition, float InYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetPositionYaw");

	Params::RCCharacterProxyBFL_SetPositionYaw Parms{};

	Parms.InActor = InActor;
	Parms.InPosition = std::move(InPosition);
	Parms.InYaw = InYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetPositionYawByCharacterName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetPositionYawByCharacterName(class FName InName, const struct FVector& InPosition, float InYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetPositionYawByCharacterName");

	Params::RCCharacterProxyBFL_SetPositionYawByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InPosition = std::move(InPosition);
	Parms.InYaw = InYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetSpecialSelectLookSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEyeMoveSpeed                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEyeTranslateNearMax                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEyeTranslateFarMax                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEyeTranslateUpMax                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEyeTranslateDownMax                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetSpecialSelectLookSetting(class AActor* InActor, const float InEyeMoveSpeed, const float InEyeTranslateNearMax, const float InEyeTranslateFarMax, const float InEyeTranslateUpMax, const float InEyeTranslateDownMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetSpecialSelectLookSetting");

	Params::RCCharacterProxyBFL_SetSpecialSelectLookSetting Parms{};

	Parms.InActor = InActor;
	Parms.InEyeMoveSpeed = InEyeMoveSpeed;
	Parms.InEyeTranslateNearMax = InEyeTranslateNearMax;
	Parms.InEyeTranslateFarMax = InEyeTranslateFarMax;
	Parms.InEyeTranslateUpMax = InEyeTranslateUpMax;
	Parms.InEyeTranslateDownMax = InEyeTranslateDownMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetTalkInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInTalk                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InBalloonFrameType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InBalloonType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSelifTextId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetTalkInfo(class AActor* InActor, bool bInTalk, int32 InBalloonFrameType, int32 InBalloonType, class FName InSelifTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetTalkInfo");

	Params::RCCharacterProxyBFL_SetTalkInfo Parms{};

	Parms.InActor = InActor;
	Parms.bInTalk = bInTalk;
	Parms.InBalloonFrameType = InBalloonFrameType;
	Parms.InBalloonType = InBalloonType;
	Parms.InSelifTextId = InSelifTextId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetTalkInfoByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInTalk                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InBalloonFrameType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InBalloonType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSelifTextId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetTalkInfoByCharacterName(class FName InName, bool bInTalk, int32 InBalloonFrameType, int32 InBalloonType, class FName InSelifTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetTalkInfoByCharacterName");

	Params::RCCharacterProxyBFL_SetTalkInfoByCharacterName Parms{};

	Parms.InName = InName;
	Parms.bInTalk = bInTalk;
	Parms.InBalloonFrameType = InBalloonFrameType;
	Parms.InBalloonType = InBalloonType;
	Parms.InSelifTextId = InSelifTextId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetTalkSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTalkLength                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSelifLength                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBalloonLength                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBalloonHeightOffset                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBalloonAngleOffset                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBalloonLengthOffset                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetTalkSetting(class AActor* InActor, float InTalkLength, float InSelifLength, float InBalloonLength, float InBalloonHeightOffset, float InBalloonAngleOffset, float InBalloonLengthOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetTalkSetting");

	Params::RCCharacterProxyBFL_SetTalkSetting Parms{};

	Parms.InActor = InActor;
	Parms.InTalkLength = InTalkLength;
	Parms.InSelifLength = InSelifLength;
	Parms.InBalloonLength = InBalloonLength;
	Parms.InBalloonHeightOffset = InBalloonHeightOffset;
	Parms.InBalloonAngleOffset = InBalloonAngleOffset;
	Parms.InBalloonLengthOffset = InBalloonLengthOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetTalkSettingByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTalkLength                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSelifLength                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBalloonLength                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBalloonHeightOffset                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBalloonAngleOffset                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBalloonLengthOffset                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetTalkSettingByCharacterName(class FName InName, float InTalkLength, float InSelifLength, float InBalloonLength, float InBalloonHeightOffset, float InBalloonAngleOffset, float InBalloonLengthOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetTalkSettingByCharacterName");

	Params::RCCharacterProxyBFL_SetTalkSettingByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InTalkLength = InTalkLength;
	Parms.InSelifLength = InSelifLength;
	Parms.InBalloonLength = InBalloonLength;
	Parms.InBalloonHeightOffset = InBalloonHeightOffset;
	Parms.InBalloonAngleOffset = InBalloonAngleOffset;
	Parms.InBalloonLengthOffset = InBalloonLengthOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetTransformPlayerStartName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerStartTagName                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetTransformPlayerStartName(class AActor* InActor, class FName InPlayerStartTagName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetTransformPlayerStartName");

	Params::RCCharacterProxyBFL_SetTransformPlayerStartName Parms{};

	Parms.InActor = InActor;
	Parms.InPlayerStartTagName = InPlayerStartTagName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetTransformPlayerStartNameByCharacterName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerStartTagName                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetTransformPlayerStartNameByCharacterName(class FName InName, class FName InPlayerStartTagName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetTransformPlayerStartNameByCharacterName");

	Params::RCCharacterProxyBFL_SetTransformPlayerStartNameByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InPlayerStartTagName = InPlayerStartTagName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetTransformTargetPointName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetTransformTargetPointName(class AActor* InActor, class FName InPointName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetTransformTargetPointName");

	Params::RCCharacterProxyBFL_SetTransformTargetPointName Parms{};

	Parms.InActor = InActor;
	Parms.InPointName = InPointName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetTransformTargetPointNameByCharacterName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetTransformTargetPointNameByCharacterName(class FName InName, class FName InPointName, const struct FVector& InOffsetPos, float InOffsetYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetTransformTargetPointNameByCharacterName");

	Params::RCCharacterProxyBFL_SetTransformTargetPointNameByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InPointName = InPointName;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetupAllBgCharacterMaterial
// (Final, Native, Static, Public, BlueprintCallable)

void URCCharacterProxyBFL::SetupAllBgCharacterMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetupAllBgCharacterMaterial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetViewParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCanViewDistance                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCanViewAngle                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetViewParam(class AActor* InActor, const float InCanViewDistance, const float InCanViewAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetViewParam");

	Params::RCCharacterProxyBFL_SetViewParam Parms{};

	Parms.InActor = InActor;
	Parms.InCanViewDistance = InCanViewDistance;
	Parms.InCanViewAngle = InCanViewAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCollision                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetVisibility(class AActor* InActor, bool bVisibleFlag, bool bIsCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetVisibility");

	Params::RCCharacterProxyBFL_SetVisibility Parms{};

	Parms.InActor = InActor;
	Parms.bVisibleFlag = bVisibleFlag;
	Parms.bIsCollision = bIsCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetVisibilityByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetVisibilityByCharacterName(class FName InName, bool bVisibleFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetVisibilityByCharacterName");

	Params::RCCharacterProxyBFL_SetVisibilityByCharacterName Parms{};

	Parms.InName = InName;
	Parms.bVisibleFlag = bVisibleFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SetVisibilityContainKakiwari
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCollision                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SetVisibilityContainKakiwari(class AActor* InActor, bool bVisibleFlag, bool bIsCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SetVisibilityContainKakiwari");

	Params::RCCharacterProxyBFL_SetVisibilityContainKakiwari Parms{};

	Parms.InActor = InActor;
	Parms.bVisibleFlag = bVisibleFlag;
	Parms.bIsCollision = bIsCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartCharcterSettingLoad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSettingFilename                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::StartCharcterSettingLoad(class FName InSettingFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartCharcterSettingLoad");

	Params::RCCharacterProxyBFL_StartCharcterSettingLoad Parms{};

	Parms.InSettingFilename = InSettingFilename;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.StartLoad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFilename                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bScriptLoad                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::StartLoad(class FName InName, class FName InFilename, bool bVisibleFlag, bool bScriptLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartLoad");

	Params::RCCharacterProxyBFL_StartLoad Parms{};

	Parms.InName = InName;
	Parms.InFilename = InFilename;
	Parms.bVisibleFlag = bVisibleFlag;
	Parms.bScriptLoad = bScriptLoad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.StartLoadAutoName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             OutName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFilename                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bScriptLoad                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::StartLoadAutoName(class FName* OutName, class FName InFilename, bool bVisibleFlag, bool bScriptLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartLoadAutoName");

	Params::RCCharacterProxyBFL_StartLoadAutoName Parms{};

	Parms.InFilename = InFilename;
	Parms.bVisibleFlag = bVisibleFlag;
	Parms.bScriptLoad = bScriptLoad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutName != nullptr)
		*OutName = Parms.OutName;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.StartLoadModelList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCCharacterModel                       CharacterModel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerStartName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bScriptLoad                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::StartLoadModelList(class FName InName, ESCCharacterModel CharacterModel, class FName InPlayerStartName, class FName InMotionName, bool bVisibleFlag, bool bScriptLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartLoadModelList");

	Params::RCCharacterProxyBFL_StartLoadModelList Parms{};

	Parms.InName = InName;
	Parms.CharacterModel = CharacterModel;
	Parms.InPlayerStartName = InPlayerStartName;
	Parms.InMotionName = InMotionName;
	Parms.bVisibleFlag = bVisibleFlag;
	Parms.bScriptLoad = bScriptLoad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.StartLoadModelListAutoName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             OutName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCCharacterModel                       CharacterModel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerStartName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisibleFlag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bScriptLoad                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterProxyBFL::StartLoadModelListAutoName(class FName* OutName, ESCCharacterModel CharacterModel, class FName InPlayerStartName, class FName InMotionName, bool bVisibleFlag, bool bScriptLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartLoadModelListAutoName");

	Params::RCCharacterProxyBFL_StartLoadModelListAutoName Parms{};

	Parms.CharacterModel = CharacterModel;
	Parms.InPlayerStartName = InPlayerStartName;
	Parms.InMotionName = InMotionName;
	Parms.bVisibleFlag = bVisibleFlag;
	Parms.bScriptLoad = bScriptLoad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutName != nullptr)
		*OutName = Parms.OutName;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterProxyBFL.StartMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMotion(class FName InName, class FName InMotionName, bool bLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMotion");

	Params::RCCharacterProxyBFL_StartMotion Parms{};

	Parms.InName = InName;
	Parms.InMotionName = InMotionName;
	Parms.bLoop = bLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMotionActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSwitchDurationSec                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStartLoopMotion                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMotionActor(class AActor* InActor, class FName InMotionName, const float InPlayRate, bool bLoop, float InSwitchDurationSec, bool bStartLoopMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMotionActor");

	Params::RCCharacterProxyBFL_StartMotionActor Parms{};

	Parms.InActor = InActor;
	Parms.InMotionName = InMotionName;
	Parms.InPlayRate = InPlayRate;
	Parms.bLoop = bLoop;
	Parms.InSwitchDurationSec = InSwitchDurationSec;
	Parms.bStartLoopMotion = bStartLoopMotion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndPlayerYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TurnSpeedScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromPlayer(class AActor* InActor, float InLength, float InAngle, float InHeight, float SpeedScale, bool bEndPlayerYaw, float TurnSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromPlayer");

	Params::RCCharacterProxyBFL_StartMoveFromPlayer Parms{};

	Parms.InActor = InActor;
	Parms.InLength = InLength;
	Parms.InAngle = InAngle;
	Parms.InHeight = InHeight;
	Parms.SpeedScale = SpeedScale;
	Parms.bEndPlayerYaw = bEndPlayerYaw;
	Parms.TurnSpeedScale = TurnSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromPlayerByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndPlayerYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromPlayerByCharacterName(class FName InName, float InLength, float InAngle, float InHeight, float SpeedScale, bool bEndPlayerYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromPlayerByCharacterName");

	Params::RCCharacterProxyBFL_StartMoveFromPlayerByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InLength = InLength;
	Parms.InAngle = InAngle;
	Parms.InHeight = InHeight;
	Parms.SpeedScale = SpeedScale;
	Parms.bEndPlayerYaw = bEndPlayerYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndChangeYawPosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TurnSpeedScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromPosition(class AActor* InActor, const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bEndChangeYaw, const struct FVector& EndChangeYawPosition, bool bPlayerCheck, float TurnSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromPosition");

	Params::RCCharacterProxyBFL_StartMoveFromPosition Parms{};

	Parms.InActor = InActor;
	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.EndChangeYawPosition = std::move(EndChangeYawPosition);
	Parms.bPlayerCheck = bPlayerCheck;
	Parms.TurnSpeedScale = TurnSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromPositionByCharacterName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndChangeYawPosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromPositionByCharacterName(class FName InName, const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bEndChangeYaw, const struct FVector& EndChangeYawPosition, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromPositionByCharacterName");

	Params::RCCharacterProxyBFL_StartMoveFromPositionByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.EndChangeYawPosition = std::move(EndChangeYawPosition);
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromPositionList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRCScriptActorMoveInfo>   InMoveInfoList                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   StartMoveInfoNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromPositionList(class AActor* InActor, const TArray<struct FRCScriptActorMoveInfo>& InMoveInfoList, int32 StartMoveInfoNum, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromPositionList");

	Params::RCCharacterProxyBFL_StartMoveFromPositionList Parms{};

	Parms.InActor = InActor;
	Parms.InMoveInfoList = std::move(InMoveInfoList);
	Parms.StartMoveInfoNum = StartMoveInfoNum;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromPositionListByCharacterName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRCScriptActorMoveInfo>   InMoveInfoList                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   StartMoveInfoNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromPositionListByCharacterName(class FName InName, TArray<struct FRCScriptActorMoveInfo>* InMoveInfoList, int32 StartMoveInfoNum, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromPositionListByCharacterName");

	Params::RCCharacterProxyBFL_StartMoveFromPositionListByCharacterName Parms{};

	Parms.InName = InName;
	Parms.StartMoveInfoNum = StartMoveInfoNum;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InMoveInfoList != nullptr)
		*InMoveInfoList = std::move(Parms.InMoveInfoList);
}


// Function RC.RCCharacterProxyBFL.StartMoveFromSplineName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSplineName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDistanceRange                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromSplineName(class AActor* InActor, class FName InSplineName, float StartDistanceRange, bool bReverse, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromSplineName");

	Params::RCCharacterProxyBFL_StartMoveFromSplineName Parms{};

	Parms.InActor = InActor;
	Parms.InSplineName = InSplineName;
	Parms.StartDistanceRange = StartDistanceRange;
	Parms.bReverse = bReverse;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromSplineNameByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSplineName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDistanceRange                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstWarp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromSplineNameByCharacterName(class FName InName, class FName InSplineName, float StartDistanceRange, bool bReverse, bool bEndChangeYaw, float InOffsetYaw, bool bFirstWarp, bool bLoop, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromSplineNameByCharacterName");

	Params::RCCharacterProxyBFL_StartMoveFromSplineNameByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InSplineName = InSplineName;
	Parms.StartDistanceRange = StartDistanceRange;
	Parms.bReverse = bReverse;
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bFirstWarp = bFirstWarp;
	Parms.bLoop = bLoop;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromTargetPointName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InChangeYawSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TurnSpeedScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromTargetPointName(class AActor* InActor, class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, bool bEndChangeYaw, float InOffsetYaw, float InChangeYawSpeed, bool bPlayerCheck, float TurnSpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromTargetPointName");

	Params::RCCharacterProxyBFL_StartMoveFromTargetPointName Parms{};

	Parms.InActor = InActor;
	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.InChangeYawSpeed = InChangeYawSpeed;
	Parms.bPlayerCheck = bPlayerCheck;
	Parms.TurnSpeedScale = TurnSpeedScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartMoveFromTargetPointNameByCharacterName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndChangeYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartMoveFromTargetPointNameByCharacterName(class FName InName, class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, bool bEndChangeYaw, float InOffsetYaw, bool bPlayerCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartMoveFromTargetPointNameByCharacterName");

	Params::RCCharacterProxyBFL_StartMoveFromTargetPointNameByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.bEndChangeYaw = bEndChangeYaw;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bPlayerCheck = bPlayerCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationFromActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationFromActor(class AActor* InActor, class AActor* InTargetActor, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationFromActor");

	Params::RCCharacterProxyBFL_StartRotationFromActor Parms{};

	Parms.InActor = InActor;
	Parms.InTargetActor = InTargetActor;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationFromCharacter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationFromCharacter(class AActor* InActor, class AActor* InTargetActor, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationFromCharacter");

	Params::RCCharacterProxyBFL_StartRotationFromCharacter Parms{};

	Parms.InActor = InActor;
	Parms.InTargetActor = InTargetActor;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationFromCharacterByCharacterName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTargetCharacterName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationFromCharacterByCharacterName(class FName InName, class FName InTargetCharacterName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationFromCharacterByCharacterName");

	Params::RCCharacterProxyBFL_StartRotationFromCharacterByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InTargetCharacterName = InTargetCharacterName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationFromPlayer
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationFromPlayer(class AActor* InActor, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationFromPlayer");

	Params::RCCharacterProxyBFL_StartRotationFromPlayer Parms{};

	Parms.InActor = InActor;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationFromPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationFromPosition(class AActor* InActor, const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationFromPosition");

	Params::RCCharacterProxyBFL_StartRotationFromPosition Parms{};

	Parms.InActor = InActor;
	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationFromPositionByCharacterName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationFromPositionByCharacterName(class FName InName, const struct FVector& InPosition, float SpeedScale, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationFromPositionByCharacterName");

	Params::RCCharacterProxyBFL_StartRotationFromPositionByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InPosition = std::move(InPosition);
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationFromTargetPointName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationFromTargetPointName(class AActor* InActor, class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationFromTargetPointName");

	Params::RCCharacterProxyBFL_StartRotationFromTargetPointName Parms{};

	Parms.InActor = InActor;
	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationFromTargetPointNameByCharacterName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffsetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationFromTargetPointNameByCharacterName(class FName InName, class FName InPointName, float SpeedScale, const struct FVector& InOffsetPos, float InOffsetYaw, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationFromTargetPointNameByCharacterName");

	Params::RCCharacterProxyBFL_StartRotationFromTargetPointNameByCharacterName Parms{};

	Parms.InName = InName;
	Parms.InPointName = InPointName;
	Parms.SpeedScale = SpeedScale;
	Parms.InOffsetPos = std::move(InOffsetPos);
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationYaw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationYaw(class AActor* InActor, float Yaw, float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationYaw");

	Params::RCCharacterProxyBFL_StartRotationYaw Parms{};

	Parms.InActor = InActor;
	Parms.Yaw = Yaw;
	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StartRotationYawByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StartRotationYawByCharacterName(class FName InName, float Yaw, float SpeedScale, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StartRotationYawByCharacterName");

	Params::RCCharacterProxyBFL_StartRotationYawByCharacterName Parms{};

	Parms.InName = InName;
	Parms.Yaw = Yaw;
	Parms.SpeedScale = SpeedScale;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StopHoldingHand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTaegetActor                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StopHoldingHand(class AActor* InActor, const class AActor* InTaegetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StopHoldingHand");

	Params::RCCharacterProxyBFL_StopHoldingHand Parms{};

	Parms.InActor = InActor;
	Parms.InTaegetActor = InTaegetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StopLookAt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StopLookAt(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StopLookAt");

	Params::RCCharacterProxyBFL_StopLookAt Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StopMove
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StopMove(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StopMove");

	Params::RCCharacterProxyBFL_StopMove Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StopMoveByCharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StopMoveByCharacterName(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StopMoveByCharacterName");

	Params::RCCharacterProxyBFL_StopMoveByCharacterName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.StopWalkSpline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::StopWalkSpline(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "StopWalkSpline");

	Params::RCCharacterProxyBFL_StopWalkSpline Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.SwitchOutCurrentEventMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::SwitchOutCurrentEventMotion(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "SwitchOutCurrentEventMotion");

	Params::RCCharacterProxyBFL_SwitchOutCurrentEventMotion Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.UndoRimLight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRimLightDurationSec                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::UndoRimLight(class AActor* InActor, const float InRimLightDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "UndoRimLight");

	Params::RCCharacterProxyBFL_UndoRimLight Parms{};

	Parms.InActor = InActor;
	Parms.InRimLightDurationSec = InRimLightDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterProxyBFL.WalkSpline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InSplineActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTimeRate                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterProxyBFL::WalkSpline(class AActor* InActor, class AActor* InSplineActor, const float InTimeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterProxyBFL", "WalkSpline");

	Params::RCCharacterProxyBFL_WalkSpline Parms{};

	Parms.InActor = InActor;
	Parms.InSplineActor = InSplineActor;
	Parms.InTimeRate = InTimeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopParentActor.ReentryActors
// (Final, Native, Public)

void ARCNazoMoveLoopParentActor::ReentryActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMoveLoopParentActor", "ReentryActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleLogo.OnFinishedGenericWindow_ToTerminateGame
// (Final, Native, Private)
// Parameters:
// bool                                    res                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleLogo::OnFinishedGenericWindow_ToTerminateGame(bool res)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleLogo", "OnFinishedGenericWindow_ToTerminateGame");

	Params::RCTitleLogo_OnFinishedGenericWindow_ToTerminateGame Parms{};

	Parms.res = res;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamEventSubLevelData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventSubLevelData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventSubLevelData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterTurnBFL.AnimInstInitializeTurn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimInstance*         AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterTurnBFL::AnimInstInitializeTurn(class URCCharacterAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "AnimInstInitializeTurn");

	Params::RCCharacterTurnBFL_AnimInstInitializeTurn Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterTurnBFL.AnimInstTickTurn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCCharacterAnimInstance*         AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterTurnBFL::AnimInstTickTurn(float DeltaTime, class URCCharacterAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "AnimInstTickTurn");

	Params::RCCharacterTurnBFL_AnimInstTickTurn Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterTurnBFL.CheckLeaveTurn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bLeaveTurn                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCAnimInstTurnData              TurnData                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void URCCharacterTurnBFL::CheckLeaveTurn(bool* bLeaveTurn, const struct FRCAnimInstTurnData& TurnData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "CheckLeaveTurn");

	Params::RCCharacterTurnBFL_CheckLeaveTurn Parms{};

	Parms.TurnData = std::move(TurnData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bLeaveTurn != nullptr)
		*bLeaveTurn = Parms.bLeaveTurn;
}


// Function RC.RCCharacterTurnBFL.CheckTurning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCharacterTurnBFL::CheckTurning(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "CheckTurning");

	Params::RCCharacterTurnBFL_CheckTurning Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCharacterTurnBFL.EndTurn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimInstance*         AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterTurnBFL::EndTurn(class URCCharacterAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "EndTurn");

	Params::RCCharacterTurnBFL_EndTurn Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterTurnBFL.InitializeTurn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterScript*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterTurnBFL::InitializeTurn(class ARCCharacterScript* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "InitializeTurn");

	Params::RCCharacterTurnBFL_InitializeTurn Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterTurnBFL.SetTurnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimInstance*         AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTurnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterTurnBFL::SetTurnable(class URCCharacterAnimInstance* AnimInst, bool bTurnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "SetTurnable");

	Params::RCCharacterTurnBFL_SetTurnable Parms{};

	Parms.AnimInst = AnimInst;
	Parms.bTurnable = bTurnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterTurnBFL.StartTurnState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimInstance*         AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterTurnBFL::StartTurnState(class URCCharacterAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "StartTurnState");

	Params::RCCharacterTurnBFL_StartTurnState Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterTurnBFL.StopTurn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterTurnBFL::StopTurn(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterTurnBFL", "StopTurn");

	Params::RCCharacterTurnBFL_StopTurn Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamFormListData.Import
// (Native, Public, BlueprintCallable)

void URCParamFormListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamFormListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagi.ChangeKaiKagi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagi::ChangeKaiKagi(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagi", "ChangeKaiKagi");

	Params::RCNzUiBattleKaiKagi_ChangeKaiKagi Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagi.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagi::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagi", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagi.GetBattleKaiKagiStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleKaiKagiStatus              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleKaiKagiStatus URCNzUiBattleKaiKagi::GetBattleKaiKagiStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagi", "GetBattleKaiKagiStatus");

	Params::RCNzUiBattleKaiKagi_GetBattleKaiKagiStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagi.InitializeBattleKaiKagi
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagi::InitializeBattleKaiKagi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagi", "InitializeBattleKaiKagi");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagi.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagi::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagi", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagi.SetKaiKagiName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagi::SetKaiKagiName(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagi", "SetKaiKagiName");

	Params::RCNzUiBattleKaiKagi_SetKaiKagiName Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMojimichiManagerActor.DisolveText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DisolveTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMojimichiManagerActor::DisolveText(float DisolveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMojimichiManagerActor", "DisolveText");

	Params::RCMojimichiManagerActor_DisolveText Parms{};

	Parms.DisolveTime = DisolveTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiManagerActor.ShowText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMojimichiManagerActor::ShowText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMojimichiManagerActor", "ShowText");

	Params::RCMojimichiManagerActor_ShowText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiManagerActor.SpawnConstructor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMeshComponent*                   Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMojimichiManagerActor::SpawnConstructor(class UWorld* World, class AActor* Actor, class UMeshComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMojimichiManagerActor", "SpawnConstructor");

	Params::RCMojimichiManagerActor_SpawnConstructor Parms{};

	Parms.World = World;
	Parms.Actor = Actor;
	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiManagerActor.StartConstruction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMojimichiManagerActor::StartConstruction(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMojimichiManagerActor", "StartConstruction");

	Params::RCMojimichiManagerActor_StartConstruction Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiManagerActor.StartConstructionWithActorTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActorTag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMojimichiManagerActor::StartConstructionWithActorTag(class UWorld* World, class FName ActorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMojimichiManagerActor", "StartConstructionWithActorTag");

	Params::RCMojimichiManagerActor_StartConstructionWithActorTag Parms{};

	Parms.World = World;
	Parms.ActorTag = ActorTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiManagerActor.StartFracture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMojimichiManagerActor::StartFracture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMojimichiManagerActor", "StartFracture");

	Params::RCMojimichiManagerActor_StartFracture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiManagerActor.StopFracture
// (Final, Native, Public, BlueprintCallable)

void ARCMojimichiManagerActor::StopFracture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMojimichiManagerActor", "StopFracture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamForceFeedBackEffectData.Import
// (Native, Public, BlueprintCallable)

void URCParamForceFeedBackEffectData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamForceFeedBackEffectData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamKaikagiListData.Import
// (Native, Public, BlueprintCallable)

void URCParamKaikagiListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamKaikagiListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectButton.InitializeBattleKaiKagiSelectButton
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectButton::InitializeBattleKaiKagiSelectButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectButton", "InitializeBattleKaiKagiSelectButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamEventSceneMapConnectInfoData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventSceneMapConnectInfoData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventSceneMapConnectInfoData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterViewerMenu.CloseDebugMenu
// (Final, Native, Static, Protected, BlueprintCallable)

void URCCharacterViewerMenu::CloseDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterViewerMenu", "CloseDebugMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterViewerMenu.CreateDebugMenu
// (Final, Native, Static, Public, BlueprintCallable)

void URCCharacterViewerMenu::CreateDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterViewerMenu", "CreateDebugMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterViewerMenu.DeleteDebugMenu
// (Final, Native, Static, Public, BlueprintCallable)

void URCCharacterViewerMenu::DeleteDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterViewerMenu", "DeleteDebugMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterViewerMenu.OpenDebugMenu
// (Final, Native, Static, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          InContext                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterViewerMenu::OpenDebugMenu(const class UObject* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterViewerMenu", "OpenDebugMenu");

	Params::RCCharacterViewerMenu_OpenDebugMenu Parms{};

	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCharacterViewerMenu.ToggleDebugMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InContext                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCharacterViewerMenu::ToggleDebugMenu(const class UObject* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCharacterViewerMenu", "ToggleDebugMenu");

	Params::RCCharacterViewerMenu_ToggleDebugMenu Parms{};

	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleQuestionBase.InitializePuzzleQuestion
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleQuestionBase::InitializePuzzleQuestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleQuestionBase", "InitializePuzzleQuestion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleQuestionBase.SetQuestion
// (Final, Native, Public)
// Parameters:
// class FText                             wordText                                               (ConstParm, Parm, NativeAccessSpecifierPublic)

void URCNzPuzzleQuestionBase::SetQuestion(const class FText& wordText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleQuestionBase", "SetQuestion");

	Params::RCNzPuzzleQuestionBase_SetQuestion Parms{};

	Parms.wordText = std::move(wordText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInAnim.ChangeWidgetAnim
// (Final, Native, Public, BlueprintCallable)

void URCUiCutInAnim::ChangeWidgetAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInAnim", "ChangeWidgetAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInAnim.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiCutInAnim::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInAnim", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInAnim.InitializeCutIn
// (Final, Native, Public, BlueprintCallable)

void URCUiCutInAnim::InitializeCutIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInAnim", "InitializeCutIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInAnim.IsFinishContAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiCutInAnim::IsFinishContAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInAnim", "IsFinishContAnim");

	Params::RCUiCutInAnim_IsFinishContAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiCutInAnim.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiCutInAnim::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInAnim", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInAnim.SetAnimSpeedRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAnimSpeedRate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiCutInAnim::SetAnimSpeedRate(float InAnimSpeedRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInAnim", "SetAnimSpeedRate");

	Params::RCUiCutInAnim_SetAnimSpeedRate Parms{};

	Parms.InAnimSpeedRate = InAnimSpeedRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.GetCheckNameTextId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCCheckActor::GetCheckNameTextId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "GetCheckNameTextId");

	Params::RCCheckActor_GetCheckNameTextId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.GetFigureNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCCheckActor::GetFigureNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "GetFigureNum");

	Params::RCCheckActor_GetFigureNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.GetFigurePersonID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCCheckActor::GetFigurePersonID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "GetFigurePersonID");

	Params::RCCheckActor_GetFigurePersonID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.GetNextMapID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCCheckActor::GetNextMapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "GetNextMapID");

	Params::RCCheckActor_GetNextMapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.GetNextPlayerStartName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCCheckActor::GetNextPlayerStartName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "GetNextPlayerStartName");

	Params::RCCheckActor_GetNextPlayerStartName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.GetResearchVisionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCRealCheckActorResearchVisionTimeType ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCRealCheckActorResearchVisionTimeType ARCCheckActor::GetResearchVisionType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "GetResearchVisionType");

	Params::RCCheckActor_GetResearchVisionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.IsAreaMoveStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCheckActor::IsAreaMoveStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "IsAreaMoveStop");

	Params::RCCheckActor_IsAreaMoveStop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.IsCheckFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCheckActor::IsCheckFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "IsCheckFinish");

	Params::RCCheckActor_IsCheckFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.IsCheckIconSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCheckActor::IsCheckIconSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "IsCheckIconSetting");

	Params::RCCheckActor_IsCheckIconSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.IsCheckSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCCheckActor::IsCheckSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "IsCheckSetting");

	Params::RCCheckActor_IsCheckSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActor.SetAreaMoveStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAreaMoveStop                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetAreaMoveStop(bool bInAreaMoveStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetAreaMoveStop");

	Params::RCCheckActor_SetAreaMoveStop Parms{};

	Parms.bInAreaMoveStop = bInAreaMoveStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetCheckFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCheck                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetCheckFinish(bool bInCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetCheckFinish");

	Params::RCCheckActor_SetCheckFinish Parms{};

	Parms.bInCheck = bInCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetCheckIconSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCheckIcon                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetCheckIconSetting(bool bInCheckIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetCheckIconSetting");

	Params::RCCheckActor_SetCheckIconSetting Parms{};

	Parms.bInCheckIcon = bInCheckIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetCheckNameTextId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetCheckNameTextId(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetCheckNameTextId");

	Params::RCCheckActor_SetCheckNameTextId Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetCheckSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCheck                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetCheckSetting(bool bInCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetCheckSetting");

	Params::RCCheckActor_SetCheckSetting Parms{};

	Parms.bInCheck = bInCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetFigureNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InFigureNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetFigureNum(int32 InFigureNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetFigureNum");

	Params::RCCheckActor_SetFigureNum Parms{};

	Parms.InFigureNum = InFigureNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetFigurePersonID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InFigurePersonID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetFigurePersonID(class FName InFigurePersonID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetFigurePersonID");

	Params::RCCheckActor_SetFigurePersonID Parms{};

	Parms.InFigurePersonID = InFigurePersonID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetNextMapID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetNextMapID(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetNextMapID");

	Params::RCCheckActor_SetNextMapID Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetNextPlayerStartName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InPlayerStartName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetNextPlayerStartName(class FName InPlayerStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetNextPlayerStartName");

	Params::RCCheckActor_SetNextPlayerStartName Parms{};

	Parms.InPlayerStartName = InPlayerStartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActor.SetResearchVisionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCRealCheckActorResearchVisionTimeType InResearchVisionType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActor::SetResearchVisionType(ERCRealCheckActorResearchVisionTimeType InResearchVisionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActor", "SetResearchVisionType");

	Params::RCCheckActor_SetResearchVisionType Parms{};

	Parms.InResearchVisionType = InResearchVisionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActorBFL.GetCheckActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCCheckActor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCheckActor* URCCheckActorBFL::GetCheckActor(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "GetCheckActor");

	Params::RCCheckActorBFL_GetCheckActor Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActorBFL.IsAreaMoveStop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCheckActorBFL::IsAreaMoveStop(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "IsAreaMoveStop");

	Params::RCCheckActorBFL_IsAreaMoveStop Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActorBFL.IsCheckFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCheckActorBFL::IsCheckFinish(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "IsCheckFinish");

	Params::RCCheckActorBFL_IsCheckFinish Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActorBFL.IsCheckSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCheckActorBFL::IsCheckSetting(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "IsCheckSetting");

	Params::RCCheckActorBFL_IsCheckSetting Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCheckActorBFL.SetAllAreaMoveMainQuestFlag
// (Final, Native, Static, Public, BlueprintCallable)

void URCCheckActorBFL::SetAllAreaMoveMainQuestFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "SetAllAreaMoveMainQuestFlag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActorBFL.SetAreaMoveStop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAreaMoveStop                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCheckActorBFL::SetAreaMoveStop(class FName InName, bool bInAreaMoveStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "SetAreaMoveStop");

	Params::RCCheckActorBFL_SetAreaMoveStop Parms{};

	Parms.InName = InName;
	Parms.bInAreaMoveStop = bInAreaMoveStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActorBFL.SetCheckFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCheck                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCheckActorBFL::SetCheckFinish(class FName InName, bool bInCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "SetCheckFinish");

	Params::RCCheckActorBFL_SetCheckFinish Parms{};

	Parms.InName = InName;
	Parms.bInCheck = bInCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActorBFL.SetCheckSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCheck                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCheckActorBFL::SetCheckSetting(class FName InName, bool bInCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "SetCheckSetting");

	Params::RCCheckActorBFL_SetCheckSetting Parms{};

	Parms.InName = InName;
	Parms.bInCheck = bInCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActorBFL.SetCheckSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InActorName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCheck                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCheckActorBFL::SetCheckSettings(const class FString& InActorName, bool bInCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCheckActorBFL", "SetCheckSettings");

	Params::RCCheckActorBFL_SetCheckSettings Parms{};

	Parms.InActorName = std::move(InActorName);
	Parms.bInCheck = bInCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActorBox.OnActorBeginOverlapPlayerEntry
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActorBox::OnActorBeginOverlapPlayerEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActorBox", "OnActorBeginOverlapPlayerEntry");

	Params::RCCheckActorBox_OnActorBeginOverlapPlayerEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCheckActorBox.OnActorEndOverlapPlayerEntry
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCheckActorBox::OnActorEndOverlapPlayerEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCheckActorBox", "OnActorEndOverlapPlayerEntry");

	Params::RCCheckActorBox_OnActorEndOverlapPlayerEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCharacterViewer.OnButtonGuideClickEvent
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuCharacterViewer::OnButtonGuideClickEvent(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCharacterViewer", "OnButtonGuideClickEvent");

	Params::RCUiMenuCharacterViewer_OnButtonGuideClickEvent Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamInputKeyConfigData.Import
// (Native, Public, BlueprintCallable)

void URCParamInputKeyConfigData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamInputKeyConfigData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamMenuStatusData.Import
// (Native, Public, BlueprintCallable)

void URCParamMenuStatusData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamMenuStatusData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleDetectiveBackGround.ChangeBackgroundImg
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleDetectiveBackGround::ChangeBackgroundImg(const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleDetectiveBackGround", "ChangeBackgroundImg");

	Params::RCNzFinaleDetectiveBackGround_ChangeBackgroundImg Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzFinaleDetectiveBackGround.SetVisiblityBackground
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleDetectiveBackGround::SetVisiblityBackground(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleDetectiveBackGround", "SetVisiblityBackground");

	Params::RCNzFinaleDetectiveBackGround_SetVisiblityBackground Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCParamEventMapInfoData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventMapInfoData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventMapInfoData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamFogData.Import
// (Native, Public, BlueprintCallable)

void URCParamFogData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamFogData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiAssistCutin.GetAssistCutinStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiAssistCutinStatus                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiAssistCutinStatus URCNzUiAssistCutin::GetAssistCutinStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiAssistCutin", "GetAssistCutinStatus");

	Params::RCNzUiAssistCutin_GetAssistCutinStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiAssistCutin.InitializeAssistCutin
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  InAssistImagePath                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiAssistCutin::InitializeAssistCutin(const struct FSoftObjectPath& InAssistImagePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiAssistCutin", "InitializeAssistCutin");

	Params::RCNzUiAssistCutin_InitializeAssistCutin Parms{};

	Parms.InAssistImagePath = std::move(InAssistImagePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiAssistCutin.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiAssistCutin::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiAssistCutin", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiAssistCutin.UninitializeAssistCutin
// (Final, Native, Public, BlueprintCallable)

void URCNzUiAssistCutin::UninitializeAssistCutin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiAssistCutin", "UninitializeAssistCutin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiDetPoint.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiDetPoint::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiDetPoint", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiDetPoint.InitializeDetPoint
// (Final, Native, Public, BlueprintCallable)

void URCUiDetPoint::InitializeDetPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiDetPoint", "InitializeDetPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiDetPoint.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiDetPoint::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiDetPoint", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiDetPoint.SetDetPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiDetPoint::SetDetPoint(int32 InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiDetPoint", "SetDetPoint");

	Params::RCUiDetPoint_SetDetPoint Parms{};

	Parms.InPoint = InPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiDetPoint.SetDetRank
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiDetPoint::SetDetRank(int32 InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiDetPoint", "SetDetRank");

	Params::RCUiDetPoint_SetDetRank Parms{};

	Parms.InPoint = InPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCineCameraActor.AtouchRain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   lenght                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Zfollow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCineCameraActor::AtouchRain(float lenght, bool Zfollow, float OffsetZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCineCameraActor", "AtouchRain");

	Params::RCCineCameraActor_AtouchRain Parms{};

	Parms.lenght = lenght;
	Parms.Zfollow = Zfollow;
	Parms.OffsetZ = OffsetZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCineCameraActor.RemoveRain
// (Final, Native, Public, BlueprintCallable)

void ARCCineCameraActor::RemoveRain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCineCameraActor", "RemoveRain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCineCameraActor.SetRainDistanceOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   disntaceOffset                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCineCameraActor::SetRainDistanceOffset(float disntaceOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCineCameraActor", "SetRainDistanceOffset");

	Params::RCCineCameraActor_SetRainDistanceOffset Parms{};

	Parms.disntaceOffset = disntaceOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCineCameraActor.SetRainHeightOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   heightOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCineCameraActor::SetRainHeightOffset(float heightOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCineCameraActor", "SetRainHeightOffset");

	Params::RCCineCameraActor_SetRainHeightOffset Parms{};

	Parms.heightOffset = heightOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCineCameraActor.SetUseOffsetFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUseOffset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCineCameraActor::SetUseOffsetFlag(bool bUseOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCineCameraActor", "SetUseOffsetFlag");

	Params::RCCineCameraActor_SetUseOffsetFlag Parms{};

	Parms.bUseOffset = bUseOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.CamSwitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::CamSwitch(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "CamSwitch");

	Params::RCCMNEventBFL_CamSwitch Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.CamSwitchBlend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendTime                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                InBlendFunc                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendExp                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::CamSwitchBlend(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InBlendTime, EViewTargetBlendFunction InBlendFunc, const float InBlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "CamSwitchBlend");

	Params::RCCMNEventBFL_CamSwitchBlend Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InBlendTime = InBlendTime;
	Parms.InBlendFunc = InBlendFunc;
	Parms.InBlendExp = InBlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.CamSwitchBufReset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::CamSwitchBufReset(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "CamSwitchBufReset");

	Params::RCCMNEventBFL_CamSwitchBufReset Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.InitCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTargetPointName                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::InitCharacter(class AActor* InActor, const class FName InTargetPointName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "InitCharacter");

	Params::RCCMNEventBFL_InitCharacter Parms{};

	Parms.InActor = InActor;
	Parms.InTargetPointName = InTargetPointName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.ResetCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::ResetCharacter(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "ResetCharacter");

	Params::RCCMNEventBFL_ResetCharacter Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamDistance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDistance                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamDistance(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamDistance");

	Params::RCCMNEventBFL_SetCamDistance Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InDistance = InDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamFocalLength
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFocalLength                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamFocalLength(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InFocalLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamFocalLength");

	Params::RCCMNEventBFL_SetCamFocalLength Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InFocalLength = InFocalLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamFocusOffset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFocusOffset                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamFocusOffset(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InFocusOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamFocusOffset");

	Params::RCCMNEventBFL_SetCamFocusOffset Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InFocusOffset = InFocusOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamMoveX
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InX                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamMoveX(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamMoveX");

	Params::RCCMNEventBFL_SetCamMoveX Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InX = InX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamMoveY
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InY                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamMoveY(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamMoveY");

	Params::RCCMNEventBFL_SetCamMoveY Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InY = InY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamMoveZ
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InZ                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamMoveZ(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamMoveZ");

	Params::RCCMNEventBFL_SetCamMoveZ Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InZ = InZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamPitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPitch                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamPitch(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InPitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamPitch");

	Params::RCCMNEventBFL_SetCamPitch Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InPitch = InPitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamRoll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRoll                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamRoll(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InRoll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamRoll");

	Params::RCCMNEventBFL_SetCamRoll Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InRoll = InRoll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamVpY
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InY                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamVpY(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamVpY");

	Params::RCCMNEventBFL_SetCamVpY Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InY = InY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamVpZ
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InZ                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamVpZ(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamVpZ");

	Params::RCCMNEventBFL_SetCamVpZ Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InZ = InZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.SetCamYaw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ARCCineCameraActor*>       InCamList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCamIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::SetCamYaw(const TArray<class ARCCineCameraActor*>& InCamList, const int32 InCamIndex, const float InYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "SetCamYaw");

	Params::RCCMNEventBFL_SetCamYaw Parms{};

	Parms.InCamList = std::move(InCamList);
	Parms.InCamIndex = InCamIndex;
	Parms.InYaw = InYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCMNEventBFL.WalkSpline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InSplineActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCMNEventBFL::WalkSpline(class AActor* InActor, class AActor* InSplineActor, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCMNEventBFL", "WalkSpline");

	Params::RCCMNEventBFL_WalkSpline Parms{};

	Parms.InActor = InActor;
	Parms.InSplineActor = InSplineActor;
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCommonTab.SetInputFromButtonGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuCommonTab::SetInputFromButtonGuide(ERCInputKeyType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCommonTab", "SetInputFromButtonGuide");

	Params::RCUiMenuCommonTab_SetInputFromButtonGuide Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCommonTab.SetTabIconActive
// (Final, Native, Public)
// Parameters:
// int32                                   InActiveIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuCommonTab::SetTabIconActive(int32 InActiveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCommonTab", "SetTabIconActive");

	Params::RCUiMenuCommonTab_SetTabIconActive Parms{};

	Parms.InActiveIndex = InActiveIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCollisionLibrary.SphereOverlapBlockingSingleByProfile
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ProfileName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreSelf                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     TraceColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     TraceHitColor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCollisionLibrary::SphereOverlapBlockingSingleByProfile(const class UObject* WorldContextObject, const struct FVector& Position, float Radius, class FName ProfileName, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCollisionLibrary", "SphereOverlapBlockingSingleByProfile");

	Params::RCCollisionLibrary_SphereOverlapBlockingSingleByProfile Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = std::move(Position);
	Parms.Radius = Radius;
	Parms.ProfileName = ProfileName;
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DrawDebugType = DrawDebugType;
	Parms.bIgnoreSelf = bIgnoreSelf;
	Parms.TraceColor = std::move(TraceColor);
	Parms.TraceHitColor = std::move(TraceHitColor);
	Parms.DrawTime = DrawTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamMenuContentsListData.Import
// (Native, Public, BlueprintCallable)

void URCParamMenuContentsListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamMenuContentsListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCompanionBFL.AddCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCompanionBFL::AddCharacter(class AActor* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCompanionBFL", "AddCharacter");

	Params::RCCompanionBFL_AddCharacter Parms{};

	Parms.InCharacter = InCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCompanionBFL.GetCharacterActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InCompanionIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCCharacterRender*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCharacterRender* URCCompanionBFL::GetCharacterActor(int32 InCompanionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCompanionBFL", "GetCharacterActor");

	Params::RCCompanionBFL_GetCharacterActor Parms{};

	Parms.InCompanionIndex = InCompanionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCompanionBFL.RemoveCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCompanionBFL::RemoveCharacter(class AActor* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCompanionBFL", "RemoveCharacter");

	Params::RCCompanionBFL_RemoveCharacter Parms{};

	Parms.InCharacter = InCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCompanionBFL.SetCharacterVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCompanionBFL::SetCharacterVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCompanionBFL", "SetCharacterVisible");

	Params::RCCompanionBFL_SetCharacterVisible Parms{};

	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCompanionBFL.SetPlayerWarp
// (Final, Native, Static, Public, BlueprintCallable)

void URCCompanionBFL::SetPlayerWarp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCompanionBFL", "SetPlayerWarp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPlayerCharacter.GetAnimCtrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimCtrl*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCCharacterAnimCtrl* ARCPlayerCharacter::GetAnimCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerCharacter", "GetAnimCtrl");

	Params::RCPlayerCharacter_GetAnimCtrl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCScriptBFL.GetValiable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InVariable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InArrayIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCScriptBFL::GetValiable(class FName InVariable, int32 InArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScriptBFL", "GetValiable");

	Params::RCScriptBFL_GetValiable Parms{};

	Parms.InVariable = InVariable;
	Parms.InArrayIndex = InArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCScriptBFL.JampLabel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             StartLabelName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCScriptBFL::JampLabel(class FName StartLabelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScriptBFL", "JampLabel");

	Params::RCScriptBFL_JampLabel Parms{};

	Parms.StartLabelName = StartLabelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCScriptBFL.SetNextLabel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InLabelName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCScriptBFL::SetNextLabel(class FName InLabelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScriptBFL", "SetNextLabel");

	Params::RCScriptBFL_SetNextLabel Parms{};

	Parms.InLabelName = InLabelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCScriptBFL.SetScriptPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InPathName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCScriptBFL::SetScriptPath(class FName InPathName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScriptBFL", "SetScriptPath");

	Params::RCScriptBFL_SetScriptPath Parms{};

	Parms.InPathName = InPathName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCScriptBFL.SetValiable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InVariable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InArrayIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCScriptBFL::SetValiable(int32 InValue, class FName InVariable, int32 InArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScriptBFL", "SetValiable");

	Params::RCScriptBFL_SetValiable Parms{};

	Parms.InValue = InValue;
	Parms.InVariable = InVariable;
	Parms.InArrayIndex = InArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCScriptBFL.StartScript
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InScriptName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLabelName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCScriptBFL::StartScript(class FName InScriptName, class FName InLabelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScriptBFL", "StartScript");

	Params::RCScriptBFL_StartScript Parms{};

	Parms.InScriptName = InScriptName;
	Parms.InLabelName = InLabelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCScriptBFL.StartScriptLineNo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InScriptName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLineNo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCScriptBFL::StartScriptLineNo(class FName InScriptName, int32 InLineNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScriptBFL", "StartScriptLineNo");

	Params::RCScriptBFL_StartScriptLineNo Parms{};

	Parms.InScriptName = InScriptName;
	Parms.InLineNo = InLineNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCScriptBFL.StartScriptWork
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCScriptBFL::StartScriptWork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCScriptBFL", "StartScriptWork");

	Params::RCScriptBFL_StartScriptWork Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCompanionTrigger.OnActorBeginOverlapScriptEntry
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCCompanionTrigger::OnActorBeginOverlapScriptEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCompanionTrigger", "OnActorBeginOverlapScriptEntry");

	Params::RCCompanionTrigger_OnActorBeginOverlapScriptEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassDeformer.UpdateGrassTransform
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassDeformer::UpdateGrassTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassDeformer", "UpdateGrassTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.SCCommandDataAsset.Import
// (Final, Native, Public, BlueprintCallable)

void USCCommandDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SCCommandDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCrossWalkController.GetCheckLength
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCCrossWalkController::GetCheckLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCrossWalkController", "GetCheckLength");

	Params::RCCrossWalkController_GetCheckLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCrossWalkController.GetCrossWalkActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   crossWalkIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ARCCrossWalkController::GetCrossWalkActor(int32 crossWalkIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCrossWalkController", "GetCrossWalkActor");

	Params::RCCrossWalkController_GetCrossWalkActor Parms{};

	Parms.crossWalkIndex = crossWalkIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCrossWalkController.GetThroughLength
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCCrossWalkController::GetThroughLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCrossWalkController", "GetThroughLength");

	Params::RCCrossWalkController_GetThroughLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCrossWalkController.Initialize
// (Final, Native, Public, BlueprintCallable)

void ARCCrossWalkController::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCrossWalkController", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCCustomEventActor.GetEventName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCCustomEventActor::GetEventName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCCustomEventActor", "GetEventName");

	Params::RCCustomEventActor_GetEventName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCustomEventBFL.OnEventStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCCustomEventBFL::OnEventStart(class FName InActorName, class FName InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCustomEventBFL", "OnEventStart");

	Params::RCCustomEventBFL_OnEventStart Parms{};

	Parms.InActorName = InActorName;
	Parms.InEventName = InEventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCCustomEventBFL.OnEventStarts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InActorName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCCustomEventBFL::OnEventStarts(const class FString& InActorName, class FName InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCCustomEventBFL", "OnEventStarts");

	Params::RCCustomEventBFL_OnEventStarts Parms{};

	Parms.InActorName = std::move(InActorName);
	Parms.InEventName = InEventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDataConversionBP.GetUTF8
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           in_ansi_string                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCDataConversionBP::GetUTF8(const class FString& in_ansi_string)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDataConversionBP", "GetUTF8");

	Params::RCDataConversionBP_GetUTF8 Parms{};

	Parms.in_ansi_string = std::move(in_ansi_string);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCDataConversionBP.TestPrint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCDataConversionBP::TestPrint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDataConversionBP", "TestPrint");

	Params::RCDataConversionBP_TestPrint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiGenericWindow.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiGenericWindow::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.InitializeGenericWindow
// (Final, Native, Public, BlueprintCallable)

void URCUiGenericWindow::InitializeGenericWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "InitializeGenericWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.IsFinishGenericWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiGenericWindow::IsFinishGenericWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "IsFinishGenericWindow");

	Params::RCUiGenericWindow_IsFinishGenericWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiGenericWindow.IsGetButtonResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiGenericWindow::IsGetButtonResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "IsGetButtonResult");

	Params::RCUiGenericWindow_IsGetButtonResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiGenericWindow.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsShowButton                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsFocusTrue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsAcceptCancel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsUseDefaultTextID                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiGenericWindow::Open(bool bInIsShowButton, bool bInIsFocusTrue, bool bInIsAcceptCancel, bool bInIsUseDefaultTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "Open");

	Params::RCUiGenericWindow_Open Parms{};

	Parms.bInIsShowButton = bInIsShowButton;
	Parms.bInIsFocusTrue = bInIsFocusTrue;
	Parms.bInIsAcceptCancel = bInIsAcceptCancel;
	Parms.bInIsUseDefaultTextID = bInIsUseDefaultTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.OpenSingleButton
// (Final, Native, Public, BlueprintCallable)

void URCUiGenericWindow::OpenSingleButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "OpenSingleButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.SetButtonTextID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCancelTextID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDecideTextID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiGenericWindow::SetButtonTextID(class FName InCancelTextID, class FName InDecideTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "SetButtonTextID");

	Params::RCUiGenericWindow_SetButtonTextID Parms{};

	Parms.InCancelTextID = InCancelTextID;
	Parms.InDecideTextID = InDecideTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.SetWindowStrings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InStringArray                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCUiGenericWindow::SetWindowStrings(const TArray<class FString>& InStringArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "SetWindowStrings");

	Params::RCUiGenericWindow_SetWindowStrings Parms{};

	Parms.InStringArray = std::move(InStringArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.SetWindowTextID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiGenericWindow::SetWindowTextID(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "SetWindowTextID");

	Params::RCUiGenericWindow_SetWindowTextID Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.SetWindowTextIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InTextIDArray                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCUiGenericWindow::SetWindowTextIDs(const TArray<class FName>& InTextIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "SetWindowTextIDs");

	Params::RCUiGenericWindow_SetWindowTextIDs Parms{};

	Parms.InTextIDArray = std::move(InTextIDArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.Wait
// (Final, Native, Public, BlueprintCallable)

void URCUiGenericWindow::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericWindow.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCUiGenericWindow::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericWindow", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.AssistCutin_Start
// (Final, Native, Public, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::AssistCutin_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "AssistCutin_Start");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.AssistPlayAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::AssistPlayAnim(class FName InMotionName, float InPlayRate, bool bInLoop, float InBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "AssistPlayAnim");

	Params::RCNazoBattleLevelScriptActor_AssistPlayAnim Parms{};

	Parms.InMotionName = InMotionName;
	Parms.InPlayRate = InPlayRate;
	Parms.bInLoop = bInLoop;
	Parms.InBlendTime = InBlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.AttackFailure_Start
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCNazoBattleLSARebuttalAttackFailureTypeFailureType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::AttackFailure_Start(int32 RebuttalGroupNo, int32 RebuttalNo, ERCNazoBattleLSARebuttalAttackFailureType FailureType, class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "AttackFailure_Start");

	Params::RCNazoBattleLevelScriptActor_AttackFailure_Start Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;
	Parms.RebuttalNo = RebuttalNo;
	Parms.FailureType = FailureType;
	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.AttackSuccess_Start
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::AttackSuccess_Start(int32 RebuttalGroupNo, int32 RebuttalNo, class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "AttackSuccess_Start");

	Params::RCNazoBattleLevelScriptActor_AttackSuccess_Start Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;
	Parms.RebuttalNo = RebuttalNo;
	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.BattleAllRebuttalLetterForceFinish
// (Final, Native, Public, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::BattleAllRebuttalLetterForceFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleAllRebuttalLetterForceFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.BattleRebuttalResetPosition
// (Final, Native, Public, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::BattleRebuttalResetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleRebuttalResetPosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.BattleStartUI_IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoBattleLevelScriptActor::BattleStartUI_IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleStartUI_IsFinished");

	Params::RCNazoBattleLevelScriptActor_BattleStartUI_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.BattleStartUI_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoBattleLevelScriptActor::BattleStartUI_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleStartUI_Start");

	Params::RCNazoBattleLevelScriptActor_BattleStartUI_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.BattleSubTitleSwitch
// (Final, Native, Protected, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::BattleSubTitleSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleSubTitleSwitch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.BattleUI_ChangeKaiKagi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKaiKagiID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::BattleUI_ChangeKaiKagi(class FName InKaiKagiID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleUI_ChangeKaiKagi");

	Params::RCNazoBattleLevelScriptActor_BattleUI_ChangeKaiKagi Parms{};

	Parms.InKaiKagiID = InKaiKagiID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.BattleUI_Finish
// (Final, Native, Public, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::BattleUI_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleUI_Finish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.BattleUI_SetKaiKagiID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKaiKagiID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::BattleUI_SetKaiKagiID(class FName InKaiKagiID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleUI_SetKaiKagiID");

	Params::RCNazoBattleLevelScriptActor_BattleUI_SetKaiKagiID Parms{};

	Parms.InKaiKagiID = InKaiKagiID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.BattleUI_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInOpenKaiKagi                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInOpenPlayerHP                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::BattleUI_Start(bool bInOpenKaiKagi, bool bInOpenPlayerHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "BattleUI_Start");

	Params::RCNazoBattleLevelScriptActor_BattleUI_Start Parms{};

	Parms.bInOpenKaiKagi = bInOpenKaiKagi;
	Parms.bInOpenPlayerHP = bInOpenPlayerHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.ChangeCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACameraActor*                     Camera                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::ChangeCamera(class ACameraActor* Camera, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "ChangeCamera");

	Params::RCNazoBattleLevelScriptActor_ChangeCamera Parms{};

	Parms.Camera = Camera;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.ChangeCameraFromTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CameraTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::ChangeCameraFromTag(class FName CameraTag, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "ChangeCameraFromTag");

	Params::RCNazoBattleLevelScriptActor_ChangeCameraFromTag Parms{};

	Parms.CameraTag = CameraTag;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.ChangePhaseEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ERCNazoBattleLSAPhases                  BattlePhase                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::ChangePhaseEvent(ERCNazoBattleLSAPhases BattlePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "ChangePhaseEvent");

	Params::RCNazoBattleLevelScriptActor_ChangePhaseEvent Parms{};

	Parms.BattlePhase = BattlePhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.ChangeStateEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ERCNazoBattleLSAState                   BattleState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::ChangeStateEvent(ERCNazoBattleLSAState BattleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "ChangeStateEvent");

	Params::RCNazoBattleLevelScriptActor_ChangeStateEvent Parms{};

	Parms.BattleState = BattleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.ClearEvent_Start
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     TalkIDArray                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::ClearEvent_Start(class FName TalkID, const TArray<class FName>& TalkIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "ClearEvent_Start");

	Params::RCNazoBattleLevelScriptActor_ClearEvent_Start Parms{};

	Parms.TalkID = TalkID;
	Parms.TalkIDArray = std::move(TalkIDArray);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.CloseContest_End
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::CloseContest_End(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "CloseContest_End");

	Params::RCNazoBattleLevelScriptActor_CloseContest_End Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.CloseContest_Start
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InputTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InputCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FailureDamage                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::CloseContest_Start(int32 RebuttalGroupNo, int32 RebuttalNo, float InputTime, int32 InputCount, int32 FailureDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "CloseContest_Start");

	Params::RCNazoBattleLevelScriptActor_CloseContest_Start Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;
	Parms.RebuttalNo = RebuttalNo;
	Parms.InputTime = InputTime;
	Parms.InputCount = InputCount;
	Parms.FailureDamage = FailureDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.Confrontation_Start
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstChallenge                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::Confrontation_Start(int32 RebuttalGroupNo, bool bFirstChallenge, class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "Confrontation_Start");

	Params::RCNazoBattleLevelScriptActor_Confrontation_Start Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;
	Parms.bFirstChallenge = bFirstChallenge;
	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.DebugSetDrawHUD
// (Final, Native, Public)
// Parameters:
// bool                                    bInDraw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DebugSetDrawHUD(bool bInDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DebugSetDrawHUD");

	Params::RCNazoBattleLevelScriptActor_DebugSetDrawHUD Parms{};

	Parms.bInDraw = bInDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.DisturbLetterOnAttackDisable
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleDisturbLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DisturbLetterOnAttackDisable(const struct FRCNazoBattleDisturbLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DisturbLetterOnAttackDisable");

	Params::RCNazoBattleLevelScriptActor_DisturbLetterOnAttackDisable Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.DisturbLetterOnAttackEnable
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleDisturbLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DisturbLetterOnAttackEnable(const struct FRCNazoBattleDisturbLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DisturbLetterOnAttackEnable");

	Params::RCNazoBattleLevelScriptActor_DisturbLetterOnAttackEnable Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.DisturbLetterOnDamage
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleDisturbLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DisturbLetterOnDamage(const struct FRCNazoBattleDisturbLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DisturbLetterOnDamage");

	Params::RCNazoBattleLevelScriptActor_DisturbLetterOnDamage Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.DisturbLetterOnFinished
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleDisturbLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DisturbLetterOnFinished(const struct FRCNazoBattleDisturbLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DisturbLetterOnFinished");

	Params::RCNazoBattleLevelScriptActor_DisturbLetterOnFinished Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.DisturbLetterOnHit
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleDisturbLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DisturbLetterOnHit(const struct FRCNazoBattleDisturbLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DisturbLetterOnHit");

	Params::RCNazoBattleLevelScriptActor_DisturbLetterOnHit Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.DisturbLetterOnOut
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleDisturbLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DisturbLetterOnOut(const struct FRCNazoBattleDisturbLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DisturbLetterOnOut");

	Params::RCNazoBattleLevelScriptActor_DisturbLetterOnOut Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.DisturbLetterOnRepelled
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleDisturbLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DisturbLetterOnRepelled(const struct FRCNazoBattleDisturbLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DisturbLetterOnRepelled");

	Params::RCNazoBattleLevelScriptActor_DisturbLetterOnRepelled Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.DisturbLetterOnSlashed
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleDisturbLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::DisturbLetterOnSlashed(const struct FRCNazoBattleDisturbLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "DisturbLetterOnSlashed");

	Params::RCNazoBattleLevelScriptActor_DisturbLetterOnSlashed Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.EndPhase
// (Final, Native, Public, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::EndPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "EndPhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.GameOver_Start
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             HintTextId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::GameOver_Start(int32 RebuttalGroupNo, int32 RebuttalNo, class FName TalkID, class FName HintTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GameOver_Start");

	Params::RCNazoBattleLevelScriptActor_GameOver_Start Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;
	Parms.RebuttalNo = RebuttalNo;
	Parms.TalkID = TalkID;
	Parms.HintTextId = HintTextId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.GetActiveRebuttalDataArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FRCNazoBattleLSARebuttalData>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRCNazoBattleLSARebuttalData> ARCNazoBattleLevelScriptActor::GetActiveRebuttalDataArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetActiveRebuttalDataArray");

	Params::RCNazoBattleLevelScriptActor_GetActiveRebuttalDataArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalAttackFailureType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCNazoBattleLSARebuttalAttackFailureTypeReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNazoBattleLSARebuttalAttackFailureType ARCNazoBattleLevelScriptActor::GetRebuttalAttackFailureType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalAttackFailureType");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalAttackFailureType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalAttackTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoBattleLevelScriptActor::GetRebuttalAttackTalkID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalAttackTalkID");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalAttackTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalClearEventTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoBattleLevelScriptActor::GetRebuttalClearEventTalkID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalClearEventTalkID");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalClearEventTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalClearEventTalkIDArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> ARCNazoBattleLevelScriptActor::GetRebuttalClearEventTalkIDArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalClearEventTalkIDArray");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalClearEventTalkIDArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalCloseContestFailureDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNazoBattleLevelScriptActor::GetRebuttalCloseContestFailureDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalCloseContestFailureDamage");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalCloseContestFailureDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalCloseContestInputCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNazoBattleLevelScriptActor::GetRebuttalCloseContestInputCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalCloseContestInputCount");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalCloseContestInputCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalCloseContestInputTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNazoBattleLevelScriptActor::GetRebuttalCloseContestInputTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalCloseContestInputTime");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalCloseContestInputTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalConfrontationTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoBattleLevelScriptActor::GetRebuttalConfrontationTalkID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalConfrontationTalkID");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalConfrontationTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalGameOverHintTextID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoBattleLevelScriptActor::GetRebuttalGameOverHintTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalGameOverHintTextID");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalGameOverHintTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalGameOverTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoBattleLevelScriptActor::GetRebuttalGameOverTalkID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalGameOverTalkID");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalGameOverTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalGroupCurrentFirstChallenge
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoBattleLevelScriptActor::GetRebuttalGroupCurrentFirstChallenge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalGroupCurrentFirstChallenge");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalGroupCurrentFirstChallenge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalGroupCurrentNo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNazoBattleLevelScriptActor::GetRebuttalGroupCurrentNo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalGroupCurrentNo");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalGroupCurrentNo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalIntervalTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoBattleLevelScriptActor::GetRebuttalIntervalTalkID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalIntervalTalkID");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalIntervalTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalNextRebuttalEventTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoBattleLevelScriptActor::GetRebuttalNextRebuttalEventTalkID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalNextRebuttalEventTalkID");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalNextRebuttalEventTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalNoAtAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNazoBattleLevelScriptActor::GetRebuttalNoAtAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalNoAtAttack");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalNoAtAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalNoAtGameOver
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNazoBattleLevelScriptActor::GetRebuttalNoAtGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalNoAtGameOver");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalNoAtGameOver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetRebuttalPreEventTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNazoBattleLevelScriptActor::GetRebuttalPreEventTalkID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetRebuttalPreEventTalkID");

	Params::RCNazoBattleLevelScriptActor_GetRebuttalPreEventTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.GetUseSpawnLetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoBattleLevelScriptActor::GetUseSpawnLetter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "GetUseSpawnLetter");

	Params::RCNazoBattleLevelScriptActor_GetUseSpawnLetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.Interval_Start
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::Interval_Start(int32 RebuttalGroupNo, class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "Interval_Start");

	Params::RCNazoBattleLevelScriptActor_Interval_Start Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;
	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.IsInitialized
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoBattleLevelScriptActor::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "IsInitialized");

	Params::RCNazoBattleLevelScriptActor_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.KaijinPlayAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKaijinTag                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::KaijinPlayAnim(class FName InKaijinTag, class FName InMotionName, float InPlayRate, bool bInLoop, float InBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaijinPlayAnim");

	Params::RCNazoBattleLevelScriptActor_KaijinPlayAnim Parms{};

	Parms.InKaijinTag = InKaijinTag;
	Parms.InMotionName = InMotionName;
	Parms.InPlayRate = InPlayRate;
	Parms.bInLoop = bInLoop;
	Parms.InBlendTime = InBlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.KaijinPlayLoopAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKaijinTag                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::KaijinPlayLoopAnim(class FName InKaijinTag, class FName InMotionName, float InPlayRate, float InBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaijinPlayLoopAnim");

	Params::RCNazoBattleLevelScriptActor_KaijinPlayLoopAnim Parms{};

	Parms.InKaijinTag = InKaijinTag;
	Parms.InMotionName = InMotionName;
	Parms.InPlayRate = InPlayRate;
	Parms.InBlendTime = InBlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.KaijinPlayOneShotAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKaijinTag                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::KaijinPlayOneShotAnim(class FName InKaijinTag, class FName InMotionName, float InPlayRate, float InBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaijinPlayOneShotAnim");

	Params::RCNazoBattleLevelScriptActor_KaijinPlayOneShotAnim Parms{};

	Parms.InKaijinTag = InKaijinTag;
	Parms.InMotionName = InMotionName;
	Parms.InPlayRate = InPlayRate;
	Parms.InBlendTime = InBlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.KaiKagiList_Finished
// (Final, Native, Public)

void ARCNazoBattleLevelScriptActor::KaiKagiList_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaiKagiList_Finished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.KaiKagiList_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoBattleLevelScriptActor::KaiKagiList_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaiKagiList_Start");

	Params::RCNazoBattleLevelScriptActor_KaiKagiList_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.KaiKagiSelect_Decide
// (Final, Native, Public)
// Parameters:
// int32                                   SelectIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::KaiKagiSelect_Decide(int32 SelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaiKagiSelect_Decide");

	Params::RCNazoBattleLevelScriptActor_KaiKagiSelect_Decide Parms{};

	Parms.SelectIndex = SelectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.KaiKagiSelect_Finished
// (Final, Native, Public)
// Parameters:
// int32                                   SelectIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::KaiKagiSelect_Finished(int32 SelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaiKagiSelect_Finished");

	Params::RCNazoBattleLevelScriptActor_KaiKagiSelect_Finished Parms{};

	Parms.SelectIndex = SelectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.KaiKagiSelect_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoBattleLevelScriptActor::KaiKagiSelect_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaiKagiSelect_Start");

	Params::RCNazoBattleLevelScriptActor_KaiKagiSelect_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.KaiKagiSwitch_Next
// (Final, Native, Public, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::KaiKagiSwitch_Next()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaiKagiSwitch_Next");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.KaiKagiSwitch_Prev
// (Final, Native, Public, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::KaiKagiSwitch_Prev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "KaiKagiSwitch_Prev");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.NextRebuttalEvent_Start
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::NextRebuttalEvent_Start(int32 RebuttalGroupNo, class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "NextRebuttalEvent_Start");

	Params::RCNazoBattleLevelScriptActor_NextRebuttalEvent_Start Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;
	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.PlayerDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoBattleLevelScriptActor::PlayerDamage(int32 InDamage, class FName InMotionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "PlayerDamage");

	Params::RCNazoBattleLevelScriptActor_PlayerDamage Parms{};

	Parms.InDamage = InDamage;
	Parms.InMotionName = InMotionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActor.PlayerOnDamage
// (Final, Native, Public)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::PlayerOnDamage(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "PlayerOnDamage");

	Params::RCNazoBattleLevelScriptActor_PlayerOnDamage Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.PlayerPlayAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInStartLoopMotion                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::PlayerPlayAnim(class FName InMotionName, float InPlayRate, bool bInLoop, float InBlendTime, bool bInStartLoopMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "PlayerPlayAnim");

	Params::RCNazoBattleLevelScriptActor_PlayerPlayAnim Parms{};

	Parms.InMotionName = InMotionName;
	Parms.InPlayRate = InPlayRate;
	Parms.bInLoop = bInLoop;
	Parms.InBlendTime = InBlendTime;
	Parms.bInStartLoopMotion = bInStartLoopMotion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.PlayerPlayLoopAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInStartLoopMotion                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::PlayerPlayLoopAnim(class FName InMotionName, float InPlayRate, float InBlendTime, bool bInStartLoopMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "PlayerPlayLoopAnim");

	Params::RCNazoBattleLevelScriptActor_PlayerPlayLoopAnim Parms{};

	Parms.InMotionName = InMotionName;
	Parms.InPlayRate = InPlayRate;
	Parms.InBlendTime = InBlendTime;
	Parms.bInStartLoopMotion = bInStartLoopMotion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.PlayerPlayOneShotAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::PlayerPlayOneShotAnim(class FName InMotionName, float InPlayRate, float InBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "PlayerPlayOneShotAnim");

	Params::RCNazoBattleLevelScriptActor_PlayerPlayOneShotAnim Parms{};

	Parms.InMotionName = InMotionName;
	Parms.InPlayRate = InPlayRate;
	Parms.InBlendTime = InBlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.PreEvent_Start
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TalkID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::PreEvent_Start(class FName TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "PreEvent_Start");

	Params::RCNazoBattleLevelScriptActor_PreEvent_Start Parms{};

	Parms.TalkID = TalkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalKaijinCutin_Finish
// (Final, Native, Public, BlueprintCallable)

void ARCNazoBattleLevelScriptActor::RebuttalKaijinCutin_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalKaijinCutin_Finish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalKaijinCutin_Start
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalKaijinCutin_Start(int32 RebuttalGroupNo, int32 RebuttalNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalKaijinCutin_Start");

	Params::RCNazoBattleLevelScriptActor_RebuttalKaijinCutin_Start Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;
	Parms.RebuttalNo = RebuttalNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalKaikagiList_Finished
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalKaikagiList_Finished(int32 RebuttalGroupNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalKaikagiList_Finished");

	Params::RCNazoBattleLevelScriptActor_RebuttalKaikagiList_Finished Parms{};

	Parms.RebuttalGroupNo = RebuttalGroupNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnAttackDisable
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnAttackDisable(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnAttackDisable");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnAttackDisable Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnAttackEnable
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnAttackEnable(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnAttackEnable");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnAttackEnable Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnFinished
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnFinished(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnFinished");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnFinished Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnHit
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnHit(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnHit");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnHit Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnJustAvoidDisable
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnJustAvoidDisable(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnJustAvoidDisable");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnJustAvoidDisable Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnJustAvoidEnable
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnJustAvoidEnable(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnJustAvoidEnable");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnJustAvoidEnable Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnOut
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnOut(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnOut");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnOut Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnRepelled
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnRepelled(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnRepelled");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnRepelled Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnRepelledHitKaijin
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnRepelledHitKaijin(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnRepelledHitKaijin");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnRepelledHitKaijin Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnRepelledPreventedByKaijin
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnRepelledPreventedByKaijin(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnRepelledPreventedByKaijin");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnRepelledPreventedByKaijin Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnSlashed
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnSlashed(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnSlashed");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnSlashed Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.RebuttalLetterOnSlashStopped
// (Final, Native, Protected)
// Parameters:
// struct FRCNazoBattleRebuttalLetterNotifyDataNotifyData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::RebuttalLetterOnSlashStopped(const struct FRCNazoBattleRebuttalLetterNotifyData& NotifyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "RebuttalLetterOnSlashStopped");

	Params::RCNazoBattleLevelScriptActor_RebuttalLetterOnSlashStopped Parms{};

	Parms.NotifyData = std::move(NotifyData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.SetBattleInputEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInInputEnable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::SetBattleInputEnable(bool bInInputEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "SetBattleInputEnable");

	Params::RCNazoBattleLevelScriptActor_SetBattleInputEnable Parms{};

	Parms.bInInputEnable = bInInputEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.SetRebuttalLetterCollisionVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHitCollisionVisibility                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInJustAvoidCollisionVisibility                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::SetRebuttalLetterCollisionVisibility(bool bInHitCollisionVisibility, bool bInJustAvoidCollisionVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "SetRebuttalLetterCollisionVisibility");

	Params::RCNazoBattleLevelScriptActor_SetRebuttalLetterCollisionVisibility Parms{};

	Parms.bInHitCollisionVisibility = bInHitCollisionVisibility;
	Parms.bInJustAvoidCollisionVisibility = bInJustAvoidCollisionVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActor.SetUseSpawnLetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInUseSpawnLetter                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleLevelScriptActor::SetUseSpawnLetter(bool bInUseSpawnLetter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleLevelScriptActor", "SetUseSpawnLetter");

	Params::RCNazoBattleLevelScriptActor_SetUseSpawnLetter Parms{};

	Parms.bInUseSpawnLetter = bInUseSpawnLetter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSelectEventTrigger.IsOverlapPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCSelectEventTrigger::IsOverlapPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSelectEventTrigger", "IsOverlapPlayer");

	Params::RCSelectEventTrigger_IsOverlapPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCDebugAutoPlayBFL.GetType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCDebugAutoPlayType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCDebugAutoPlayType URCDebugAutoPlayBFL::GetType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "GetType");

	Params::RCDebugAutoPlayBFL_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCDebugAutoPlayBFL.IsAutoSceneChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCDebugAutoPlayBFL::IsAutoSceneChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "IsAutoSceneChange");

	Params::RCDebugAutoPlayBFL_IsAutoSceneChange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCDebugAutoPlayBFL.IsEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCDebugAutoPlayBFL::IsEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "IsEnable");

	Params::RCDebugAutoPlayBFL_IsEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCDebugAutoPlayBFL.IsSceneLoop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCDebugAutoPlayBFL::IsSceneLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "IsSceneLoop");

	Params::RCDebugAutoPlayBFL_IsSceneLoop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCDebugAutoPlayBFL.IsSkip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCDebugAutoPlayBFL::IsSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "IsSkip");

	Params::RCDebugAutoPlayBFL_IsSkip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCDebugAutoPlayBFL.SetEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCDebugAutoPlayBFL::SetEnable(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "SetEnable");

	Params::RCDebugAutoPlayBFL_SetEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDebugAutoPlayBFL.SetSceneLoop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSceneLoop                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCDebugAutoPlayBFL::SetSceneLoop(bool bInSceneLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "SetSceneLoop");

	Params::RCDebugAutoPlayBFL_SetSceneLoop Parms{};

	Parms.bInSceneLoop = bInSceneLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDebugAutoPlayBFL.SetSkip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSkip                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCDebugAutoPlayBFL::SetSkip(bool bInSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "SetSkip");

	Params::RCDebugAutoPlayBFL_SetSkip Parms{};

	Parms.bInSkip = bInSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDebugAutoPlayBFL.SetType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCDebugAutoPlayType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCDebugAutoPlayBFL::SetType(ERCDebugAutoPlayType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCDebugAutoPlayBFL", "SetType");

	Params::RCDebugAutoPlayBFL_SetType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCWanderingSpiritActor.OnActorBeginOverlapPlayer
// (Final, Native, Public)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCWanderingSpiritActor::OnActorBeginOverlapPlayer(class AActor* SelfActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWanderingSpiritActor", "OnActorBeginOverlapPlayer");

	Params::RCWanderingSpiritActor_OnActorBeginOverlapPlayer Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCWanderingSpiritActor.OnActorHitPlayer
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ARCWanderingSpiritActor::OnActorHitPlayer(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWanderingSpiritActor", "OnActorHitPlayer");

	Params::RCWanderingSpiritActor_OnActorHitPlayer Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericButton.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiGenericButton::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericButton", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericButton.InitializeGenericButton
// (Final, Native, Public, BlueprintCallable)

void URCUiGenericButton::InitializeGenericButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericButton", "InitializeGenericButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericButton.NativeTick
// (Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiGenericButton::NativeTick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericButton", "NativeTick");

	Params::RCUiGenericButton_NativeTick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericButton.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsFocusedTrue                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsAcceptCancel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValidButtonNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsUseDefaultTextID                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiGenericButton::Open(bool bInIsFocusedTrue, bool bInIsAcceptCancel, int32 InValidButtonNum, bool bInIsUseDefaultTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericButton", "Open");

	Params::RCUiGenericButton_Open Parms{};

	Parms.bInIsFocusedTrue = bInIsFocusedTrue;
	Parms.bInIsAcceptCancel = bInIsAcceptCancel;
	Parms.InValidButtonNum = InValidButtonNum;
	Parms.bInIsUseDefaultTextID = bInIsUseDefaultTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericButton.SetButtonTextID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCancelTextID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDecideTextID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiGenericButton::SetButtonTextID(class FName InCancelTextID, class FName InDecideTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericButton", "SetButtonTextID");

	Params::RCUiGenericButton_SetButtonTextID Parms{};

	Parms.InCancelTextID = InCancelTextID;
	Parms.InDecideTextID = InDecideTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericButton.StartPush
// (Final, Native, Protected, BlueprintCallable)

void URCUiGenericButton::StartPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericButton", "StartPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericButton.WindowNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCUiGenericButton::WindowNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericButton", "WindowNavigation");

	Params::RCUiGenericButton_WindowNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.GetIsLoop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMovieManagerBFL::GetIsLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "GetIsLoop");

	Params::RCMovieManagerBFL_GetIsLoop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.GetMovieIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCMovieManagerBFL::GetMovieIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "GetMovieIndex");

	Params::RCMovieManagerBFL_GetMovieIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.GetMovieTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCMovieManagerBFL::GetMovieTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "GetMovieTime");

	Params::RCMovieManagerBFL_GetMovieTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.IsAssetLoading
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMovieManagerBFL::IsAssetLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "IsAssetLoading");

	Params::RCMovieManagerBFL_IsAssetLoading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.IsLoadedMovie
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMovieManagerBFL::IsLoadedMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "IsLoadedMovie");

	Params::RCMovieManagerBFL_IsLoadedMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.IsMovieCansel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMovieManagerBFL::IsMovieCansel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "IsMovieCansel");

	Params::RCMovieManagerBFL_IsMovieCansel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.IsMovieEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMovieManagerBFL::IsMovieEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "IsMovieEnd");

	Params::RCMovieManagerBFL_IsMovieEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.IsMoviePlaying
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMovieManagerBFL::IsMoviePlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "IsMoviePlaying");

	Params::RCMovieManagerBFL_IsMoviePlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.Pause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    IsPause                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovieManagerBFL::Pause(bool IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "Pause");

	Params::RCMovieManagerBFL_Pause Parms{};

	Parms.IsPause = IsPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.PlayMovie
// (Final, Native, Static, Public, BlueprintCallable)

void URCMovieManagerBFL::PlayMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "PlayMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.ReadyMovieMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* URCMovieManagerBFL::ReadyMovieMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "ReadyMovieMaterial");

	Params::RCMovieManagerBFL_ReadyMovieMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManagerBFL.Reset
// (Final, Native, Static, Public, BlueprintCallable)

void URCMovieManagerBFL::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.ResetSkipGauge
// (Final, Native, Static, Public, BlueprintCallable)

void URCMovieManagerBFL::ResetSkipGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "ResetSkipGauge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.SetBpMovieIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   MovieIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovieManagerBFL::SetBpMovieIndex(int32 MovieIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "SetBpMovieIndex");

	Params::RCMovieManagerBFL_SetBpMovieIndex Parms{};

	Parms.MovieIndex = MovieIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.SetIsLoop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovieManagerBFL::SetIsLoop(bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "SetIsLoop");

	Params::RCMovieManagerBFL_SetIsLoop Parms{};

	Parms.IsLoop = IsLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.SetMovie
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           MovieID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCUserWidget*                    Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCManaComponent*                 ManaComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovieManagerBFL::SetMovie(const class FString& MovieID, class URCUserWidget* Widget, class URCManaComponent* ManaComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "SetMovie");

	Params::RCMovieManagerBFL_SetMovie Parms{};

	Parms.MovieID = std::move(MovieID);
	Parms.Widget = Widget;
	Parms.ManaComponent = ManaComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.SetOpeningMovieFLag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    isOpening                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovieManagerBFL::SetOpeningMovieFLag(bool isOpening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "SetOpeningMovieFLag");

	Params::RCMovieManagerBFL_SetOpeningMovieFLag Parms{};

	Parms.isOpening = isOpening;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.SetSaveDataMovieIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   MovieIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovieManagerBFL::SetSaveDataMovieIndex(int32 MovieIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "SetSaveDataMovieIndex");

	Params::RCMovieManagerBFL_SetSaveDataMovieIndex Parms{};

	Parms.MovieIndex = MovieIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.SetSkipTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   skipTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovieManagerBFL::SetSkipTime(float skipTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "SetSkipTime");

	Params::RCMovieManagerBFL_SetSkipTime Parms{};

	Parms.skipTime = skipTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.Update
// (Final, Native, Static, Public, BlueprintCallable)

void URCMovieManagerBFL::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManagerBFL.WidgetToRemoveFromViewport
// (Final, Native, Static, Public, BlueprintCallable)

void URCMovieManagerBFL::WidgetToRemoveFromViewport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMovieManagerBFL", "WidgetToRemoveFromViewport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonGauge.OnDecValue
// (Final, Native, Public)

void URCMenuButtonGauge::OnDecValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonGauge", "OnDecValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonGauge.OnIncValue
// (Final, Native, Public)

void URCMenuButtonGauge::OnIncValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonGauge", "OnIncValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDollyCameraActor.CameraComponentActivated
// (Final, Native, Protected)
// Parameters:
// class UActorComponent*                  Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCDollyCameraActor::CameraComponentActivated(class UActorComponent* Comp, bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDollyCameraActor", "CameraComponentActivated");

	Params::RCDollyCameraActor_CameraComponentActivated Parms{};

	Parms.Comp = Comp;
	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDollyCameraActor.CameraComponentDeactivated
// (Final, Native, Protected)
// Parameters:
// class UActorComponent*                  Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCDollyCameraActor::CameraComponentDeactivated(class UActorComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDollyCameraActor", "CameraComponentDeactivated");

	Params::RCDollyCameraActor_CameraComponentDeactivated Parms{};

	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDollyCameraActor.ResetTracking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ResetRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCDollyCameraActor::ResetTracking(bool ResetRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDollyCameraActor", "ResetTracking");

	Params::RCDollyCameraActor_ResetTracking Parms{};

	Parms.ResetRotation = ResetRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDollyCameraActor.SetOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          NewOffset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCDollyCameraActor::SetOffset(const struct FVector& NewOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDollyCameraActor", "SetOffset");

	Params::RCDollyCameraActor_SetOffset Parms{};

	Parms.NewOffset = std::move(NewOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDollyCameraActor.SetTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCDollyCameraActor::SetTarget(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDollyCameraActor", "SetTarget");

	Params::RCDollyCameraActor_SetTarget Parms{};

	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDollyCameraActor.SetTargetPawn
// (Final, Native, Public, BlueprintCallable)

void ARCDollyCameraActor::SetTargetPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDollyCameraActor", "SetTargetPawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDollyCameraActor.StopTracking
// (Final, Native, Public, BlueprintCallable)

void ARCDollyCameraActor::StopTracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDollyCameraActor", "StopTracking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCDollyCameraActor.IsTracking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCDollyCameraActor::IsTracking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCDollyCameraActor", "IsTracking");

	Params::RCDollyCameraActor_IsTracking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleGalleryBGMList.BGMNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleGalleryBGMList::BGMNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryBGMList", "BGMNavigation");

	Params::RCTitleGalleryBGMList_BGMNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleGalleryBGMList.SelectBGM
// (Final, Native, Public, BlueprintCallable)

void URCTitleGalleryBGMList::SelectBGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryBGMList", "SelectBGM");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzResult._CloseResultWrap
// (Final, Native, Private)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzResult::mCloseResultWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzResult", "_CloseResultWrap");

	Params::RCNzResult_mCloseResultWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzResult._OffDetailWrap
// (Final, Native, Private)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzResult::mOffDetailWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzResult", "_OffDetailWrap");

	Params::RCNzResult_mOffDetailWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzResult._OnDetailWrap
// (Final, Native, Private)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzResult::mOnDetailWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzResult", "_OnDetailWrap");

	Params::RCNzResult_mOnDetailWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleHUD.CheckNzResultClose
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::CheckNzResultClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "CheckNzResultClose");

	Params::RCTitleHUD_CheckNzResultClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.CheckNzResultFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::CheckNzResultFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "CheckNzResultFinished");

	Params::RCTitleHUD_CheckNzResultFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.CheckNzResultStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::CheckNzResultStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "CheckNzResultStarted");

	Params::RCTitleHUD_CheckNzResultStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.ChunkInstallEvent
// (Final, Native, Public)
// Parameters:
// uint32                                  InChunkID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCTitleHUD::ChunkInstallEvent(uint32 InChunkID, bool InSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "ChunkInstallEvent");

	Params::RCTitleHUD_ChunkInstallEvent Parms{};

	Parms.InChunkID = InChunkID;
	Parms.InSuccess = InSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleHUD.NzResultFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::NzResultFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "NzResultFinish");

	Params::RCTitleHUD_NzResultFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.NzResultStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapterNumber                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::NzResultStart(const int32 InChapterNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "NzResultStart");

	Params::RCTitleHUD_NzResultStart Parms{};

	Parms.InChapterNumber = InChapterNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.Tutorial_CloseTutorial
// (Final, Native, Public, BlueprintCallable)

void ARCTitleHUD::Tutorial_CloseTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "Tutorial_CloseTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleHUD.Tutorial_CreateWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::Tutorial_CreateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "Tutorial_CreateWidget");

	Params::RCTitleHUD_Tutorial_CreateWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.Tutorial_IsFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::Tutorial_IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "Tutorial_IsFinished");

	Params::RCTitleHUD_Tutorial_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.Tutorial_IsShowWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::Tutorial_IsShowWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "Tutorial_IsShowWindow");

	Params::RCTitleHUD_Tutorial_IsShowWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.Tutorial_Load
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCTitleHUD::Tutorial_Load()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "Tutorial_Load");

	Params::RCTitleHUD_Tutorial_Load Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUD.Tutorial_RemoveTutorialWindow
// (Final, Native, Public, BlueprintCallable)

void ARCTitleHUD::Tutorial_RemoveTutorialWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "Tutorial_RemoveTutorialWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleHUD.Tutorial_StartTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isAnytimeClosable                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCTitleHUD::Tutorial_StartTutorial(class FName ID, bool isAnytimeClosable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleHUD", "Tutorial_StartTutorial");

	Params::RCTitleHUD_Tutorial_StartTutorial Parms{};

	Parms.ID = ID;
	Parms.isAnytimeClosable = isAnytimeClosable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEffectComponent.CheckEffectActive
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectComponent::CheckEffectActive(struct FRCEffectComponentData& InEffectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "CheckEffectActive");

	Params::RCEffectComponent_CheckEffectActive Parms{};

	Parms.InEffectData = std::move(InEffectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectComponent.EffectActivate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectComponent::EffectActivate(struct FRCEffectComponentData& InEffectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "EffectActivate");

	Params::RCEffectComponent_EffectActivate Parms{};

	Parms.InEffectData = std::move(InEffectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectComponent.EffectDeactivate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectComponent::EffectDeactivate(struct FRCEffectComponentData& InEffectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "EffectDeactivate");

	Params::RCEffectComponent_EffectDeactivate Parms{};

	Parms.InEffectData = std::move(InEffectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectComponent.EffectDestroy
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectComponent::EffectDestroy(struct FRCEffectComponentData& InEffectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "EffectDestroy");

	Params::RCEffectComponent_EffectDestroy Parms{};

	Parms.InEffectData = std::move(InEffectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectComponent.SpawnEffectAtLocation
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InSpawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InSpawnRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCEffectComponent::SpawnEffectAtLocation(struct FRCEffectComponentData& InEffectData, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation, const struct FVector& InScale, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "SpawnEffectAtLocation");

	Params::RCEffectComponent_SpawnEffectAtLocation Parms{};

	Parms.InEffectData = std::move(InEffectData);
	Parms.InSpawnLocation = std::move(InSpawnLocation);
	Parms.InSpawnRotation = std::move(InSpawnRotation);
	Parms.InScale = std::move(InScale);
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectComponent.SpawnEffectAtLocationWithManagedID
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InSpawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InSpawnRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectComponent::SpawnEffectAtLocationWithManagedID(struct FRCEffectComponentData& InEffectData, class FName InManagedID, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation, const struct FVector& InScale, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "SpawnEffectAtLocationWithManagedID");

	Params::RCEffectComponent_SpawnEffectAtLocationWithManagedID Parms{};

	Parms.InEffectData = std::move(InEffectData);
	Parms.InManagedID = InManagedID;
	Parms.InSpawnLocation = std::move(InSpawnLocation);
	Parms.InSpawnRotation = std::move(InSpawnRotation);
	Parms.InScale = std::move(InScale);
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectComponent.SpawnEffectAttached
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class USceneComponent*                  InAttachToComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         InLocationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCEffectComponent::SpawnEffectAttached(struct FRCEffectComponentData& InEffectData, class USceneComponent* InAttachToComponent, class FName InAttachPointName, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector& InScale, EAttachLocation InLocationType, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "SpawnEffectAttached");

	Params::RCEffectComponent_SpawnEffectAttached Parms{};

	Parms.InEffectData = std::move(InEffectData);
	Parms.InAttachToComponent = InAttachToComponent;
	Parms.InAttachPointName = InAttachPointName;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InScale = std::move(InScale);
	Parms.InLocationType = InLocationType;
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectComponent.SpawnEffectAttachedWithManagedID
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InAttachToComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         InLocationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectComponent::SpawnEffectAttachedWithManagedID(struct FRCEffectComponentData& InEffectData, class FName InManagedID, class USceneComponent* InAttachToComponent, class FName InAttachPointName, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector& InScale, EAttachLocation InLocationType, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "SpawnEffectAttachedWithManagedID");

	Params::RCEffectComponent_SpawnEffectAttachedWithManagedID Parms{};

	Parms.InEffectData = std::move(InEffectData);
	Parms.InManagedID = InManagedID;
	Parms.InAttachToComponent = InAttachToComponent;
	Parms.InAttachPointName = InAttachPointName;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InScale = std::move(InScale);
	Parms.InLocationType = InLocationType;
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectComponent.SpawnEffectRainSplashAttachedWithManagedID
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InAttachToComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      InEmitterMesh                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpawnRate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         InLocationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectComponent::SpawnEffectRainSplashAttachedWithManagedID(struct FRCEffectComponentData& InEffectData, class FName InManagedID, class USceneComponent* InAttachToComponent, class FName InAttachPointName, class UStaticMesh* InEmitterMesh, float InOffset, float InSpawnRate, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector& InScale, EAttachLocation InLocationType, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectComponent", "SpawnEffectRainSplashAttachedWithManagedID");

	Params::RCEffectComponent_SpawnEffectRainSplashAttachedWithManagedID Parms{};

	Parms.InEffectData = std::move(InEffectData);
	Parms.InManagedID = InManagedID;
	Parms.InAttachToComponent = InAttachToComponent;
	Parms.InAttachPointName = InAttachPointName;
	Parms.InEmitterMesh = InEmitterMesh;
	Parms.InOffset = InOffset;
	Parms.InSpawnRate = InSpawnRate;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InScale = std::move(InScale);
	Parms.InLocationType = InLocationType;
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.CheckEffectActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::CheckEffectActive(class FName InManagedID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "CheckEffectActive");

	Params::RCEffectManager_CheckEffectActive Parms{};

	Parms.InManagedID = InManagedID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.CheckEffectLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InEffectID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::CheckEffectLoaded(class FName InEffectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "CheckEffectLoaded");

	Params::RCEffectManager_CheckEffectLoaded Parms{};

	Parms.InEffectID = InEffectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.EffectActivate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInReset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::EffectActivate(class FName InManagedID, bool bInReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "EffectActivate");

	Params::RCEffectManager_EffectActivate Parms{};

	Parms.InManagedID = InManagedID;
	Parms.bInReset = bInReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.EffectDeactivate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::EffectDeactivate(class FName InManagedID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "EffectDeactivate");

	Params::RCEffectManager_EffectDeactivate Parms{};

	Parms.InManagedID = InManagedID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.EffectDestroy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::EffectDestroy(class FName InManagedID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "EffectDestroy");

	Params::RCEffectManager_EffectDestroy Parms{};

	Parms.InManagedID = InManagedID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.GetManagedData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCEffectManagedData             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FRCEffectManagedData URCEffectManager::GetManagedData(class FName InManagedID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "GetManagedData");

	Params::RCEffectManager_GetManagedData Parms{};

	Parms.InManagedID = InManagedID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.GetManagedDataNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCEffectManager::GetManagedDataNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "GetManagedDataNum");

	Params::RCEffectManager_GetManagedDataNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.LoadEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InEffectID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::LoadEffect(class FName InEffectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "LoadEffect");

	Params::RCEffectManager_LoadEffect Parms{};

	Parms.InEffectID = InEffectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.OnEffectSequenceFinished
// (Final, Native, Private)
// Parameters:
// class URCEffectSequence*                InEffectSequence                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEffectManager::OnEffectSequenceFinished(class URCEffectSequence* InEffectSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "OnEffectSequenceFinished");

	Params::RCEffectManager_OnEffectSequenceFinished Parms{};

	Parms.InEffectSequence = InEffectSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEffectManager.OnNiagaraFinished
// (Final, Native, Private)
// Parameters:
// class UNiagaraComponent*                InNComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEffectManager::OnNiagaraFinished(class UNiagaraComponent* InNComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "OnNiagaraFinished");

	Params::RCEffectManager_OnNiagaraFinished Parms{};

	Parms.InNComponent = InNComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEffectManager.OnParticleFinished
// (Final, Native, Private)
// Parameters:
// class UParticleSystemComponent*         InPSComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEffectManager::OnParticleFinished(class UParticleSystemComponent* InPSComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "OnParticleFinished");

	Params::RCEffectManager_OnParticleFinished Parms{};

	Parms.InPSComponent = InPSComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEffectManager.ReleaseEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InEffectID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::ReleaseEffect(class FName InEffectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "ReleaseEffect");

	Params::RCEffectManager_ReleaseEffect Parms{};

	Parms.InEffectID = InEffectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.SpawnEffectAtLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEffectID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InSpawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InSpawnRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCEffectManager::SpawnEffectAtLocation(class UObject* InWorldContextObject, class FName InEffectID, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation, const struct FVector& InScale, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "SpawnEffectAtLocation");

	Params::RCEffectManager_SpawnEffectAtLocation Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InEffectID = InEffectID;
	Parms.InSpawnLocation = std::move(InSpawnLocation);
	Parms.InSpawnRotation = std::move(InSpawnRotation);
	Parms.InScale = std::move(InScale);
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.SpawnEffectAtLocationWithManagedID
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEffectID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InSpawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InSpawnRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::SpawnEffectAtLocationWithManagedID(class UObject* InWorldContextObject, class FName InManagedID, class FName InEffectID, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation, const struct FVector& InScale, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "SpawnEffectAtLocationWithManagedID");

	Params::RCEffectManager_SpawnEffectAtLocationWithManagedID Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InManagedID = InManagedID;
	Parms.InEffectID = InEffectID;
	Parms.InSpawnLocation = std::move(InSpawnLocation);
	Parms.InSpawnRotation = std::move(InSpawnRotation);
	Parms.InScale = std::move(InScale);
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.SpawnEffectAttached
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InEffectID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InAttachToComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         InLocationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCEffectManager::SpawnEffectAttached(class FName InEffectID, class USceneComponent* InAttachToComponent, class FName InAttachPointName, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector& InScale, EAttachLocation InLocationType, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "SpawnEffectAttached");

	Params::RCEffectManager_SpawnEffectAttached Parms{};

	Parms.InEffectID = InEffectID;
	Parms.InAttachToComponent = InAttachToComponent;
	Parms.InAttachPointName = InAttachPointName;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InScale = std::move(InScale);
	Parms.InLocationType = InLocationType;
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.SpawnEffectAttachedWithManagedID
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEffectID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InAttachToComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         InLocationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::SpawnEffectAttachedWithManagedID(class FName InManagedID, class FName InEffectID, class USceneComponent* InAttachToComponent, class FName InAttachPointName, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector& InScale, EAttachLocation InLocationType, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "SpawnEffectAttachedWithManagedID");

	Params::RCEffectManager_SpawnEffectAttachedWithManagedID Parms{};

	Parms.InManagedID = InManagedID;
	Parms.InEffectID = InEffectID;
	Parms.InAttachToComponent = InAttachToComponent;
	Parms.InAttachPointName = InAttachPointName;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InScale = std::move(InScale);
	Parms.InLocationType = InLocationType;
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectManager.SpawnEffectRainSplashAttachedWithManagedID
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InManagedID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEffectID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InAttachToComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      InEmitterMesh                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpawnRate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         InLocationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectManager::SpawnEffectRainSplashAttachedWithManagedID(class FName InManagedID, class FName InEffectID, class USceneComponent* InAttachToComponent, class FName InAttachPointName, class UStaticMesh* InEmitterMesh, float InOffset, float InSpawnRate, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector& InScale, EAttachLocation InLocationType, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectManager", "SpawnEffectRainSplashAttachedWithManagedID");

	Params::RCEffectManager_SpawnEffectRainSplashAttachedWithManagedID Parms{};

	Parms.InManagedID = InManagedID;
	Parms.InEffectID = InEffectID;
	Parms.InAttachToComponent = InAttachToComponent;
	Parms.InAttachPointName = InAttachPointName;
	Parms.InEmitterMesh = InEmitterMesh;
	Parms.InOffset = InOffset;
	Parms.InSpawnRate = InSpawnRate;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InScale = std::move(InScale);
	Parms.InLocationType = InLocationType;
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.GetPlayableLoopLevelScriptActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCNazoPlayableLoopLevelScriptActor*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCNazoPlayableLoopLevelScriptActor* URCNazoPlayableLoopLevelScriptActorBFL::GetPlayableLoopLevelScriptActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "GetPlayableLoopLevelScriptActor");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_GetPlayableLoopLevelScriptActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.IsInitialized
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoPlayableLoopLevelScriptActorBFL::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "IsInitialized");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.PlayableLoopCheckFinishedBehindWallClosed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoPlayableLoopLevelScriptActorBFL::PlayableLoopCheckFinishedBehindWallClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "PlayableLoopCheckFinishedBehindWallClosed");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_PlayableLoopCheckFinishedBehindWallClosed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.PlayableLoopCloseBehindWall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoPlayableLoopLevelScriptActorBFL::PlayableLoopCloseBehindWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "PlayableLoopCloseBehindWall");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_PlayableLoopCloseBehindWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.PlayableLoopFinishLoop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoPlayableLoopLevelScriptActorBFL::PlayableLoopFinishLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "PlayableLoopFinishLoop");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_PlayableLoopFinishLoop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.PlayableLoopGetWarpCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNazoPlayableLoopLevelScriptActorBFL::PlayableLoopGetWarpCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "PlayableLoopGetWarpCount");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_PlayableLoopGetWarpCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.PlayableLoopOpenFrontWall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoPlayableLoopLevelScriptActorBFL::PlayableLoopOpenFrontWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "PlayableLoopOpenFrontWall");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_PlayableLoopOpenFrontWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.PlayableLoopSetFreeMoveSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoPlayableLoopLevelScriptActorBFL::PlayableLoopSetFreeMoveSkipEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "PlayableLoopSetFreeMoveSkipEnable");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_PlayableLoopSetFreeMoveSkipEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoPlayableLoopLevelScriptActorBFL.PlayableLoopWarp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoPlayableLoopLevelScriptActorBFL::PlayableLoopWarp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoPlayableLoopLevelScriptActorBFL", "PlayableLoopWarp");

	Params::RCNazoPlayableLoopLevelScriptActorBFL_PlayableLoopWarp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectSequence.SpawnEffectSequenceAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   InLevelSequence                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InSpawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InSpawnRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCEffectSequence*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCEffectSequence* URCEffectSequence::SpawnEffectSequenceAtLocation(class UObject* InWorldContextObject, class ULevelSequence* InLevelSequence, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation, const struct FVector& InScale, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEffectSequence", "SpawnEffectSequenceAtLocation");

	Params::RCEffectSequence_SpawnEffectSequenceAtLocation Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InLevelSequence = InLevelSequence;
	Parms.InSpawnLocation = std::move(InSpawnLocation);
	Parms.InSpawnRotation = std::move(InSpawnRotation);
	Parms.InScale = std::move(InScale);
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectSequence.SpawnEffectSequenceAttached
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InLevelSequence                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InAttachToComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         InLocationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAutoDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPSCPoolMethod                          InPoolingMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCEffectSequence*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCEffectSequence* URCEffectSequence::SpawnEffectSequenceAttached(class ULevelSequence* InLevelSequence, class USceneComponent* InAttachToComponent, class FName InAttachPointName, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector& InScale, EAttachLocation InLocationType, bool bInAutoDestroy, EPSCPoolMethod InPoolingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEffectSequence", "SpawnEffectSequenceAttached");

	Params::RCEffectSequence_SpawnEffectSequenceAttached Parms{};

	Parms.InLevelSequence = InLevelSequence;
	Parms.InAttachToComponent = InAttachToComponent;
	Parms.InAttachPointName = InAttachPointName;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InScale = std::move(InScale);
	Parms.InLocationType = InLocationType;
	Parms.bInAutoDestroy = bInAutoDestroy;
	Parms.InPoolingMethod = InPoolingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectSequence.Activate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInReset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectSequence::Activate(bool bInReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectSequence", "Activate");

	Params::RCEffectSequence_Activate Parms{};

	Parms.bInReset = bInReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectSequence.Deactivate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectSequence::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectSequence", "Deactivate");

	Params::RCEffectSequence_Deactivate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectSequence.Destroy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectSequence::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectSequence", "Destroy");

	Params::RCEffectSequence_Destroy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectSequence.IsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCEffectSequence::IsActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectSequence", "IsActive");

	Params::RCEffectSequence_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEffectSequence.LevelSequenceFinished
// (Final, Native, Protected)

void URCEffectSequence::LevelSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEffectSequence", "LevelSequenceFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeAreaNameID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InAreaNameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeAreaNameID(class FName InAreaNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeAreaNameID");

	Params::RCEnvironmentBFL_ChangeAreaNameID Parms{};

	Parms.InAreaNameID = InAreaNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InCameraID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeCamera(class FName InCameraID, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeCamera");

	Params::RCEnvironmentBFL_ChangeCamera Parms{};

	Parms.InCameraID = InCameraID;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeCharacterDrawLayerList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     IncharacterDrawLayerList                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeCharacterDrawLayerList(const TArray<class FName>& IncharacterDrawLayerList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeCharacterDrawLayerList");

	Params::RCEnvironmentBFL_ChangeCharacterDrawLayerList Parms{};

	Parms.IncharacterDrawLayerList = std::move(IncharacterDrawLayerList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeCharacterMaterialID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InCharacterActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerMaterialID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeCharacterMaterialID(class ARCCharacterRender* InCharacterActor, class FName InPlayerMaterialID, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeCharacterMaterialID");

	Params::RCEnvironmentBFL_ChangeCharacterMaterialID Parms{};

	Parms.InCharacterActor = InCharacterActor;
	Parms.InPlayerMaterialID = InPlayerMaterialID;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeCharacterRainMaterialID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InCharacterActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCEnvironmentChangeRainType            InRainType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeCharacterRainMaterialID(class ARCCharacterRender* InCharacterActor, ERCEnvironmentChangeRainType InRainType, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeCharacterRainMaterialID");

	Params::RCEnvironmentBFL_ChangeCharacterRainMaterialID Parms{};

	Parms.InCharacterActor = InCharacterActor;
	Parms.InRainType = InRainType;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeFaceFilterID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InFaceFilterID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeFaceFilterID(class FName InFaceFilterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeFaceFilterID");

	Params::RCEnvironmentBFL_ChangeFaceFilterID Parms{};

	Parms.InFaceFilterID = InFaceFilterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeFogID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InFogID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeFogID(class FName InFogID, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeFogID");

	Params::RCEnvironmentBFL_ChangeFogID Parms{};

	Parms.InFogID = InFogID;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeMinimapID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMinimapID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeMinimapID(class FName InMinimapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeMinimapID");

	Params::RCEnvironmentBFL_ChangeMinimapID Parms{};

	Parms.InMinimapID = InMinimapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangePlayerMoveSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCEnvironmentChangeSpeedType           InSpeedType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangePlayerMoveSpeed(ERCEnvironmentChangeSpeedType InSpeedType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangePlayerMoveSpeed");

	Params::RCEnvironmentBFL_ChangePlayerMoveSpeed Parms{};

	Parms.InSpeedType = InSpeedType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeRainDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCEnvironmentChangeRainType            InRainType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeRainDraw(ERCEnvironmentChangeRainType InRainType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeRainDraw");

	Params::RCEnvironmentBFL_ChangeRainDraw Parms{};

	Parms.InRainType = InRainType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeShinigamiMaterialID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InCharacterActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerMaterialID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeShinigamiMaterialID(class ARCCharacterRender* InCharacterActor, class FName InPlayerMaterialID, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeShinigamiMaterialID");

	Params::RCEnvironmentBFL_ChangeShinigamiMaterialID Parms{};

	Parms.InCharacterActor = InCharacterActor;
	Parms.InPlayerMaterialID = InPlayerMaterialID;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.ChangeWind
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InWindActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InWindEventName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCEnvironmentBFL::ChangeWind(class FName InWindActorName, class FName InWindEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "ChangeWind");

	Params::RCEnvironmentBFL_ChangeWind Parms{};

	Parms.InWindActorName = InWindActorName;
	Parms.InWindEventName = InWindEventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.GetAreaNameID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCEnvironmentBFL::GetAreaNameID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "GetAreaNameID");

	Params::RCEnvironmentBFL_GetAreaNameID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEnvironmentBFL.GetCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCEnvironmentBFL::GetCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "GetCamera");

	Params::RCEnvironmentBFL_GetCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEnvironmentBFL.GetEnvironmentChangeTrigger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCEnvironmentChangeTrigger*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCEnvironmentChangeTrigger* URCEnvironmentBFL::GetEnvironmentChangeTrigger(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "GetEnvironmentChangeTrigger");

	Params::RCEnvironmentBFL_GetEnvironmentChangeTrigger Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEnvironmentBFL.GetFogID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCEnvironmentBFL::GetFogID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "GetFogID");

	Params::RCEnvironmentBFL_GetFogID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEnvironmentBFL.GetMinimapID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCEnvironmentBFL::GetMinimapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "GetMinimapID");

	Params::RCEnvironmentBFL_GetMinimapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEnvironmentBFL.GetPlayerMoveSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCEnvironmentChangeSpeedType           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCEnvironmentChangeSpeedType URCEnvironmentBFL::GetPlayerMoveSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "GetPlayerMoveSpeed");

	Params::RCEnvironmentBFL_GetPlayerMoveSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEnvironmentBFL.GetRainDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCEnvironmentChangeRainType            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCEnvironmentChangeRainType URCEnvironmentBFL::GetRainDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "GetRainDraw");

	Params::RCEnvironmentBFL_GetRainDraw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCEnvironmentBFL.LoadRecovery
// (Final, Native, Static, Public, BlueprintCallable)

void URCEnvironmentBFL::LoadRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "LoadRecovery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.Reset
// (Final, Native, Static, Public, BlueprintCallable)

void URCEnvironmentBFL::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.SearchFogActor
// (Final, Native, Static, Public, BlueprintCallable)

void URCEnvironmentBFL::SearchFogActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "SearchFogActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.SetDefaultPlayerMoveType
// (Final, Native, Static, Public, BlueprintCallable)

void URCEnvironmentBFL::SetDefaultPlayerMoveType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "SetDefaultPlayerMoveType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.SetDefautFogID
// (Final, Native, Static, Public, BlueprintCallable)

void URCEnvironmentBFL::SetDefautFogID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "SetDefautFogID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentBFL.SetDefautMaterialD
// (Final, Native, Static, Public, BlueprintCallable)

void URCEnvironmentBFL::SetDefautMaterialD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCEnvironmentBFL", "SetDefautMaterialD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentChangeTrigger.OnActorBeginOverlapScriptEntry
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCEnvironmentChangeTrigger::OnActorBeginOverlapScriptEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEnvironmentChangeTrigger", "OnActorBeginOverlapScriptEntry");

	Params::RCEnvironmentChangeTrigger_OnActorBeginOverlapScriptEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEnvironmentChangeTrigger.OnActorEndOverlapScriptEntry
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCEnvironmentChangeTrigger::OnActorEndOverlapScriptEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEnvironmentChangeTrigger", "OnActorEndOverlapScriptEntry");

	Params::RCEnvironmentChangeTrigger_OnActorEndOverlapScriptEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActorBFL.ChangeCheckPointScene
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::ChangeCheckPointScene(bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "ChangeCheckPointScene");

	Params::RCNazoLevelScriptActorBFL_ChangeCheckPointScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RC.RCNazoLevelScriptActorBFL.ChangeCheckPointSceneAtGameOver
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::ChangeCheckPointSceneAtGameOver(bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "ChangeCheckPointSceneAtGameOver");

	Params::RCNazoLevelScriptActorBFL_ChangeCheckPointSceneAtGameOver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RC.RCNazoLevelScriptActorBFL.ChangeFirstScene
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::ChangeFirstScene(bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "ChangeFirstScene");

	Params::RCNazoLevelScriptActorBFL_ChangeFirstScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RC.RCNazoLevelScriptActorBFL.ChangeNextScene
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::ChangeNextScene(bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "ChangeNextScene");

	Params::RCNazoLevelScriptActorBFL_ChangeNextScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RC.RCNazoLevelScriptActorBFL.ChangeScene
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::ChangeScene(bool* bSuccess, class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "ChangeScene");

	Params::RCNazoLevelScriptActorBFL_ChangeScene Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RC.RCNazoLevelScriptActorBFL.GetCurrentSceneID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCNazoLevelScriptActorBFL::GetCurrentSceneID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "GetCurrentSceneID");

	Params::RCNazoLevelScriptActorBFL_GetCurrentSceneID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActorBFL.GetCurrentSceneLevelScriptActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ALevelScriptActor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ALevelScriptActor* URCNazoLevelScriptActorBFL::GetCurrentSceneLevelScriptActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "GetCurrentSceneLevelScriptActor");

	Params::RCNazoLevelScriptActorBFL_GetCurrentSceneLevelScriptActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActorBFL.GetLevelScriptActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCNazoLevelScriptActor*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCNazoLevelScriptActor* URCNazoLevelScriptActorBFL::GetLevelScriptActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "GetLevelScriptActor");

	Params::RCNazoLevelScriptActorBFL_GetLevelScriptActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActorBFL.GotoTitle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::GotoTitle(bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "GotoTitle");

	Params::RCNazoLevelScriptActorBFL_GotoTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RC.RCNazoLevelScriptActorBFL.IsCurrentSceneReady
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoLevelScriptActorBFL::IsCurrentSceneReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "IsCurrentSceneReady");

	Params::RCNazoLevelScriptActorBFL_IsCurrentSceneReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActorBFL.IsCurrentSceneVisibleCompleted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoLevelScriptActorBFL::IsCurrentSceneVisibleCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "IsCurrentSceneVisibleCompleted");

	Params::RCNazoLevelScriptActorBFL_IsCurrentSceneVisibleCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActorBFL.IsInitialized
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoLevelScriptActorBFL::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "IsInitialized");

	Params::RCNazoLevelScriptActorBFL_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActorBFL.IsLoadSceneCompleted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoLevelScriptActorBFL::IsLoadSceneCompleted(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "IsLoadSceneCompleted");

	Params::RCNazoLevelScriptActorBFL_IsLoadSceneCompleted Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLevelScriptActorBFL.LoadNextScene
// (Final, Native, Static, Public, BlueprintCallable)

void URCNazoLevelScriptActorBFL::LoadNextScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "LoadNextScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActorBFL.LoadScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::LoadScene(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "LoadScene");

	Params::RCNazoLevelScriptActorBFL_LoadScene Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActorBFL.ReleaseCurrentScene
// (Final, Native, Static, Public, BlueprintCallable)

void URCNazoLevelScriptActorBFL::ReleaseCurrentScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "ReleaseCurrentScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActorBFL.ReleaseScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::ReleaseScene(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "ReleaseScene");

	Params::RCNazoLevelScriptActorBFL_ReleaseScene Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoLevelScriptActorBFL.StartScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoLevelScriptActorBFL::StartScene(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLevelScriptActorBFL", "StartScene");

	Params::RCNazoLevelScriptActorBFL_StartScene Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEvaluationTitle.InitializeData
// (Final, Native, Public, BlueprintCallable)

void URCEvaluationTitle::InitializeData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEvaluationTitle", "InitializeData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEvaluationTitle.Open
// (Final, Native, Public, BlueprintCallable)

void URCEvaluationTitle::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEvaluationTitle", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEvaluationTitle.PlayFinishAnimation
// (Final, Native, Public, BlueprintCallable)

void URCEvaluationTitle::PlayFinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEvaluationTitle", "PlayFinishAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEvaluationTitle.PlayStartAnimation
// (Final, Native, Public, BlueprintCallable)

void URCEvaluationTitle::PlayStartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEvaluationTitle", "PlayStartAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEvaluationTitle.PlayWaitAnimation
// (Final, Native, Public, BlueprintCallable)

void URCEvaluationTitle::PlayWaitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEvaluationTitle", "PlayWaitAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTriggerSequencerBox.OnActorBeginOverlapPlayerEntry
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCEventTriggerSequencerBox::OnActorBeginOverlapPlayerEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTriggerSequencerBox", "OnActorBeginOverlapPlayerEntry");

	Params::RCEventTriggerSequencerBox_OnActorBeginOverlapPlayerEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTriggerSequencerBox.OnWarp
// (Final, Native, Public)

void ARCEventTriggerSequencerBox::OnWarp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTriggerSequencerBox", "OnWarp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTriggerSequencerBox.OnWarpEnd
// (Final, Native, Public)

void ARCEventTriggerSequencerBox::OnWarpEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTriggerSequencerBox", "OnWarpEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTriggerSequencerBox.OnWarpToLast
// (Final, Native, Public)

void ARCEventTriggerSequencerBox::OnWarpToLast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTriggerSequencerBox", "OnWarpToLast");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCEventTriggerSequencerBox.ResetSequencer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCEventTriggerSequencerBox::ResetSequencer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCEventTriggerSequencerBox", "ResetSequencer");

	Params::RCEventTriggerSequencerBox_ResetSequencer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCForceFeedBackBFL.StartForceFeedBack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreTimeDilation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCForceFeedBackBFL::StartForceFeedBack(class FName InID, bool bSkipPlay, bool bIgnoreTimeDilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCForceFeedBackBFL", "StartForceFeedBack");

	Params::RCForceFeedBackBFL_StartForceFeedBack Parms{};

	Parms.InID = InID;
	Parms.bSkipPlay = bSkipPlay;
	Parms.bIgnoreTimeDilation = bIgnoreTimeDilation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCForceFeedBackBFL.StopForceFeedBack
// (Final, Native, Static, Public, BlueprintCallable)

void URCForceFeedBackBFL::StopForceFeedBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCForceFeedBackBFL", "StopForceFeedBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGameInstance.CheckAssetList
// (Final, Native, Static, Public, BlueprintCallable)

void URCGameInstance::CheckAssetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "CheckAssetList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGameInstance.GetEffectManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URCEffectManager*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCEffectManager* URCGameInstance::GetEffectManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "GetEffectManager");

	Params::RCGameInstance_GetEffectManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGameInstance.GetMovieManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCMovieManager*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCMovieManager* URCGameInstance::GetMovieManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "GetMovieManager");

	Params::RCGameInstance_GetMovieManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGameInstance.GetPlatformUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IRCPlatformUserInterface>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

TScriptInterface<class IRCPlatformUserInterface> URCGameInstance::GetPlatformUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "GetPlatformUser");

	Params::RCGameInstance_GetPlatformUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGameInstance.GetSoundManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCSoundManager*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCSoundManager* URCGameInstance::GetSoundManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "GetSoundManager");

	Params::RCGameInstance_GetSoundManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGameInstance.GetStatusProduction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCProduction                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCProduction URCGameInstance::GetStatusProduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "GetStatusProduction");

	Params::RCGameInstance_GetStatusProduction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGameInstance.IsStatusDlcInstall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCDlcInstall                           InDlc                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCGameInstance::IsStatusDlcInstall(ERCDlcInstall InDlc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "IsStatusDlcInstall");

	Params::RCGameInstance_IsStatusDlcInstall Parms{};

	Parms.InDlc = InDlc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGameInstance.IsStatusGalleryEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCGameInstance::IsStatusGalleryEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "IsStatusGalleryEnable");

	Params::RCGameInstance_IsStatusGalleryEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGameInstance.PrintLogBlueprintCallstack
// (Final, Native, Static, Public, BlueprintCallable)

void URCGameInstance::PrintLogBlueprintCallstack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "PrintLogBlueprintCallstack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGameInstance.QuitGame
// (Final, Native, Static, Public, BlueprintCallable)

void URCGameInstance::QuitGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "QuitGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGameInstance.SetDrawDebugPrint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bDebugDraw                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCGameInstance::SetDrawDebugPrint(bool bDebugDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "SetDrawDebugPrint");

	Params::RCGameInstance_SetDrawDebugPrint Parms{};

	Parms.bDebugDraw = bDebugDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGameInstance.SetStatusProduction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCProduction                           InProduction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCGameInstance::SetStatusProduction(ERCProduction InProduction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGameInstance", "SetStatusProduction");

	Params::RCGameInstance_SetStatusProduction Parms{};

	Parms.InProduction = InProduction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassRipple.UpdateGrassTransform
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassRipple::UpdateGrassTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassRipple", "UpdateGrassTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassRippleTransformer.MakeOriginalTransformArray
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<int32, struct FRCGrassTransformParameter>OutTransformParameters                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void ARCGrassRippleTransformer::MakeOriginalTransformArray(TMap<int32, struct FRCGrassTransformParameter>* OutTransformParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassRippleTransformer", "MakeOriginalTransformArray");

	Params::RCGrassRippleTransformer_MakeOriginalTransformArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransformParameters != nullptr)
		*OutTransformParameters = std::move(Parms.OutTransformParameters);
}


// Function RC.RCGrassRippleTransformer.UpdateGrassTransform
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassRippleTransformer::UpdateGrassTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassRippleTransformer", "UpdateGrassTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassSweepTransformer.CalcLookTiltRotator
// (Final, Native, Static, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          TargetDirection                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotationAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator ARCGrassSweepTransformer::CalcLookTiltRotator(const struct FVector& TargetDirection, float RotationAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCGrassSweepTransformer", "CalcLookTiltRotator");

	Params::RCGrassSweepTransformer_CalcLookTiltRotator Parms{};

	Parms.TargetDirection = std::move(TargetDirection);
	Parms.RotationAngle = RotationAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCGrassSweepTransformer.AppendInteractGrasses
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassSweepTransformer::AppendInteractGrasses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassSweepTransformer", "AppendInteractGrasses");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassSweepTransformer.DeformInitialize
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassSweepTransformer::DeformInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassSweepTransformer", "DeformInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassSweepTransformer.UpdateGrassDeform
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassSweepTransformer::UpdateGrassDeform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassSweepTransformer", "UpdateGrassDeform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCGrassSweepTransformer.UpdateGrassTransform
// (Final, Native, Protected, BlueprintCallable)

void ARCGrassSweepTransformer::UpdateGrassTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCGrassSweepTransformer", "UpdateGrassTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInteractiveFoliageComponent.AddGrassStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCGrassStatus                          Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCInteractiveFoliageComponent::AddGrassStatus(int32 InstanceIndex, ERCGrassStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "AddGrassStatus");

	Params::RCInteractiveFoliageComponent_AddGrassStatus Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInteractiveFoliageComponent.AddGrassTransformer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCGrassTransformer*              Transformer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCInteractiveFoliageComponent::AddGrassTransformer(int32 InstanceIndex, class ARCGrassTransformer* Transformer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "AddGrassTransformer");

	Params::RCInteractiveFoliageComponent_AddGrassTransformer Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.Transformer = Transformer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInteractiveFoliageComponent.GetGrassTransformer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCGrassTransformer*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCGrassTransformer* URCInteractiveFoliageComponent::GetGrassTransformer(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "GetGrassTransformer");

	Params::RCInteractiveFoliageComponent_GetGrassTransformer Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.GetInstancesOverlappingMultiSphereTrace_Hierarchial
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> URCInteractiveFoliageComponent::GetInstancesOverlappingMultiSphereTrace_Hierarchial(const struct FVector& Start, const struct FVector& End, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "GetInstancesOverlappingMultiSphereTrace_Hierarchial");

	Params::RCInteractiveFoliageComponent_GetInstancesOverlappingMultiSphereTrace_Hierarchial Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.GetInstancesOverlappingMultiSphereTrace_InstancedStaticMesh
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> URCInteractiveFoliageComponent::GetInstancesOverlappingMultiSphereTrace_InstancedStaticMesh(const struct FVector& Start, const struct FVector& End, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "GetInstancesOverlappingMultiSphereTrace_InstancedStaticMesh");

	Params::RCInteractiveFoliageComponent_GetInstancesOverlappingMultiSphereTrace_InstancedStaticMesh Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.IsGrassChangingTransform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInteractiveFoliageComponent::IsGrassChangingTransform(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "IsGrassChangingTransform");

	Params::RCInteractiveFoliageComponent_IsGrassChangingTransform Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.IsGrassDeformed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInteractiveFoliageComponent::IsGrassDeformed(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "IsGrassDeformed");

	Params::RCInteractiveFoliageComponent_IsGrassDeformed Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.IsGrassFreshlyDeformed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInteractiveFoliageComponent::IsGrassFreshlyDeformed(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "IsGrassFreshlyDeformed");

	Params::RCInteractiveFoliageComponent_IsGrassFreshlyDeformed Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.IsGrassTrampled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInteractiveFoliageComponent::IsGrassTrampled(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "IsGrassTrampled");

	Params::RCInteractiveFoliageComponent_IsGrassTrampled Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.IsGrassUnDeforming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInteractiveFoliageComponent::IsGrassUnDeforming(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "IsGrassUnDeforming");

	Params::RCInteractiveFoliageComponent_IsGrassUnDeforming Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.IsGrassUnTrampling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCInteractiveFoliageComponent::IsGrassUnTrampling(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "IsGrassUnTrampling");

	Params::RCInteractiveFoliageComponent_IsGrassUnTrampling Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCInteractiveFoliageComponent.RemoveGrassStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCGrassStatus                          Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCInteractiveFoliageComponent::RemoveGrassStatus(int32 InstanceIndex, ERCGrassStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "RemoveGrassStatus");

	Params::RCInteractiveFoliageComponent_RemoveGrassStatus Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInteractiveFoliageComponent.RemoveGrassTransformer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCInteractiveFoliageComponent::RemoveGrassTransformer(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "RemoveGrassTransformer");

	Params::RCInteractiveFoliageComponent_RemoveGrassTransformer Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInteractiveFoliageComponent.SetupOriginalTransformsToDevidedComponents
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          UpperLeft                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChunkSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChunkAmountX                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URCInteractiveFoliageComponent*>ChunkedComponents                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void URCInteractiveFoliageComponent::SetupOriginalTransformsToDevidedComponents(const struct FVector& UpperLeft, float ChunkSize, int32 ChunkAmountX, TArray<class URCInteractiveFoliageComponent*>& ChunkedComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "SetupOriginalTransformsToDevidedComponents");

	Params::RCInteractiveFoliageComponent_SetupOriginalTransformsToDevidedComponents Parms{};

	Parms.UpperLeft = std::move(UpperLeft);
	Parms.ChunkSize = ChunkSize;
	Parms.ChunkAmountX = ChunkAmountX;
	Parms.ChunkedComponents = std::move(ChunkedComponents);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ChunkedComponents = std::move(Parms.ChunkedComponents);
}


// Function RC.RCInteractiveFoliageComponent.StopUpdateTransformerInstances
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Instances                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCInteractiveFoliageComponent::StopUpdateTransformerInstances(const TArray<int32>& Instances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "StopUpdateTransformerInstances");

	Params::RCInteractiveFoliageComponent_StopUpdateTransformerInstances Parms{};

	Parms.Instances = std::move(Instances);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCInteractiveFoliageComponent.GetGrassWaitingToResumeGrowAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InstanceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCInteractiveFoliageComponent::GetGrassWaitingToResumeGrowAlpha(int32 InstanceIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCInteractiveFoliageComponent", "GetGrassWaitingToResumeGrowAlpha");

	Params::RCInteractiveFoliageComponent_GetGrassWaitingToResumeGrowAlpha Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCLevel.ChangeGameLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCLevel::ChangeGameLevel(int32 InChapter, class FName InScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCLevel", "ChangeGameLevel");

	Params::RCLevel_ChangeGameLevel Parms{};

	Parms.InChapter = InChapter;
	Parms.InScene = InScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCLevel.ChangeTitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCLevel::ChangeTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCLevel", "ChangeTitle");

	Params::RCLevel_ChangeTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCLevel.SetAllMeshVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCLevel::SetAllMeshVisible(bool bVisible, bool bIsActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCLevel", "SetAllMeshVisible");

	Params::RCLevel_SetAllMeshVisible Parms{};

	Parms.bVisible = bVisible;
	Parms.bIsActor = bIsActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCLevelStreamingDynamic.LoadLevelInstance
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInitiallyVisible                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutSuccess                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCLevelStreamingDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCLevelStreamingDynamic* URCLevelStreamingDynamic::LoadLevelInstance(class UObject* WorldContextObject, const class FString& LevelName, bool bInInitiallyVisible, bool* bOutSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCLevelStreamingDynamic", "LoadLevelInstance");

	Params::RCLevelStreamingDynamic_LoadLevelInstance Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelName = std::move(LevelName);
	Parms.bInInitiallyVisible = bInInitiallyVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSuccess != nullptr)
		*bOutSuccess = Parms.bOutSuccess;

	return Parms.ReturnValue;
}


// Function RC.RCLevelStreamingDynamic.UnLoadLevelInstance
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCLevelStreamingDynamic*         StreamingLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutSuccess                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCLevelStreamingDynamic::UnLoadLevelInstance(class UObject* WorldContextObject, class URCLevelStreamingDynamic* StreamingLevel, bool* bOutSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCLevelStreamingDynamic", "UnLoadLevelInstance");

	Params::RCLevelStreamingDynamic_UnLoadLevelInstance Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StreamingLevel = StreamingLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSuccess != nullptr)
		*bOutSuccess = Parms.bOutSuccess;
}


// Function RC.RCText3DActor.GetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ARCText3DActor::GetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCText3DActor", "GetText");

	Params::RCText3DActor_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCText3DActor.GetTextSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          OutTextSize                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCText3DActor::GetTextSize(struct FVector* OutTextSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCText3DActor", "GetTextSize");

	Params::RCText3DActor_GetTextSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTextSize != nullptr)
		*OutTextSize = std::move(Parms.OutTextSize);
}


// Function RC.RCText3DActor.IsPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCText3DActor::IsPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCText3DActor", "IsPause");

	Params::RCText3DActor_IsPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCText3DActor.IsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCText3DActor::IsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCText3DActor", "IsVisibility");

	Params::RCText3DActor_IsVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCText3DActor.SetPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPause                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCText3DActor::SetPause(bool bInPause, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCText3DActor", "SetPause");

	Params::RCText3DActor_SetPause Parms{};

	Parms.bInPause = bInPause;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCText3DActor.SetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDirect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCText3DActor::SetVisibility(bool bInVisible, bool bDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCText3DActor", "SetVisibility");

	Params::RCText3DActor_SetVisibility Parms{};

	Parms.bInVisible = bInVisible;
	Parms.bDirect = bDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCText3DActor.SetWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActorScale                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExceptJA                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCText3DActor::SetWidth(float Width, bool bActorScale, bool bExceptJA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCText3DActor", "SetWidth");

	Params::RCText3DActor_SetWidth Parms{};

	Parms.Width = Width;
	Parms.bActorScale = bActorScale;
	Parms.bExceptJA = bExceptJA;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCLocalizeText3DActor.GetTextID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCLocalizeText3DActor::GetTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCLocalizeText3DActor", "GetTextID");

	Params::RCLocalizeText3DActor_GetTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCLocalizeText3DActor.SetTextID
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCLocalizeText3DActor::SetTextID(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCLocalizeText3DActor", "SetTextID");

	Params::RCLocalizeText3DActor_SetTextID Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.ChangeDecide
// (Final, Native, Public, BlueprintCallable)

void URCMenuButtonChip::ChangeDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "ChangeDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.ChangeNormal
// (Final, Native, Public, BlueprintCallable)

void URCMenuButtonChip::ChangeNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "ChangeNormal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.ChangeSelect
// (Final, Native, Public, BlueprintCallable)

void URCMenuButtonChip::ChangeSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "ChangeSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.OnChangeDecide
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnChangeDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnChangeDecide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnChangeDisable
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnChangeDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnChangeDisable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnChangeNormal
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnChangeNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnChangeNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnChangeSelect
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnChangeSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnChangeSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnDecideHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnDecideHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnDecideHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnDisableHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnDisableHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnDisableHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnDisableShowStarted
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnDisableShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnDisableShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnNormalHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnNormalHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnNormalHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnNormalShowStarted
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnNormalShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnNormalShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnSelectHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuButtonChip::OnSelectHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnSelectHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuButtonChip.OnValueDownKey
// (Final, Native, Public)

void URCMenuButtonChip::OnValueDownKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnValueDownKey");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.OnValueMax
// (Final, Native, Public)

void URCMenuButtonChip::OnValueMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnValueMax");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.OnValueMin
// (Final, Native, Public)

void URCMenuButtonChip::OnValueMin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnValueMin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.OnValueNonMax
// (Final, Native, Public)

void URCMenuButtonChip::OnValueNonMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnValueNonMax");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.OnValueNonMin
// (Final, Native, Public)

void URCMenuButtonChip::OnValueNonMin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnValueNonMin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonChip.OnValueUpKey
// (Final, Native, Public)

void URCMenuButtonChip::OnValueUpKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonChip", "OnValueUpKey");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonText.OnNextItem
// (Final, Native, Public)

void URCMenuButtonText::OnNextItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonText", "OnNextItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuButtonText.OnPreviousItem
// (Final, Native, Public)

void URCMenuButtonText::OnPreviousItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuButtonText", "OnPreviousItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuCollection.CollectionSelectNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCMenuCollection::CollectionSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollection", "CollectionSelectNavigation");

	Params::RCMenuCollection_CollectionSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMenuCollection.PageJump
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPageIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMenuCollection::PageJump(int32 InPageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollection", "PageJump");

	Params::RCMenuCollection_PageJump Parms{};

	Parms.InPageIndex = InPageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuCollection.PageNext
// (Final, Native, Public, BlueprintCallable)

void URCMenuCollection::PageNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollection", "PageNext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuCollection.PagePrev
// (Final, Native, Public, BlueprintCallable)

void URCMenuCollection::PagePrev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollection", "PagePrev");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuCollection.PushDecide
// (Final, Native, Public, BlueprintCallable)

void URCMenuCollection::PushDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollection", "PushDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuCollectionLayout.CancelWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMenuCollectionLayout::CancelWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollectionLayout", "CancelWrap");

	Params::RCMenuCollectionLayout_CancelWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuCollectionLayout.DecideWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMenuCollectionLayout::DecideWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollectionLayout", "DecideWrap");

	Params::RCMenuCollectionLayout_DecideWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddChapterValueDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::AddChapterValueDirect(class FName InChapterVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddChapterValueDirect");

	Params::RCVariableBFL_AddChapterValueDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddGameValueDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::AddGameValueDirect(class FName InGameVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddGameValueDirect");

	Params::RCVariableBFL_AddGameValueDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InVoiceID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::AddLog(int32 InCharacterFaceID, int32 InCharacterFacialID, class FName InTextID, class FName InVoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddLog");

	Params::RCVariableBFL_AddLog Parms{};

	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;
	Parms.InTextID = InTextID;
	Parms.InVoiceID = InVoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddMainQuestPhase
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::AddMainQuestPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddMainQuestPhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoBattleAssist
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::AddNazoBattleAssist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoBattleAssist");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoBattleClear3Way
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::AddNazoBattleClear3Way()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoBattleClear3Way");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoBattleGayaSlash
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::AddNazoBattleGayaSlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoBattleGayaSlash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoBattleHajiki
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::AddNazoBattleHajiki()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoBattleHajiki");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoBattleHanronSlash
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::AddNazoBattleHanronSlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoBattleHanronSlash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoBattleJustMove
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::AddNazoBattleJustMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoBattleJustMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoResultContinue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InRound                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::AddNazoResultContinue(int32 InRound, class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoResultContinue");

	Params::RCVariableBFL_AddNazoResultContinue Parms{};

	Parms.InRound = InRound;
	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoResultFailureCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::AddNazoResultFailureCount(class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoResultFailureCount");

	Params::RCVariableBFL_AddNazoResultFailureCount Parms{};

	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddNazoResultFailureCount2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::AddNazoResultFailureCount2(class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddNazoResultFailureCount2");

	Params::RCVariableBFL_AddNazoResultFailureCount2 Parms{};

	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddResultTanteiPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTanteiPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::AddResultTanteiPoint(int32 InChapter, int32 InTanteiPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddResultTanteiPoint");

	Params::RCVariableBFL_AddResultTanteiPoint Parms{};

	Parms.InChapter = InChapter;
	Parms.InTanteiPoint = InTanteiPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.AddSceneValueDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::AddSceneValueDirect(class FName InSceneVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddSceneValueDirect");

	Params::RCVariableBFL_AddSceneValueDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.AddTanteiPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InTanteiPointID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::AddTanteiPoint(class FName InTanteiPointID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "AddTanteiPoint");

	Params::RCVariableBFL_AddTanteiPoint Parms{};

	Parms.InTanteiPointID = InTanteiPointID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.ClearBusStopMove
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::ClearBusStopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ClearBusStopMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.ClearBusStopStatusFromAreamap
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::ClearBusStopStatusFromAreamap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ClearBusStopStatusFromAreamap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.ClearMainQuestPhase
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::ClearMainQuestPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ClearMainQuestPhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.ClearNazoResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::ClearNazoResult(int32 InChapter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ClearNazoResult");

	Params::RCVariableBFL_ClearNazoResult Parms{};

	Parms.InChapter = InChapter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.ClearNazoResultContinue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InRound                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::ClearNazoResultContinue(int32 InRound, class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ClearNazoResultContinue");

	Params::RCVariableBFL_ClearNazoResultContinue Parms{};

	Parms.InRound = InRound;
	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.ClearNazoResultCount
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::ClearNazoResultCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ClearNazoResultCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.ClearSaveGameLevelInfo
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::ClearSaveGameLevelInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ClearSaveGameLevelInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.CreateSaveGameLevelInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::CreateSaveGameLevelInfo(int32 InChapter, class FName InScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "CreateSaveGameLevelInfo");

	Params::RCVariableBFL_CreateSaveGameLevelInfo Parms{};

	Parms.InChapter = InChapter;
	Parms.InScene = InScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.EndNazoResultScene
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::EndNazoResultScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "EndNazoResultScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.GetBusStopStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCRealEventMapConnectStatus            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCRealEventMapConnectStatus URCVariableBFL::GetBusStopStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetBusStopStatus");

	Params::RCVariableBFL_GetBusStopStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetBusStopStatusFromAreamap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCRealEventMapConnectBusStopStatus     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCRealEventMapConnectBusStopStatus URCVariableBFL::GetBusStopStatusFromAreamap(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetBusStopStatusFromAreamap");

	Params::RCVariableBFL_GetBusStopStatusFromAreamap Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetChapter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetChapter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetChapter");

	Params::RCVariableBFL_GetChapter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetChapterVariableDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetChapterVariableDirect(class FName InChapterVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetChapterVariableDirect");

	Params::RCVariableBFL_GetChapterVariableDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetEndLogNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetEndLogNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetEndLogNum");

	Params::RCVariableBFL_GetEndLogNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetGalleryMenuMovieListIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetGalleryMenuMovieListIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetGalleryMenuMovieListIndex");

	Params::RCVariableBFL_GetGalleryMenuMovieListIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetGalleryMenuMovieSoundTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* URCVariableBFL::GetGalleryMenuMovieSoundTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetGalleryMenuMovieSoundTable");

	Params::RCVariableBFL_GetGalleryMenuMovieSoundTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetGalleryMenuPlayingMovieID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetGalleryMenuPlayingMovieID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetGalleryMenuPlayingMovieID");

	Params::RCVariableBFL_GetGalleryMenuPlayingMovieID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCGameMode                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCGameMode URCVariableBFL::GetGameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetGameMode");

	Params::RCVariableBFL_GetGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetGameVariableDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetGameVariableDirect(class FName InGameVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetGameVariableDirect");

	Params::RCVariableBFL_GetGameVariableDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetLastAccessActorName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetLastAccessActorName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetLastAccessActorName");

	Params::RCVariableBFL_GetLastAccessActorName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetLastCameraTagName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetLastCameraTagName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetLastCameraTagName");

	Params::RCVariableBFL_GetLastCameraTagName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetLastLogNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetLastLogNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetLastLogNum");

	Params::RCVariableBFL_GetLastLogNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetLog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRCVariableLogInfo>       OutLogList                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   StartLogNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EndLogNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::GetLog(TArray<struct FRCVariableLogInfo>* OutLogList, int32 StartLogNum, int32 EndLogNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetLog");

	Params::RCVariableBFL_GetLog Parms{};

	Parms.StartLogNum = StartLogNum;
	Parms.EndLogNum = EndLogNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLogList != nullptr)
		*OutLogList = std::move(Parms.OutLogList);

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetLogMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetLogMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetLogMax");

	Params::RCVariableBFL_GetLogMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetMainQuestPhase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetMainQuestPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetMainQuestPhase");

	Params::RCVariableBFL_GetMainQuestPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetMapID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetMapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetMapID");

	Params::RCVariableBFL_GetMapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetMapIDLong
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetMapIDLong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetMapIDLong");

	Params::RCVariableBFL_GetMapIDLong Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetNazoResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCVariableNazoResultList        OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCurrent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::GetNazoResult(struct FRCVariableNazoResultList* OutData, int32 InChapter, bool bCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetNazoResult");

	Params::RCVariableBFL_GetNazoResult Parms{};

	Parms.InChapter = InChapter;
	Parms.bCurrent = bCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);
}


// Function RC.RCVariableBFL.GetNazoResultContinue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InRound                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetNazoResultContinue(int32 InRound, class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetNazoResultContinue");

	Params::RCVariableBFL_GetNazoResultContinue Parms{};

	Parms.InRound = InRound;
	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetNazoResultNowMinigameID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetNazoResultNowMinigameID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetNazoResultNowMinigameID");

	Params::RCVariableBFL_GetNazoResultNowMinigameID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetNextChapter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetNextChapter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetNextChapter");

	Params::RCVariableBFL_GetNextChapter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetNextMapID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetNextMapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetNextMapID");

	Params::RCVariableBFL_GetNextMapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetNextMapIDLong
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetNextMapIDLong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetNextMapIDLong");

	Params::RCVariableBFL_GetNextMapIDLong Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetNextPlayerStartName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetNextPlayerStartName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetNextPlayerStartName");

	Params::RCVariableBFL_GetNextPlayerStartName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetNextScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetNextScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetNextScene");

	Params::RCVariableBFL_GetNextScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetOldChapter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetOldChapter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetOldChapter");

	Params::RCVariableBFL_GetOldChapter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetOldMapID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetOldMapID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetOldMapID");

	Params::RCVariableBFL_GetOldMapID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetOldMapIDLong
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetOldMapIDLong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetOldMapIDLong");

	Params::RCVariableBFL_GetOldMapIDLong Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetOldScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetOldScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetOldScene");

	Params::RCVariableBFL_GetOldScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetPlayerStartName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetPlayerStartName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetPlayerStartName");

	Params::RCVariableBFL_GetPlayerStartName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetSaveLoadMapName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetSaveLoadMapName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetSaveLoadMapName");

	Params::RCVariableBFL_GetSaveLoadMapName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableBFL::GetScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetScene");

	Params::RCVariableBFL_GetScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetSceneVariableDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetSceneVariableDirect(class FName InSceneVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetSceneVariableDirect");

	Params::RCVariableBFL_GetSceneVariableDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetStoryMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCStoryMode                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCStoryMode URCVariableBFL::GetStoryMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetStoryMode");

	Params::RCVariableBFL_GetStoryMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetTitleBackListIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetTitleBackListIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetTitleBackListIndex");

	Params::RCVariableBFL_GetTitleBackListIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetTitleCollectionEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::GetTitleCollectionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetTitleCollectionEvent");

	Params::RCVariableBFL_GetTitleCollectionEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetTitleFrontListIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetTitleFrontListIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetTitleFrontListIndex");

	Params::RCVariableBFL_GetTitleFrontListIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetTitleGalleryMovieEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::GetTitleGalleryMovieEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetTitleGalleryMovieEvent");

	Params::RCVariableBFL_GetTitleGalleryMovieEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.GetTotalTanteiPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableBFL::GetTotalTanteiPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "GetTotalTanteiPoint");

	Params::RCVariableBFL_GetTotalTanteiPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.InitNazoResult
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::InitNazoResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "InitNazoResult");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.IsBusStopMove
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsBusStopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsBusStopMove");

	Params::RCVariableBFL_IsBusStopMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterClear
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCChapter                              InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterClear(ERCChapter InChapter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterClear");

	Params::RCVariableBFL_IsChapterClear Parms{};

	Parms.InChapter = InChapter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValueEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValueEqualDirect(class FName InChapterVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValueEqualDirect");

	Params::RCVariableBFL_IsChapterValueEqualDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValueLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValueLargeDirect(class FName InChapterVariableName, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValueLargeDirect");

	Params::RCVariableBFL_IsChapterValueLargeDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValueNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValueNotZeroDirect(class FName InChapterVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValueNotZeroDirect");

	Params::RCVariableBFL_IsChapterValueNotZeroDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesAndEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesAndEqualDirect(const TArray<class FName>& InChapterVariableNameList, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesAndEqualDirect");

	Params::RCVariableBFL_IsChapterValuesAndEqualDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesAndLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesAndLargeDirect(const TArray<class FName>& InChapterVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesAndLargeDirect");

	Params::RCVariableBFL_IsChapterValuesAndLargeDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesAndNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesAndNotZeroDirect(const TArray<class FName>& InChapterVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesAndNotZeroDirect");

	Params::RCVariableBFL_IsChapterValuesAndNotZeroDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesAndSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesAndSmallDirect(const TArray<class FName>& InChapterVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesAndSmallDirect");

	Params::RCVariableBFL_IsChapterValuesAndSmallDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesAndZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesAndZeroDirect(const TArray<class FName>& InChapterVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesAndZeroDirect");

	Params::RCVariableBFL_IsChapterValuesAndZeroDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValueSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValueSmallDirect(class FName InChapterVariableName, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValueSmallDirect");

	Params::RCVariableBFL_IsChapterValueSmallDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesOrEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesOrEqualDirect(const TArray<class FName>& InChapterVariableNameList, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesOrEqualDirect");

	Params::RCVariableBFL_IsChapterValuesOrEqualDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesOrLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesOrLargeDirect(const TArray<class FName>& InChapterVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesOrLargeDirect");

	Params::RCVariableBFL_IsChapterValuesOrLargeDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesOrNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesOrNotZeroDirect(const TArray<class FName>& InChapterVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesOrNotZeroDirect");

	Params::RCVariableBFL_IsChapterValuesOrNotZeroDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesOrSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesOrSmallDirect(const TArray<class FName>& InChapterVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesOrSmallDirect");

	Params::RCVariableBFL_IsChapterValuesOrSmallDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValuesOrZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InChapterVariableNameList                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValuesOrZeroDirect(const TArray<class FName>& InChapterVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValuesOrZeroDirect");

	Params::RCVariableBFL_IsChapterValuesOrZeroDirect Parms{};

	Parms.InChapterVariableNameList = std::move(InChapterVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsChapterValueZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsChapterValueZeroDirect(class FName InChapterVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsChapterValueZeroDirect");

	Params::RCVariableBFL_IsChapterValueZeroDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsCollectionEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsCollectionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsCollectionEvent");

	Params::RCVariableBFL_IsCollectionEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsCollectionEventStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsCollectionEventStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsCollectionEventStart");

	Params::RCVariableBFL_IsCollectionEventStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsCollectionStoryScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsCollectionStoryScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsCollectionStoryScene");

	Params::RCVariableBFL_IsCollectionStoryScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsDataLoadReturn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsDataLoadReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsDataLoadReturn");

	Params::RCVariableBFL_IsDataLoadReturn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsDrawDisableSubQuest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsDrawDisableSubQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsDrawDisableSubQuest");

	Params::RCVariableBFL_IsDrawDisableSubQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsEnableSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsEnableSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsEnableSaveData");

	Params::RCVariableBFL_IsEnableSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsEnableSaveDataSubStory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsEnableSaveDataSubStory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsEnableSaveDataSubStory");

	Params::RCVariableBFL_IsEnableSaveDataSubStory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsExecMenuSceneLoad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsExecMenuSceneLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsExecMenuSceneLoad");

	Params::RCVariableBFL_IsExecMenuSceneLoad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsFreeMoveSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsFreeMoveSkipEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsFreeMoveSkipEnable");

	Params::RCVariableBFL_IsFreeMoveSkipEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGalleryMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGalleryMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGalleryMode");

	Params::RCVariableBFL_IsGalleryMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameClear
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameClear");

	Params::RCVariableBFL_IsGameClear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValueEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValueEqualDirect(class FName InGameVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValueEqualDirect");

	Params::RCVariableBFL_IsGameValueEqualDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValueLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValueLargeDirect(class FName InGameVariableName, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValueLargeDirect");

	Params::RCVariableBFL_IsGameValueLargeDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValueNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValueNotZeroDirect(class FName InGameVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValueNotZeroDirect");

	Params::RCVariableBFL_IsGameValueNotZeroDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesAndEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesAndEqualDirect(const TArray<class FName>& InGameVariableNameList, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesAndEqualDirect");

	Params::RCVariableBFL_IsGameValuesAndEqualDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesAndLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesAndLargeDirect(const TArray<class FName>& InGameVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesAndLargeDirect");

	Params::RCVariableBFL_IsGameValuesAndLargeDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesAndNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesAndNotZeroDirect(const TArray<class FName>& InGameVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesAndNotZeroDirect");

	Params::RCVariableBFL_IsGameValuesAndNotZeroDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesAndSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesAndSmallDirect(const TArray<class FName>& InGameVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesAndSmallDirect");

	Params::RCVariableBFL_IsGameValuesAndSmallDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesAndZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesAndZeroDirect(const TArray<class FName>& InGameVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesAndZeroDirect");

	Params::RCVariableBFL_IsGameValuesAndZeroDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValueSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValueSmallDirect(class FName InGameVariableName, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValueSmallDirect");

	Params::RCVariableBFL_IsGameValueSmallDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesOrEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesOrEqualDirect(const TArray<class FName>& InGameVariableNameList, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesOrEqualDirect");

	Params::RCVariableBFL_IsGameValuesOrEqualDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesOrLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesOrLargeDirect(const TArray<class FName>& InGameVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesOrLargeDirect");

	Params::RCVariableBFL_IsGameValuesOrLargeDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesOrNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesOrNotZeroDirect(const TArray<class FName>& InGameVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesOrNotZeroDirect");

	Params::RCVariableBFL_IsGameValuesOrNotZeroDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesOrSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesOrSmallDirect(const TArray<class FName>& InGameVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesOrSmallDirect");

	Params::RCVariableBFL_IsGameValuesOrSmallDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValuesOrZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InGameVariableNameList                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValuesOrZeroDirect(const TArray<class FName>& InGameVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValuesOrZeroDirect");

	Params::RCVariableBFL_IsGameValuesOrZeroDirect Parms{};

	Parms.InGameVariableNameList = std::move(InGameVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsGameValueZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsGameValueZeroDirect(class FName InGameVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsGameValueZeroDirect");

	Params::RCVariableBFL_IsGameValueZeroDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsMessageAuto
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsMessageAuto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsMessageAuto");

	Params::RCVariableBFL_IsMessageAuto Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsMovieSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsMovieSkipEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsMovieSkipEnable");

	Params::RCVariableBFL_IsMovieSkipEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSaveEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSaveEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSaveEnable");

	Params::RCVariableBFL_IsSaveEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneChange");

	Params::RCVariableBFL_IsSceneChange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValueEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValueEqualDirect(class FName InSceneVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValueEqualDirect");

	Params::RCVariableBFL_IsSceneValueEqualDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValueLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValueLargeDirect(class FName InSceneVariableName, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValueLargeDirect");

	Params::RCVariableBFL_IsSceneValueLargeDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValueNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValueNotZeroDirect(class FName InSceneVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValueNotZeroDirect");

	Params::RCVariableBFL_IsSceneValueNotZeroDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesAndEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesAndEqualDirect(const TArray<class FName>& InSceneVariableNameList, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesAndEqualDirect");

	Params::RCVariableBFL_IsSceneValuesAndEqualDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesAndLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesAndLargeDirect(const TArray<class FName>& InSceneVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesAndLargeDirect");

	Params::RCVariableBFL_IsSceneValuesAndLargeDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesAndNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesAndNotZeroDirect(const TArray<class FName>& InSceneVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesAndNotZeroDirect");

	Params::RCVariableBFL_IsSceneValuesAndNotZeroDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesAndSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesAndSmallDirect(const TArray<class FName>& InSceneVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesAndSmallDirect");

	Params::RCVariableBFL_IsSceneValuesAndSmallDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesAndZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesAndZeroDirect(const TArray<class FName>& InSceneVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesAndZeroDirect");

	Params::RCVariableBFL_IsSceneValuesAndZeroDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValueSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValueSmallDirect(class FName InSceneVariableName, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValueSmallDirect");

	Params::RCVariableBFL_IsSceneValueSmallDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesOrEqualDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesOrEqualDirect(const TArray<class FName>& InSceneVariableNameList, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesOrEqualDirect");

	Params::RCVariableBFL_IsSceneValuesOrEqualDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesOrLargeDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesOrLargeDirect(const TArray<class FName>& InSceneVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesOrLargeDirect");

	Params::RCVariableBFL_IsSceneValuesOrLargeDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesOrNotZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesOrNotZeroDirect(const TArray<class FName>& InSceneVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesOrNotZeroDirect");

	Params::RCVariableBFL_IsSceneValuesOrNotZeroDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesOrSmallDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEqual                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesOrSmallDirect(const TArray<class FName>& InSceneVariableNameList, int32 InValue, bool bEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesOrSmallDirect");

	Params::RCVariableBFL_IsSceneValuesOrSmallDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);
	Parms.InValue = InValue;
	Parms.bEqual = bEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValuesOrZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InSceneVariableNameList                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValuesOrZeroDirect(const TArray<class FName>& InSceneVariableNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValuesOrZeroDirect");

	Params::RCVariableBFL_IsSceneValuesOrZeroDirect Parms{};

	Parms.InSceneVariableNameList = std::move(InSceneVariableNameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSceneValueZeroDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSceneValueZeroDirect(class FName InSceneVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSceneValueZeroDirect");

	Params::RCVariableBFL_IsSceneValueZeroDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSelectAlready
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSelectAlready(class FName InSceneID, class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSelectAlready");

	Params::RCVariableBFL_IsSelectAlready Parms{};

	Parms.InSceneID = InSceneID;
	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsSkipEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsSkipEnable");

	Params::RCVariableBFL_IsSkipEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsStartDebugMenuDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsStartDebugMenuDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsStartDebugMenuDraw");

	Params::RCVariableBFL_IsStartDebugMenuDraw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.IsTitleMenuInitListFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableBFL::IsTitleMenuInitListFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "IsTitleMenuInitListFlag");

	Params::RCVariableBFL_IsTitleMenuInitListFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableBFL.OpenDebugMenu
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::OpenDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "OpenDebugMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.ResetCollectionEvent
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::ResetCollectionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ResetCollectionEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.ResetSaveLoadMapName
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::ResetSaveLoadMapName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "ResetSaveLoadMapName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetBusStopStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCRealEventMapConnectStatus            InBusStopStatus                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetBusStopStatus(ERCRealEventMapConnectStatus InBusStopStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetBusStopStatus");

	Params::RCVariableBFL_SetBusStopStatus Parms{};

	Parms.InBusStopStatus = InBusStopStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetBusStopStatusFromAreamap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCRealEventMapConnectBusStopStatus     InSatus                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetBusStopStatusFromAreamap(class FName InMapID, ERCRealEventMapConnectBusStopStatus InSatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetBusStopStatusFromAreamap");

	Params::RCVariableBFL_SetBusStopStatusFromAreamap Parms{};

	Parms.InMapID = InMapID;
	Parms.InSatus = InSatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetChapterClear
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCChapter                              InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetChapterClear(ERCChapter InChapter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetChapterClear");

	Params::RCVariableBFL_SetChapterClear Parms{};

	Parms.InChapter = InChapter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetChapterVariableDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetChapterVariableDirect(class FName InChapterVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetChapterVariableDirect");

	Params::RCVariableBFL_SetChapterVariableDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetCollectionEventBack
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::SetCollectionEventBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetCollectionEventBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetCollectionEventStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetCollectionEventStart(int32 InChapter, class FName InScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetCollectionEventStart");

	Params::RCVariableBFL_SetCollectionEventStart Parms{};

	Parms.InChapter = InChapter;
	Parms.InScene = InScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetDataLoadReturn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetDataLoadReturn(bool bIsFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetDataLoadReturn");

	Params::RCVariableBFL_SetDataLoadReturn Parms{};

	Parms.bIsFlag = bIsFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetDrawDisableSubQuest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetDrawDisableSubQuest(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetDrawDisableSubQuest");

	Params::RCVariableBFL_SetDrawDisableSubQuest Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetEnableSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetEnableSaveData(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetEnableSaveData");

	Params::RCVariableBFL_SetEnableSaveData Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetEnableSaveDataSubStory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetEnableSaveDataSubStory(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetEnableSaveDataSubStory");

	Params::RCVariableBFL_SetEnableSaveDataSubStory Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetExecMenuSceneLoad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetExecMenuSceneLoad(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetExecMenuSceneLoad");

	Params::RCVariableBFL_SetExecMenuSceneLoad Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetFreeMoveSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetFreeMoveSkipEnable(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetFreeMoveSkipEnable");

	Params::RCVariableBFL_SetFreeMoveSkipEnable Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetGalleryMenuMovieListIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InListIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetGalleryMenuMovieListIndex(int32 InListIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetGalleryMenuMovieListIndex");

	Params::RCVariableBFL_SetGalleryMenuMovieListIndex Parms{};

	Parms.InListIndex = InListIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetGalleryMenuMovieSoundTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InSoundTable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetGalleryMenuMovieSoundTable(class UDataTable* InSoundTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetGalleryMenuMovieSoundTable");

	Params::RCVariableBFL_SetGalleryMenuMovieSoundTable Parms{};

	Parms.InSoundTable = InSoundTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetGalleryMenuPlayingMovieID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMovieID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetGalleryMenuPlayingMovieID(class FName InMovieID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetGalleryMenuPlayingMovieID");

	Params::RCVariableBFL_SetGalleryMenuPlayingMovieID Parms{};

	Parms.InMovieID = InMovieID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetGalleryMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetGalleryMode(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetGalleryMode");

	Params::RCVariableBFL_SetGalleryMode Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetGameClear
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::SetGameClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetGameClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCGameMode                             InGameMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetGameMode(ERCGameMode InGameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetGameMode");

	Params::RCVariableBFL_SetGameMode Parms{};

	Parms.InGameMode = InGameMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetGameVariableDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetGameVariableDirect(class FName InGameVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetGameVariableDirect");

	Params::RCVariableBFL_SetGameVariableDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetLastCameraTagName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InCameraTagName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetLastCameraTagName(class FName InCameraTagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetLastCameraTagName");

	Params::RCVariableBFL_SetLastCameraTagName Parms{};

	Parms.InCameraTagName = InCameraTagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetMainQuestPhase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetMainQuestPhase(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetMainQuestPhase");

	Params::RCVariableBFL_SetMainQuestPhase Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetMessageAuto
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetMessageAuto(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetMessageAuto");

	Params::RCVariableBFL_SetMessageAuto Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetMovieSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetMovieSkipEnable(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetMovieSkipEnable");

	Params::RCVariableBFL_SetMovieSkipEnable Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultContinueCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoResultContinueCount(int32 InChapter, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultContinueCount");

	Params::RCVariableBFL_SetNazoResultContinueCount Parms{};

	Parms.InChapter = InChapter;
	Parms.InCount = InCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultFailureCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoResultFailureCount(int32 InCount, class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultFailureCount");

	Params::RCVariableBFL_SetNazoResultFailureCount Parms{};

	Parms.InCount = InCount;
	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultHpRank
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCNzResultRankValue                    InRank                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoResultHpRank(int32 InChapter, ERCNzResultRankValue InRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultHpRank");

	Params::RCVariableBFL_SetNazoResultHpRank Parms{};

	Parms.InChapter = InChapter;
	Parms.InRank = InRank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoResultPoint(int32 InChapter, int32 InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultPoint");

	Params::RCVariableBFL_SetNazoResultPoint Parms{};

	Parms.InChapter = InChapter;
	Parms.InPoint = InPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultRank
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCNzResultRankValue                    InRank                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoResultRank(int32 InChapter, ERCNzResultRankValue InRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultRank");

	Params::RCVariableBFL_SetNazoResultRank Parms{};

	Parms.InChapter = InChapter;
	Parms.InRank = InRank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultSave
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::SetNazoResultSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoResultScene(class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultScene");

	Params::RCVariableBFL_SetNazoResultScene Parms{};

	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultTanteiPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InTanteiPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoResultTanteiPoint(int32 InTanteiPoint, class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultTanteiPoint");

	Params::RCVariableBFL_SetNazoResultTanteiPoint Parms{};

	Parms.InTanteiPoint = InTanteiPoint;
	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoResultTanteiPoint2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InTanteiPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMinigameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoResultTanteiPoint2(int32 InTanteiPoint, class FName InMinigameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoResultTanteiPoint2");

	Params::RCVariableBFL_SetNazoResultTanteiPoint2 Parms{};

	Parms.InTanteiPoint = InTanteiPoint;
	Parms.InMinigameID = InMinigameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNazoRewardPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRewardPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNazoRewardPoint(int32 InChapter, int32 InRewardPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNazoRewardPoint");

	Params::RCVariableBFL_SetNazoRewardPoint Parms{};

	Parms.InChapter = InChapter;
	Parms.InRewardPoint = InRewardPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNewGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCStoryMode                            InStoryMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNewGame(ERCStoryMode InStoryMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNewGame");

	Params::RCVariableBFL_SetNewGame Parms{};

	Parms.InStoryMode = InStoryMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNextAutoGameLevelInfoFromData
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableBFL::SetNextAutoGameLevelInfoFromData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNextAutoGameLevelInfoFromData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNextBusStopMove
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNextBusStopMove(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNextBusStopMove");

	Params::RCVariableBFL_SetNextBusStopMove Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNextGameLevelInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerStartName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNextGameLevelInfo(int32 InChapter, class FName InScene, class FName InMapID, class FName InPlayerStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNextGameLevelInfo");

	Params::RCVariableBFL_SetNextGameLevelInfo Parms{};

	Parms.InChapter = InChapter;
	Parms.InScene = InScene;
	Parms.InMapID = InMapID;
	Parms.InPlayerStartName = InPlayerStartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNextGameLevelInfoFromData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNextGameLevelInfoFromData(int32 InChapter, class FName InScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNextGameLevelInfoFromData");

	Params::RCVariableBFL_SetNextGameLevelInfoFromData Parms{};

	Parms.InChapter = InChapter;
	Parms.InScene = InScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNextMapID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerStartName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNextMapID(class FName InMapID, class FName InPlayerStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNextMapID");

	Params::RCVariableBFL_SetNextMapID Parms{};

	Parms.InMapID = InMapID;
	Parms.InPlayerStartName = InPlayerStartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNextMapIDLong
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNextMapIDLong(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNextMapIDLong");

	Params::RCVariableBFL_SetNextMapIDLong Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNextScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerStartName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNextScene(class FName InScene, class FName InMapID, class FName InPlayerStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNextScene");

	Params::RCVariableBFL_SetNextScene Parms{};

	Parms.InScene = InScene;
	Parms.InMapID = InMapID;
	Parms.InPlayerStartName = InPlayerStartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNowGameLevelInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNowGameLevelInfo(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNowGameLevelInfo");

	Params::RCVariableBFL_SetNowGameLevelInfo Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNowGameLevelInfoDetail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlayerStartName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNowGameLevelInfoDetail(int32 InChapter, class FName InScene, class FName InMapID, class FName InPlayerStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNowGameLevelInfoDetail");

	Params::RCVariableBFL_SetNowGameLevelInfoDetail Parms{};

	Parms.InChapter = InChapter;
	Parms.InScene = InScene;
	Parms.InMapID = InMapID;
	Parms.InPlayerStartName = InPlayerStartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetNowMapIDLong
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetNowMapIDLong(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetNowMapIDLong");

	Params::RCVariableBFL_SetNowMapIDLong Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetSaveEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetSaveEnable(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetSaveEnable");

	Params::RCVariableBFL_SetSaveEnable Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetSaveLoadMapName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSaveLoadMapName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetSaveLoadMapName(class FName InSaveLoadMapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetSaveLoadMapName");

	Params::RCVariableBFL_SetSaveLoadMapName Parms{};

	Parms.InSaveLoadMapName = InSaveLoadMapName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetSceneVariableDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetSceneVariableDirect(class FName InSceneVariableName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetSceneVariableDirect");

	Params::RCVariableBFL_SetSceneVariableDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetSelectAlready
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetSelectAlready(class FName InSceneID, class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetSelectAlready");

	Params::RCVariableBFL_SetSelectAlready Parms{};

	Parms.InSceneID = InSceneID;
	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetSkipEnable(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetSkipEnable");

	Params::RCVariableBFL_SetSkipEnable Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetStartDebugMenuDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetStartDebugMenuDraw(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetStartDebugMenuDraw");

	Params::RCVariableBFL_SetStartDebugMenuDraw Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetStoryMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCStoryMode                            InStoryMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetStoryMode(ERCStoryMode InStoryMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetStoryMode");

	Params::RCVariableBFL_SetStoryMode Parms{};

	Parms.InStoryMode = InStoryMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetTitleBackListIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   SelectedIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetTitleBackListIndex(int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetTitleBackListIndex");

	Params::RCVariableBFL_SetTitleBackListIndex Parms{};

	Parms.SelectedIndex = SelectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetTitleCollectionEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    isTitle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetTitleCollectionEvent(bool isTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetTitleCollectionEvent");

	Params::RCVariableBFL_SetTitleCollectionEvent Parms{};

	Parms.isTitle = isTitle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetTitleFrontListIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   SelectedIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetTitleFrontListIndex(int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetTitleFrontListIndex");

	Params::RCVariableBFL_SetTitleFrontListIndex Parms{};

	Parms.SelectedIndex = SelectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetTitleGalleryMovieEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetTitleGalleryMovieEvent(bool bInFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetTitleGalleryMovieEvent");

	Params::RCVariableBFL_SetTitleGalleryMovieEvent Parms{};

	Parms.bInFlag = bInFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SetTitleMenuInitListFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    isFront                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SetTitleMenuInitListFlag(bool isFront)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SetTitleMenuInitListFlag");

	Params::RCVariableBFL_SetTitleMenuInitListFlag Parms{};

	Parms.isFront = isFront;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SubChapterValueDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InChapterVariableName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bZeroStop                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SubChapterValueDirect(class FName InChapterVariableName, int32 InValue, bool bZeroStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SubChapterValueDirect");

	Params::RCVariableBFL_SubChapterValueDirect Parms{};

	Parms.InChapterVariableName = InChapterVariableName;
	Parms.InValue = InValue;
	Parms.bZeroStop = bZeroStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SubGameValueDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameVariableName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bZeroStop                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SubGameValueDirect(class FName InGameVariableName, int32 InValue, bool bZeroStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SubGameValueDirect");

	Params::RCVariableBFL_SubGameValueDirect Parms{};

	Parms.InGameVariableName = InGameVariableName;
	Parms.InValue = InValue;
	Parms.bZeroStop = bZeroStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SubSceneValueDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InSceneVariableName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bZeroStop                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SubSceneValueDirect(class FName InSceneVariableName, int32 InValue, bool bZeroStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SubSceneValueDirect");

	Params::RCVariableBFL_SubSceneValueDirect Parms{};

	Parms.InSceneVariableName = InSceneVariableName;
	Parms.InValue = InValue;
	Parms.bZeroStop = bZeroStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableBFL.SubTanteiPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableBFL::SubTanteiPoint(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableBFL", "SubTanteiPoint");

	Params::RCVariableBFL_SubTanteiPoint Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMenuCollectionWindow.CollectionSelectNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCMenuCollectionWindow::CollectionSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollectionWindow", "CollectionSelectNavigation");

	Params::RCMenuCollectionWindow_CollectionSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMenuCollectionWindow.PushDecide
// (Final, Native, Protected, BlueprintCallable)

void URCMenuCollectionWindow::PushDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuCollectionWindow", "PushDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.AddCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InCharacterID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::AddCharacter(class FName InCharacterID, int32 InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "AddCharacter");

	Params::RCVariableGameMenuBFL_AddCharacter Parms{};

	Parms.InCharacterID = InCharacterID;
	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.AddGlossary
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InGlossaryID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::AddGlossary(class FName InGlossaryID, int32 InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "AddGlossary");

	Params::RCVariableGameMenuBFL_AddGlossary Parms{};

	Parms.InGlossaryID = InGlossaryID;
	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.AddKaikagi
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InKaiKagiID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::AddKaikagi(class FName InKaiKagiID, int32 InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "AddKaikagi");

	Params::RCVariableGameMenuBFL_AddKaikagi Parms{};

	Parms.InKaiKagiID = InKaiKagiID;
	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.AddQuest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::AddQuest(class FName InQuestID, int32 InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "AddQuest");

	Params::RCVariableGameMenuBFL_AddQuest Parms{};

	Parms.InQuestID = InQuestID;
	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.AddTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InTutorialID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::AddTutorial(class FName InTutorialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "AddTutorial");

	Params::RCVariableGameMenuBFL_AddTutorial Parms{};

	Parms.InTutorialID = InTutorialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.CheckListTable
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableGameMenuBFL::CheckListTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "CheckListTable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.ClearKaikagiList
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableGameMenuBFL::ClearKaikagiList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "ClearKaikagiList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.GetMapM03IconType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCGameMenuMapM03IconType               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCGameMenuMapM03IconType URCVariableGameMenuBFL::GetMapM03IconType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "GetMapM03IconType");

	Params::RCVariableGameMenuBFL_GetMapM03IconType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.GetMapM07IconType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCGameMenuMapM07IconType               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCGameMenuMapM07IconType URCVariableGameMenuBFL::GetMapM07IconType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "GetMapM07IconType");

	Params::RCVariableGameMenuBFL_GetMapM07IconType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.GetNowMainQuestID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCVariableGameMenuBFL::GetNowMainQuestID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "GetNowMainQuestID");

	Params::RCVariableGameMenuBFL_GetNowMainQuestID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.GetPlayerIconType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCGameMenuPlayerIconType               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCGameMenuPlayerIconType URCVariableGameMenuBFL::GetPlayerIconType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "GetPlayerIconType");

	Params::RCVariableGameMenuBFL_GetPlayerIconType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.GetQuestPhase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableGameMenuBFL::GetQuestPhase(class FName InQuestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "GetQuestPhase");

	Params::RCVariableGameMenuBFL_GetQuestPhase Parms{};

	Parms.InQuestID = InQuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.GetQuestStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCGameMenuQuestStatus                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCGameMenuQuestStatus URCVariableGameMenuBFL::GetQuestStatus(class FName InQuestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "GetQuestStatus");

	Params::RCVariableGameMenuBFL_GetQuestStatus Parms{};

	Parms.InQuestID = InQuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.GetTopMenuType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCGameMenuType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCGameMenuType URCVariableGameMenuBFL::GetTopMenuType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "GetTopMenuType");

	Params::RCVariableGameMenuBFL_GetTopMenuType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.IsAllQuestCheckActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::IsAllQuestCheckActor(class FName InQuestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "IsAllQuestCheckActor");

	Params::RCVariableGameMenuBFL_IsAllQuestCheckActor Parms{};

	Parms.InQuestID = InQuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.IsDrawWorldMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::IsDrawWorldMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "IsDrawWorldMap");

	Params::RCVariableGameMenuBFL_IsDrawWorldMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.IsFastTravel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::IsFastTravel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "IsFastTravel");

	Params::RCVariableGameMenuBFL_IsFastTravel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.IsPlayerUnknown
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::IsPlayerUnknown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "IsPlayerUnknown");

	Params::RCVariableGameMenuBFL_IsPlayerUnknown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.IsQuestCheckActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::IsQuestCheckActor(class FName InQuestID, class FName InActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "IsQuestCheckActor");

	Params::RCVariableGameMenuBFL_IsQuestCheckActor Parms{};

	Parms.InQuestID = InQuestID;
	Parms.InActorName = InActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.IsTanteiPointDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::IsTanteiPointDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "IsTanteiPointDraw");

	Params::RCVariableGameMenuBFL_IsTanteiPointDraw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.IsTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InTutorialID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::IsTutorial(class FName InTutorialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "IsTutorial");

	Params::RCVariableGameMenuBFL_IsTutorial Parms{};

	Parms.InTutorialID = InTutorialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.RemoveKaikagi
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InKaiKagiID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::RemoveKaikagi(class FName InKaiKagiID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "RemoveKaikagi");

	Params::RCVariableGameMenuBFL_RemoveKaikagi Parms{};

	Parms.InKaiKagiID = InKaiKagiID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.ResetHP
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableGameMenuBFL::ResetHP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "ResetHP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.ResetTopMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::ResetTopMenu(int32 InChapter, class FName InScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "ResetTopMenu");

	Params::RCVariableGameMenuBFL_ResetTopMenu Parms{};

	Parms.InChapter = InChapter;
	Parms.InScene = InScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.SetAllSubQuestFailure
// (Final, Native, Static, Public, BlueprintCallable)

void URCVariableGameMenuBFL::SetAllSubQuestFailure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "SetAllSubQuestFailure");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.SetQuestCheckActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::SetQuestCheckActor(class FName InQuestID, class FName InActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "SetQuestCheckActor");

	Params::RCVariableGameMenuBFL_SetQuestCheckActor Parms{};

	Parms.InQuestID = InQuestID;
	Parms.InActorName = InActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableGameMenuBFL.SetQuestComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::SetQuestComplete(class FName InQuestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "SetQuestComplete");

	Params::RCVariableGameMenuBFL_SetQuestComplete Parms{};

	Parms.InQuestID = InQuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.SetQuestFailure
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InQuestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableGameMenuBFL::SetQuestFailure(class FName InQuestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "SetQuestFailure");

	Params::RCVariableGameMenuBFL_SetQuestFailure Parms{};

	Parms.InQuestID = InQuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableGameMenuBFL.SetTopMenuID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMenuID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableGameMenuBFL::SetTopMenuID(class FName InMenuID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableGameMenuBFL", "SetTopMenuID");

	Params::RCVariableGameMenuBFL_SetTopMenuID Parms{};

	Parms.InMenuID = InMenuID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMenuItemPanel.OnChangeDisable
// (Event, Public, BlueprintEvent)

void URCMenuItemPanel::OnChangeDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuItemPanel", "OnChangeDisable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuItemPanel.OnChangeNormal
// (Event, Public, BlueprintEvent)

void URCMenuItemPanel::OnChangeNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuItemPanel", "OnChangeNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuItemPanel.OnChangeSelect
// (Event, Public, BlueprintEvent)

void URCMenuItemPanel::OnChangeSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuItemPanel", "OnChangeSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuItemPanel.OnDisableHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuItemPanel::OnDisableHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuItemPanel", "OnDisableHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuItemPanel.OnDisableShowStarted
// (Event, Public, BlueprintEvent)

void URCMenuItemPanel::OnDisableShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuItemPanel", "OnDisableShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuItemPanel.OnNormalHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuItemPanel::OnNormalHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuItemPanel", "OnNormalHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuItemPanel.OnNormalShowStarted
// (Event, Public, BlueprintEvent)

void URCMenuItemPanel::OnNormalShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuItemPanel", "OnNormalShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCMenuItemPanel.OnSelectHideStarted
// (Event, Public, BlueprintEvent)

void URCMenuItemPanel::OnSelectHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMenuItemPanel", "OnSelectHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCPawnRender.ChangeColorOfMaterials
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InAmbientColor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InDirectionalColor                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDurationSec                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnRender::ChangeColorOfMaterials(const struct FLinearColor& InAmbientColor, const struct FLinearColor& InDirectionalColor, float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnRender", "ChangeColorOfMaterials");

	Params::RCPawnRender_ChangeColorOfMaterials Parms{};

	Parms.InAmbientColor = std::move(InAmbientColor);
	Parms.InDirectionalColor = std::move(InDirectionalColor);
	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnRender.IsCameraFadeEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPawnRender::IsCameraFadeEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnRender", "IsCameraFadeEnable");

	Params::RCPawnRender_IsCameraFadeEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPawnRender.IsFadeEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCPawnRender::IsFadeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnRender", "IsFadeEnd");

	Params::RCPawnRender_IsFadeEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPawnRender.SetCameraFadeEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnRender::SetCameraFadeEnable(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnRender", "SetCameraFadeEnable");

	Params::RCPawnRender_SetCameraFadeEnable Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnRender.SetupBgCharacterMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDurationSec                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnRender::SetupBgCharacterMaterial(float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnRender", "SetupBgCharacterMaterial");

	Params::RCPawnRender_SetupBgCharacterMaterial Parms{};

	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnRender.StartFadeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDirect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnRender::StartFadeIn(float InTime, bool InDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnRender", "StartFadeIn");

	Params::RCPawnRender_StartFadeIn Parms{};

	Parms.InTime = InTime;
	Parms.InDirect = InDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPawnRender.StartFadeOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDirect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCPawnRender::StartFadeOut(float InTime, bool InDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPawnRender", "StartFadeOut");

	Params::RCPawnRender_StartFadeOut Parms{};

	Parms.InTime = InTime;
	Parms.InDirect = InDirect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMobCharacter.GetAnimCtrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCCharacterAnimCtrl*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCCharacterAnimCtrl* ARCMobCharacter::GetAnimCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMobCharacter", "GetAnimCtrl");

	Params::RCMobCharacter_GetAnimCtrl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMobCharacter.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMobId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMobCharacter::Setup(class FName InMobId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMobCharacter", "Setup");

	Params::RCMobCharacter_Setup Parms{};

	Parms.InMobId = InMobId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMojimichiBPDFunctionLibrary.CanClose
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::CanClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "CanClose");

	Params::RCMojimichiBPDFunctionLibrary_CanClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiBPDFunctionLibrary.DisolveText
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                                   DisolveTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::DisolveText(float DisolveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "DisolveText");

	Params::RCMojimichiBPDFunctionLibrary_DisolveText Parms{};

	Parms.DisolveTime = DisolveTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiBPDFunctionLibrary.End
// (Final, Native, Static, Private, BlueprintCallable)

void URCMojimichiBPDFunctionLibrary::End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "End");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMojimichiBPDFunctionLibrary.IsEnd
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::IsEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "IsEnd");

	Params::RCMojimichiBPDFunctionLibrary_IsEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiBPDFunctionLibrary.ShowText
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::ShowText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "ShowText");

	Params::RCMojimichiBPDFunctionLibrary_ShowText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiBPDFunctionLibrary.StartConstruction
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class FName                             Meshtag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::StartConstruction(class FName Meshtag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "StartConstruction");

	Params::RCMojimichiBPDFunctionLibrary_StartConstruction Parms{};

	Parms.Meshtag = Meshtag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiBPDFunctionLibrary.StartConstructionWithActorTag
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class FName                             Meshtag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActorTag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::StartConstructionWithActorTag(class FName Meshtag, class FName ActorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "StartConstructionWithActorTag");

	Params::RCMojimichiBPDFunctionLibrary_StartConstructionWithActorTag Parms{};

	Parms.Meshtag = Meshtag;
	Parms.ActorTag = ActorTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiBPDFunctionLibrary.StartFracture
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::StartFracture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "StartFracture");

	Params::RCMojimichiBPDFunctionLibrary_StartFracture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiBPDFunctionLibrary.StartSystem
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class ACameraActor*                     CameraActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMojimichiBPDFunctionLibrary::StartSystem(class ACameraActor* CameraActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "StartSystem");

	Params::RCMojimichiBPDFunctionLibrary_StartSystem Parms{};

	Parms.CameraActor = CameraActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMojimichiBPDFunctionLibrary.StopFracture
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::StopFracture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "StopFracture");

	Params::RCMojimichiBPDFunctionLibrary_StopFracture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMojimichiBPDFunctionLibrary.WasTextCaptured
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMojimichiBPDFunctionLibrary::WasTextCaptured()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCMojimichiBPDFunctionLibrary", "WasTextCaptured");

	Params::RCMojimichiBPDFunctionLibrary_WasTextCaptured Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManager.CheckSkip
// (Final, Native, Private)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMovieManager::CheckSkip(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "CheckSkip");

	Params::RCMovieManager_CheckSkip Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.CheckSkipButtonCount
// (Final, Native, Private)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMovieManager::CheckSkipButtonCount(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "CheckSkipButtonCount");

	Params::RCMovieManager_CheckSkipButtonCount Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManager.GetIsLoop
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMovieManager::GetIsLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "GetIsLoop");

	Params::RCMovieManager_GetIsLoop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManager.GetMovieTime
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCMovieManager::GetMovieTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "GetMovieTime");

	Params::RCMovieManager_GetMovieTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManager.Initialize
// (Final, Native, Public)

void ARCMovieManager::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.IsLoadedMovie
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMovieManager::IsLoadedMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "IsLoadedMovie");

	Params::RCMovieManager_IsLoadedMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManager.IsPlayEnd
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMovieManager::IsPlayEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "IsPlayEnd");

	Params::RCMovieManager_IsPlayEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManager.IsPlaying
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCMovieManager::IsPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "IsPlaying");

	Params::RCMovieManager_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManager.Pause
// (Final, Native, Public)
// Parameters:
// bool                                    IsPause                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMovieManager::Pause(bool IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "Pause");

	Params::RCMovieManager_Pause Parms{};

	Parms.IsPause = IsPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.PlayMovie
// (Final, Native, Public)

void ARCMovieManager::PlayMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "PlayMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.ReadyMovieMaterial
// (Final, Native, Public)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* ARCMovieManager::ReadyMovieMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "ReadyMovieMaterial");

	Params::RCMovieManager_ReadyMovieMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovieManager.Reset
// (Final, Native, Public)

void ARCMovieManager::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.ResetBeforeLoadMovieData
// (Final, Native, Public)

void ARCMovieManager::ResetBeforeLoadMovieData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "ResetBeforeLoadMovieData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.ResetLoadedMovieData
// (Final, Native, Public)

void ARCMovieManager::ResetLoadedMovieData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "ResetLoadedMovieData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.ResetSkipGauge
// (Final, Native, Public)

void ARCMovieManager::ResetSkipGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "ResetSkipGauge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.SetIsLoop
// (Final, Native, Public)
// Parameters:
// bool                                    misloop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMovieManager::SetIsLoop(bool misloop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "SetIsLoop");

	Params::RCMovieManager_SetIsLoop Parms{};

	Parms.misloop = misloop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.SetMovieData
// (Final, Native, Public)
// Parameters:
// class FString                           mmovieID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCUserWidget*                    mwidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCManaComponent*                 mmanaComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMovieManager::SetMovieData(const class FString& mmovieID, class URCUserWidget* mwidget, class URCManaComponent* mmanaComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "SetMovieData");

	Params::RCMovieManager_SetMovieData Parms{};

	Parms.mmovieID = std::move(mmovieID);
	Parms.mwidget = mwidget;
	Parms.mmanaComponent = mmanaComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.SetOpeningFlag
// (Final, Native, Public)
// Parameters:
// bool                                    isOpening_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMovieManager::SetOpeningFlag(bool isOpening_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "SetOpeningFlag");

	Params::RCMovieManager_SetOpeningFlag Parms{};

	Parms.isOpening_0 = isOpening_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.SetRain
// (Final, Native, Private)
// Parameters:
// bool                                    isPlay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMovieManager::SetRain(bool isPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "SetRain");

	Params::RCMovieManager_SetRain Parms{};

	Parms.isPlay = isPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.SetSkipTime
// (Final, Native, Public)
// Parameters:
// float                                   skipTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMovieManager::SetSkipTime(float skipTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "SetSkipTime");

	Params::RCMovieManager_SetSkipTime Parms{};

	Parms.skipTime = skipTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.Update
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCMovieManager::Update(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "Update");

	Params::RCMovieManager_Update Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.UpdateSkipGauge
// (Final, Native, Private)

void ARCMovieManager::UpdateSkipGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "UpdateSkipGauge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovieManager.WidgetToRemoveFromViewport
// (Final, Native, Public)

void ARCMovieManager::WidgetToRemoveFromViewport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovieManager", "WidgetToRemoveFromViewport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovingActorComponent.EnableEngineSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovingActorComponent::EnableEngineSound(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovingActorComponent", "EnableEngineSound");

	Params::RCMovingActorComponent_EnableEngineSound Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCMovingActorComponent.GetEngineSoundID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCMovingActorComponent::GetEngineSoundID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovingActorComponent", "GetEngineSoundID");

	Params::RCMovingActorComponent_GetEngineSoundID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovingActorComponent.IsEnableEngineSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCMovingActorComponent::IsEnableEngineSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovingActorComponent", "IsEnableEngineSound");

	Params::RCMovingActorComponent_IsEnableEngineSound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCMovingActorComponent.SetEngineSoundID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SoundId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCMovingActorComponent::SetEngineSoundID(const class FString& SoundId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCMovingActorComponent", "SetEngineSoundID");

	Params::RCMovingActorComponent_SetEngineSoundID Parms{};

	Parms.SoundId = std::move(SoundId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleRebuttalLetter.OnHitBoxOverlap
// (Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ARCNazoBattleRebuttalLetter::OnHitBoxOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleRebuttalLetter", "OnHitBoxOverlap");

	Params::RCNazoBattleRebuttalLetter_OnHitBoxOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleRebuttalLetter.OnJustAvoidBoxBeginOverlap
// (Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ARCNazoBattleRebuttalLetter::OnJustAvoidBoxBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleRebuttalLetter", "OnJustAvoidBoxBeginOverlap");

	Params::RCNazoBattleRebuttalLetter_OnJustAvoidBoxBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleRebuttalLetter.OnJustAvoidBoxEndOverlap
// (Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleRebuttalLetter::OnJustAvoidBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleRebuttalLetter", "OnJustAvoidBoxEndOverlap");

	Params::RCNazoBattleRebuttalLetter_OnJustAvoidBoxEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleRebuttalLetter.SetHitCharaEnable
// (Native, Public)
// Parameters:
// bool                                    InHitCharaEnable                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoBattleRebuttalLetter::SetHitCharaEnable(bool InHitCharaEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoBattleRebuttalLetter", "SetHitCharaEnable");

	Params::RCNazoBattleRebuttalLetter_SetHitCharaEnable Parms{};

	Parms.InHitCharaEnable = InHitCharaEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleAllRebuttalLetterForceFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleAllRebuttalLetterForceFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleAllRebuttalLetterForceFinish");

	Params::RCNazoBattleLevelScriptActorBFL_BattleAllRebuttalLetterForceFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGameOverUI_GetSelectedIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNazoBattleLevelScriptActorBFL::BattleGameOverUI_GetSelectedIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGameOverUI_GetSelectedIndex");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGameOverUI_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGameOverUI_IsFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGameOverUI_IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGameOverUI_IsFinished");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGameOverUI_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGameOverUI_Start
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGameOverUI_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGameOverUI_Start");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGameOverUI_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetCurrentRebuttalGroupNo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoBattleLevelScriptActorBFL::BattleGetCurrentRebuttalGroupNo(int32* RebuttalGroupNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetCurrentRebuttalGroupNo");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetCurrentRebuttalGroupNo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RebuttalGroupNo != nullptr)
		*RebuttalGroupNo = Parms.RebuttalGroupNo;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_AttackFailure
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCNazoBattleLSARebuttalAttackFailureTypeFailureType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_AttackFailure(int32* RebuttalGroupNo, int32* RebuttalNo, ERCNazoBattleLSARebuttalAttackFailureType* FailureType, class FName* TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_AttackFailure");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_AttackFailure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RebuttalGroupNo != nullptr)
		*RebuttalGroupNo = Parms.RebuttalGroupNo;

	if (RebuttalNo != nullptr)
		*RebuttalNo = Parms.RebuttalNo;

	if (FailureType != nullptr)
		*FailureType = Parms.FailureType;

	if (TalkID != nullptr)
		*TalkID = Parms.TalkID;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_AttackSuccess
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_AttackSuccess(int32* RebuttalGroupNo, int32* RebuttalNo, class FName* TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_AttackSuccess");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_AttackSuccess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RebuttalGroupNo != nullptr)
		*RebuttalGroupNo = Parms.RebuttalGroupNo;

	if (RebuttalNo != nullptr)
		*RebuttalNo = Parms.RebuttalNo;

	if (TalkID != nullptr)
		*TalkID = Parms.TalkID;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_ClearEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TalkID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     TalkIDArray                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_ClearEvent(class FName* TalkID, TArray<class FName>* TalkIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_ClearEvent");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_ClearEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TalkID != nullptr)
		*TalkID = Parms.TalkID;

	if (TalkIDArray != nullptr)
		*TalkIDArray = std::move(Parms.TalkIDArray);

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_CloseContest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InputTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InputCount                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FailureDamage                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_CloseContest(int32* RebuttalGroupNo, int32* RebuttalNo, float* InputTime, int32* InputCount, int32* FailureDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_CloseContest");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_CloseContest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RebuttalGroupNo != nullptr)
		*RebuttalGroupNo = Parms.RebuttalGroupNo;

	if (RebuttalNo != nullptr)
		*RebuttalNo = Parms.RebuttalNo;

	if (InputTime != nullptr)
		*InputTime = Parms.InputTime;

	if (InputCount != nullptr)
		*InputCount = Parms.InputCount;

	if (FailureDamage != nullptr)
		*FailureDamage = Parms.FailureDamage;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_Confrontation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFirstChallenge                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_Confrontation(int32* RebuttalGroupNo, bool* bFirstChallenge, class FName* TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_Confrontation");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_Confrontation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RebuttalGroupNo != nullptr)
		*RebuttalGroupNo = Parms.RebuttalGroupNo;

	if (bFirstChallenge != nullptr)
		*bFirstChallenge = Parms.bFirstChallenge;

	if (TalkID != nullptr)
		*TalkID = Parms.TalkID;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_GameOver
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RebuttalNo                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             HintTextId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_GameOver(int32* RebuttalGroupNo, int32* RebuttalNo, class FName* TalkID, class FName* HintTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_GameOver");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_GameOver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RebuttalGroupNo != nullptr)
		*RebuttalGroupNo = Parms.RebuttalGroupNo;

	if (RebuttalNo != nullptr)
		*RebuttalNo = Parms.RebuttalNo;

	if (TalkID != nullptr)
		*TalkID = Parms.TalkID;

	if (HintTextId != nullptr)
		*HintTextId = Parms.HintTextId;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_Interval
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_Interval(int32* RebuttalGroupNo, class FName* TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_Interval");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_Interval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RebuttalGroupNo != nullptr)
		*RebuttalGroupNo = Parms.RebuttalGroupNo;

	if (TalkID != nullptr)
		*TalkID = Parms.TalkID;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_NextRebuttalEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RebuttalGroupNo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TalkID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_NextRebuttalEvent(int32* RebuttalGroupNo, class FName* TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_NextRebuttalEvent");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_NextRebuttalEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RebuttalGroupNo != nullptr)
		*RebuttalGroupNo = Parms.RebuttalGroupNo;

	if (TalkID != nullptr)
		*TalkID = Parms.TalkID;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleGetRebuttalPhaseParameter_PreEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TalkID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleGetRebuttalPhaseParameter_PreEvent(class FName* TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleGetRebuttalPhaseParameter_PreEvent");

	Params::RCNazoBattleLevelScriptActorBFL_BattleGetRebuttalPhaseParameter_PreEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TalkID != nullptr)
		*TalkID = Parms.TalkID;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleHintUI_IsFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleHintUI_IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleHintUI_IsFinished");

	Params::RCNazoBattleLevelScriptActorBFL_BattleHintUI_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleHintUI_Start
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             HintTextId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleHintUI_Start(class FName HintTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleHintUI_Start");

	Params::RCNazoBattleLevelScriptActorBFL_BattleHintUI_Start Parms{};

	Parms.HintTextId = HintTextId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleRebuttalEndCloseContest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleRebuttalEndCloseContest(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleRebuttalEndCloseContest");

	Params::RCNazoBattleLevelScriptActorBFL_BattleRebuttalEndCloseContest Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleRebuttalEndPhase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleRebuttalEndPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleRebuttalEndPhase");

	Params::RCNazoBattleLevelScriptActorBFL_BattleRebuttalEndPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleRebuttalResetPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleRebuttalResetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleRebuttalResetPosition");

	Params::RCNazoBattleLevelScriptActorBFL_BattleRebuttalResetPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleStartUI_IsFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleStartUI_IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleStartUI_IsFinished");

	Params::RCNazoBattleLevelScriptActorBFL_BattleStartUI_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.BattleStartUI_Start
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::BattleStartUI_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "BattleStartUI_Start");

	Params::RCNazoBattleLevelScriptActorBFL_BattleStartUI_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.GetActiveRebuttalDataArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRCNazoBattleLSARebuttalData>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRCNazoBattleLSARebuttalData> URCNazoBattleLevelScriptActorBFL::GetActiveRebuttalDataArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "GetActiveRebuttalDataArray");

	Params::RCNazoBattleLevelScriptActorBFL_GetActiveRebuttalDataArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.GetBattleLevelScriptActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCNazoBattleLevelScriptActor*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCNazoBattleLevelScriptActor* URCNazoBattleLevelScriptActorBFL::GetBattleLevelScriptActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "GetBattleLevelScriptActor");

	Params::RCNazoBattleLevelScriptActorBFL_GetBattleLevelScriptActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.GetBattleSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FRCNazoBattleSettings            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRCNazoBattleSettings URCNazoBattleLevelScriptActorBFL::GetBattleSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "GetBattleSettings");

	Params::RCNazoBattleLevelScriptActorBFL_GetBattleSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.GetDefaultKaijinPartVoiceID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             PartVoiceID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCNazoBattleKaijinPartVoiceType        PartVoiceType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::GetDefaultKaijinPartVoiceID(class FName* PartVoiceID, float* DelayTime, ERCNazoBattleKaijinPartVoiceType PartVoiceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "GetDefaultKaijinPartVoiceID");

	Params::RCNazoBattleLevelScriptActorBFL_GetDefaultKaijinPartVoiceID Parms{};

	Parms.PartVoiceType = PartVoiceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PartVoiceID != nullptr)
		*PartVoiceID = Parms.PartVoiceID;

	if (DelayTime != nullptr)
		*DelayTime = Parms.DelayTime;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.GetKaijinPartVoiceID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             PartVoiceID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCNazoBattleKaijinPartVoiceType        PartVoiceType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             KaijinTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::GetKaijinPartVoiceID(class FName* PartVoiceID, float* DelayTime, ERCNazoBattleKaijinPartVoiceType PartVoiceType, class FName KaijinTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "GetKaijinPartVoiceID");

	Params::RCNazoBattleLevelScriptActorBFL_GetKaijinPartVoiceID Parms{};

	Parms.PartVoiceType = PartVoiceType;
	Parms.KaijinTag = KaijinTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PartVoiceID != nullptr)
		*PartVoiceID = Parms.PartVoiceID;

	if (DelayTime != nullptr)
		*DelayTime = Parms.DelayTime;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.GetPreEventPartVoiceKaijinTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             KaijinTag                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::GetPreEventPartVoiceKaijinTag(class FName* KaijinTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "GetPreEventPartVoiceKaijinTag");

	Params::RCNazoBattleLevelScriptActorBFL_GetPreEventPartVoiceKaijinTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (KaijinTag != nullptr)
		*KaijinTag = Parms.KaijinTag;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.IsBattle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::IsBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "IsBattle");

	Params::RCNazoBattleLevelScriptActorBFL_IsBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.IsBattleInitialized
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::IsBattleInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "IsBattleInitialized");

	Params::RCNazoBattleLevelScriptActorBFL_IsBattleInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoBattleLevelScriptActorBFL.SetBattleInputEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInputEnable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoBattleLevelScriptActorBFL::SetBattleInputEnable(bool bInputEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoBattleLevelScriptActorBFL", "SetBattleInputEnable");

	Params::RCNazoBattleLevelScriptActorBFL_SetBattleInputEnable Parms{};

	Parms.bInputEnable = bInputEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLoopLevelScriptActorBFL.GetLoopLevelScriptActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCNazoLoopLevelScriptActor*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCNazoLoopLevelScriptActor* URCNazoLoopLevelScriptActorBFL::GetLoopLevelScriptActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLoopLevelScriptActorBFL", "GetLoopLevelScriptActor");

	Params::RCNazoLoopLevelScriptActorBFL_GetLoopLevelScriptActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoLoopLevelScriptActorBFL.IsInitialized
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoLoopLevelScriptActorBFL::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoLoopLevelScriptActorBFL", "IsInitialized");

	Params::RCNazoLoopLevelScriptActorBFL_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoMotionViewerLevelScriptActor.CloseMenu
// (Final, Native, Public, BlueprintCallable)

void ARCNazoMotionViewerLevelScriptActor::CloseMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMotionViewerLevelScriptActor", "CloseMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMotionViewerLevelScriptActor.OpenMenu
// (Final, Native, Public, BlueprintCallable)

void ARCNazoMotionViewerLevelScriptActor::OpenMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMotionViewerLevelScriptActor", "OpenMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMotionViewerLevelScriptActor.ToggleMenu
// (Final, Native, Public, BlueprintCallable)

void ARCNazoMotionViewerLevelScriptActor::ToggleMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoMotionViewerLevelScriptActor", "ToggleMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.ChangeBackCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoMoveLoopLevelScriptActorBFL::ChangeBackCamera(float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "ChangeBackCamera");

	Params::RCNazoMoveLoopLevelScriptActorBFL_ChangeBackCamera Parms{};

	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.ChangeCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCCineCameraActor*               Camera                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoMoveLoopLevelScriptActorBFL::ChangeCamera(class ARCCineCameraActor* Camera, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "ChangeCamera");

	Params::RCNazoMoveLoopLevelScriptActorBFL_ChangeCamera Parms{};

	Parms.Camera = Camera;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.ChangeCameraBase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           CameraBase                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCCineCameraActor*               Camera                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoMoveLoopLevelScriptActorBFL::ChangeCameraBase(class AActor* CameraBase, class ARCCineCameraActor* Camera, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "ChangeCameraBase");

	Params::RCNazoMoveLoopLevelScriptActorBFL_ChangeCameraBase Parms{};

	Parms.CameraBase = CameraBase;
	Parms.Camera = Camera;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.ChangeCameraBaseFromTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CameraBaseTag                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CameraTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoMoveLoopLevelScriptActorBFL::ChangeCameraBaseFromTag(class FName CameraBaseTag, class FName CameraTag, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "ChangeCameraBaseFromTag");

	Params::RCNazoMoveLoopLevelScriptActorBFL_ChangeCameraBaseFromTag Parms{};

	Parms.CameraBaseTag = CameraBaseTag;
	Parms.CameraTag = CameraTag;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.ChangeCameraFromTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CameraTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EViewTargetBlendFunction                BlendFunc                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendExp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoMoveLoopLevelScriptActorBFL::ChangeCameraFromTag(class FName CameraTag, float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "ChangeCameraFromTag");

	Params::RCNazoMoveLoopLevelScriptActorBFL_ChangeCameraFromTag Parms{};

	Parms.CameraTag = CameraTag;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.ChangePlayerSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNazoMoveLoopLevelScriptActorBFL::ChangePlayerSpeed(float Speed, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "ChangePlayerSpeed");

	Params::RCNazoMoveLoopLevelScriptActorBFL_ChangePlayerSpeed Parms{};

	Parms.Speed = Speed;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.FinishMoveLoop
// (Final, Native, Static, Public, BlueprintCallable)

void URCNazoMoveLoopLevelScriptActorBFL::FinishMoveLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "FinishMoveLoop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.GetMoveLoopLevelScriptActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCNazoMoveLoopLevelScriptActor*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCNazoMoveLoopLevelScriptActor* URCNazoMoveLoopLevelScriptActorBFL::GetMoveLoopLevelScriptActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "GetMoveLoopLevelScriptActor");

	Params::RCNazoMoveLoopLevelScriptActorBFL_GetMoveLoopLevelScriptActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoMoveLoopLevelScriptActorBFL.IsInitialized
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNazoMoveLoopLevelScriptActorBFL::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNazoMoveLoopLevelScriptActorBFL", "IsInitialized");

	Params::RCNazoMoveLoopLevelScriptActorBFL_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActor.ChangeStateEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// ERCNazoPlayableLoopLSAState             PlayableLoopState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoPlayableLoopLevelScriptActor::ChangeStateEvent(ERCNazoPlayableLoopLSAState PlayableLoopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoPlayableLoopLevelScriptActor", "ChangeStateEvent");

	Params::RCNazoPlayableLoopLevelScriptActor_ChangeStateEvent Parms{};

	Parms.PlayableLoopState = PlayableLoopState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNazoPlayableLoopLevelScriptActor.CheckFinishedBehindWallClosed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoPlayableLoopLevelScriptActor::CheckFinishedBehindWallClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoPlayableLoopLevelScriptActor", "CheckFinishedBehindWallClosed");

	Params::RCNazoPlayableLoopLevelScriptActor_CheckFinishedBehindWallClosed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActor.CloseBehindWall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoPlayableLoopLevelScriptActor::CloseBehindWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoPlayableLoopLevelScriptActor", "CloseBehindWall");

	Params::RCNazoPlayableLoopLevelScriptActor_CloseBehindWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActor.FinishLoop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoPlayableLoopLevelScriptActor::FinishLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoPlayableLoopLevelScriptActor", "FinishLoop");

	Params::RCNazoPlayableLoopLevelScriptActor_FinishLoop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActor.GetWarpCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNazoPlayableLoopLevelScriptActor::GetWarpCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoPlayableLoopLevelScriptActor", "GetWarpCount");

	Params::RCNazoPlayableLoopLevelScriptActor_GetWarpCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActor.OpenFrontWall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoPlayableLoopLevelScriptActor::OpenFrontWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoPlayableLoopLevelScriptActor", "OpenFrontWall");

	Params::RCNazoPlayableLoopLevelScriptActor_OpenFrontWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActor.Warp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNazoPlayableLoopLevelScriptActor::Warp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoPlayableLoopLevelScriptActor", "Warp");

	Params::RCNazoPlayableLoopLevelScriptActor_Warp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNazoPlayableLoopLevelScriptActor.WarpFinishedEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   WarpCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNazoPlayableLoopLevelScriptActor::WarpFinishedEvent(int32 WarpCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNazoPlayableLoopLevelScriptActor", "WarpFinishedEvent");

	Params::RCNazoPlayableLoopLevelScriptActor_WarpFinishedEvent Parms{};

	Parms.WarpCount = WarpCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzCriminalManager.Correct
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::Correct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "Correct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.GameOver
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::GameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "GameOver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.GetEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzCriminalEventType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzCriminalEventType ARCNzCriminalManager::GetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "GetEvent");

	Params::RCNzCriminalManager_GetEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.GetFailureLineId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNzCriminalManager::GetFailureLineId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "GetFailureLineId");

	Params::RCNzCriminalManager_GetFailureLineId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.GetHintTextId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNzCriminalManager::GetHintTextId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "GetHintTextId");

	Params::RCNzCriminalManager_GetHintTextId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.GetSelectedSuspectIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzCriminalManager::GetSelectedSuspectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "GetSelectedSuspectIndex");

	Params::RCNzCriminalManager_GetSelectedSuspectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.GiveHint
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::GiveHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "GiveHint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.Incorrect
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::Incorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "Incorrect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.IsCorrectCriminal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzCriminalManager::IsCorrectCriminal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "IsCorrectCriminal");

	Params::RCNzCriminalManager_IsCorrectCriminal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.IsGameOver
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzCriminalManager::IsGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "IsGameOver");

	Params::RCNzCriminalManager_IsGameOver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.IsLoadedAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzCriminalManager::IsLoadedAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "IsLoadedAsset");

	Params::RCNzCriminalManager_IsLoadedAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.IsNextState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzCriminalManager::IsNextState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "IsNextState");

	Params::RCNzCriminalManager_IsNextState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.NotifyFinishEvent
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::NotifyFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "NotifyFinishEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.NotifyStartEvent
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::NotifyStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "NotifyStartEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.PlayFailureCharacter
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::PlayFailureCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "PlayFailureCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetLineFromTextId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InLineTextId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzCriminalManager::SetLineFromTextId(const class FName InLineTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetLineFromTextId");

	Params::RCNzCriminalManager_SetLineFromTextId Parms{};

	Parms.InLineTextId = InLineTextId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetupBegin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   InSuspectCharacterActorList                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ARCNzCriminalManager::SetupBegin(const TArray<class AActor*>& InSuspectCharacterActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetupBegin");

	Params::RCNzCriminalManager_SetupBegin Parms{};

	Parms.InSuspectCharacterActorList = std::move(InSuspectCharacterActorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetupBeginProduction
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::SetupBeginProduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetupBeginProduction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetupCorrectProduction
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::SetupCorrectProduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetupCorrectProduction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetupHintProduction
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::SetupHintProduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetupHintProduction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetupIncorrectProduction
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::SetupIncorrectProduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetupIncorrectProduction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetupPreSelect
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::SetupPreSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetupPreSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetupSelect
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::SetupSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetupSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.SetWaitPushKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzCriminalManager::SetWaitPushKey(bool bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "SetWaitPushKey");

	Params::RCNzCriminalManager_SetWaitPushKey Parms{};

	Parms.bState = bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.StopPlayFailureCharacter
// (Final, Native, Public, BlueprintCallable)

void ARCNzCriminalManager::StopPlayFailureCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "StopPlayFailureCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzCriminalManager.GetCameraBlendTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InCameraIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNzCriminalManager::GetCameraBlendTime(const int32 InCameraIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "GetCameraBlendTime");

	Params::RCNzCriminalManager_GetCameraBlendTime Parms{};

	Parms.InCameraIndex = InCameraIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzCriminalManager.GetCameraFocalLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InCameraIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNzCriminalManager::GetCameraFocalLength(const int32 InCameraIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzCriminalManager", "GetCameraFocalLength");

	Params::RCNzCriminalManager_GetCameraFocalLength Parms{};

	Parms.InCameraIndex = InCameraIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamLipSyncDataAdjustData.Import
// (Native, Public, BlueprintCallable)

void URCParamLipSyncDataAdjustData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamLipSyncDataAdjustData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamBgListL01Data.Import
// (Native, Public, BlueprintCallable)

void URCParamBgListL01Data::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamBgListL01Data", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleCameraActorBase.CameraZoomEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleCameraActorBase::CameraZoomEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleCameraActorBase", "CameraZoomEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleCameraActorBase.CameraZoomReturnEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleCameraActorBase::CameraZoomReturnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleCameraActorBase", "CameraZoomReturnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleCameraActorBase.CameraZoomReturnStart
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleCameraActorBase::CameraZoomReturnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleCameraActorBase", "CameraZoomReturnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleCameraActorBase.CameraZoomStart
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleCameraActorBase::CameraZoomStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleCameraActorBase", "CameraZoomStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleCameraActorBase.ChangeDetectiveMode
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFinaleSceneType                        nextType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleCameraActorBase::ChangeDetectiveMode(EFinaleSceneType nextType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleCameraActorBase", "ChangeDetectiveMode");

	Params::RCNzFinaleCameraActorBase_ChangeDetectiveMode Parms{};

	Parms.nextType = nextType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzFinaleEditableManagerBase.GetAllPieceInfoList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRCNzFinaleEditableSpawnPieceData>dataList                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCNzFinaleEditableManagerBase::GetAllPieceInfoList(TArray<struct FRCNzFinaleEditableSpawnPieceData>* dataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleEditableManagerBase", "GetAllPieceInfoList");

	Params::RCNzFinaleEditableManagerBase_GetAllPieceInfoList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (dataList != nullptr)
		*dataList = std::move(Parms.dataList);
}


// Function RC.RCNzFinaleEditableManagerBase.GetAllPieceNameList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     nameList                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCNzFinaleEditableManagerBase::GetAllPieceNameList(TArray<class FName>* nameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleEditableManagerBase", "GetAllPieceNameList");

	Params::RCNzFinaleEditableManagerBase_GetAllPieceNameList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (nameList != nullptr)
		*nameList = std::move(Parms.nameList);
}


// Function RC.RCNzFinaleEditableManagerBase.GetSpawnPieceInfoList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRCNzFinaleEditableSpawnPieceData>dataList                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCNzFinaleEditableManagerBase::GetSpawnPieceInfoList(TArray<struct FRCNzFinaleEditableSpawnPieceData>* dataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleEditableManagerBase", "GetSpawnPieceInfoList");

	Params::RCNzFinaleEditableManagerBase_GetSpawnPieceInfoList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (dataList != nullptr)
		*dataList = std::move(Parms.dataList);
}


// Function RC.RCNzFinaleEditableManagerBase.SpawnPieceActorList
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleEditableManagerBase::SpawnPieceActorList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleEditableManagerBase", "SpawnPieceActorList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamLipSyncData.Import
// (Native, Public, BlueprintCallable)

void URCParamLipSyncData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamLipSyncData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleHeadingLineBase.GetDetectiveBackgroundImagePath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleHeadingLineBase::GetDetectiveBackgroundImagePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "GetDetectiveBackgroundImagePath");

	Params::RCNzFinaleHeadingLineBase_GetDetectiveBackgroundImagePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleHeadingLineBase.GetDetectivepointNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzFinaleHeadingLineBase::GetDetectivepointNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "GetDetectivepointNum");

	Params::RCNzFinaleHeadingLineBase_GetDetectivepointNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleHeadingLineBase.GetDetectivePointState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> ARCNzFinaleHeadingLineBase::GetDetectivePointState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "GetDetectivePointState");

	Params::RCNzFinaleHeadingLineBase_GetDetectivePointState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleHeadingLineBase.HiddenPieceActors
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleHeadingLineBase::HiddenPieceActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "HiddenPieceActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleHeadingLineBase.HiddenSectionActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleHeadingLineBase::HiddenSectionActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "HiddenSectionActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleHeadingLineBase.InitializeHeadingLine
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SectionID_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SectionTextID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     pieceIDList_0                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class ARCNzFinaleManagerBase*           FinaleManager_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleHeadingLineBase::InitializeHeadingLine(class FName SectionID_0, class FName SectionTextID, const TArray<class FName>& pieceIDList_0, class ARCNzFinaleManagerBase* FinaleManager_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "InitializeHeadingLine");

	Params::RCNzFinaleHeadingLineBase_InitializeHeadingLine Parms{};

	Parms.SectionID_0 = SectionID_0;
	Parms.SectionTextID = SectionTextID;
	Parms.pieceIDList_0 = std::move(pieceIDList_0);
	Parms.FinaleManager_0 = FinaleManager_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleHeadingLineBase.ShowPieceActors
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleHeadingLineBase::ShowPieceActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "ShowPieceActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleHeadingLineBase.ShowSectionActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleHeadingLineBase::ShowSectionActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "ShowSectionActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleHeadingLineBase.SpawnPieceActors
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleHeadingLineBase::SpawnPieceActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "SpawnPieceActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleHeadingLineBase.StartSectionEnter
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleHeadingLineBase::StartSectionEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "StartSectionEnter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleHeadingLineBase.UpdatePieceQuestionState
// (Final, Native, Public)

void ARCNzFinaleHeadingLineBase::UpdatePieceQuestionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleHeadingLineBase", "UpdatePieceQuestionState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamBgListData.Import
// (Native, Public, BlueprintCallable)

void URCParamBgListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamBgListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.AddDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::AddDamage(int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "AddDamage");

	Params::RCNzFinaleManagerBase_AddDamage Parms{};

	Parms.Damage = Damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.AddFailedCount
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::AddFailedCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "AddFailedCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.AllReleaseUI
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::AllReleaseUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "AllReleaseUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.CalcDetectivePointNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzFinaleManagerBase::CalcDetectivePointNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CalcDetectivePointNum");

	Params::RCNzFinaleManagerBase_CalcDetectivePointNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CalcIsHoverCursor
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FMargin                          Offsets                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        halfViewportSize                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        cursorPos                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        listParentSize                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   colScale                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CalcIsHoverCursor(const struct FMargin& Offsets, const struct FVector2D& Size, const struct FVector2D& halfViewportSize, const struct FVector2D& cursorPos, const struct FVector2D& listParentSize, int32 idx, float colScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CalcIsHoverCursor");

	Params::RCNzFinaleManagerBase_CalcIsHoverCursor Parms{};

	Parms.Offsets = std::move(Offsets);
	Parms.Size = std::move(Size);
	Parms.halfViewportSize = std::move(halfViewportSize);
	Parms.cursorPos = std::move(cursorPos);
	Parms.listParentSize = std::move(listParentSize);
	Parms.idx = idx;
	Parms.colScale = colScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CalcUpdateCursorPosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   deltaSecond                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MoveSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ARCNzFinaleManagerBase::CalcUpdateCursorPosition(float deltaSecond, float X, float Y, float MoveSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CalcUpdateCursorPosition");

	Params::RCNzFinaleManagerBase_CalcUpdateCursorPosition Parms{};

	Parms.deltaSecond = deltaSecond;
	Parms.X = X;
	Parms.Y = Y;
	Parms.MoveSpeed = MoveSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CancelSelectPieceList
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::CancelSelectPieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CancelSelectPieceList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.ChangeBackgroundImg
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Img                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFinaleInteractPointType                InteractType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::ChangeBackgroundImg(const class UTexture2D* Img, const EFinaleInteractPointType InteractType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "ChangeBackgroundImg");

	Params::RCNzFinaleManagerBase_ChangeBackgroundImg Parms{};

	Parms.Img = Img;
	Parms.InteractType = InteractType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzFinaleManagerBase.CheckAllDetectiveSectionState
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckAllDetectiveSectionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckAllDetectiveSectionState");

	Params::RCNzFinaleManagerBase_CheckAllDetectiveSectionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CheckCurrentFrameInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFinaleAutoPlayInputType                targetInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckCurrentFrameInput(EFinaleAutoPlayInputType targetInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckCurrentFrameInput");

	Params::RCNzFinaleManagerBase_CheckCurrentFrameInput Parms{};

	Parms.targetInput = targetInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CheckCurrentMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFinaleSceneType                        isMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckCurrentMode(EFinaleSceneType isMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckCurrentMode");

	Params::RCNzFinaleManagerBase_CheckCurrentMode Parms{};

	Parms.isMode = isMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CheckCursorHoverPageMoveIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isAutoMove                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckCursorHoverPageMoveIcon(bool isAutoMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckCursorHoverPageMoveIcon");

	Params::RCNzFinaleManagerBase_CheckCursorHoverPageMoveIcon Parms{};

	Parms.isAutoMove = isAutoMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CheckCursorHoverPieceListOpenIcon
// (Final, Native, Public)
// Parameters:
// bool                                    isAutoMove                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckCursorHoverPieceListOpenIcon(bool isAutoMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckCursorHoverPieceListOpenIcon");

	Params::RCNzFinaleManagerBase_CheckCursorHoverPieceListOpenIcon Parms{};

	Parms.isAutoMove = isAutoMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CheckDetectiveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckDetectiveState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckDetectiveState");

	Params::RCNzFinaleManagerBase_CheckDetectiveState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CheckHoverItem
// (Final, Native, Public)
// Parameters:
// float                                   deltaSecond                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::CheckHoverItem(float deltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckHoverItem");

	Params::RCNzFinaleManagerBase_CheckHoverItem Parms{};

	Parms.deltaSecond = deltaSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.CheckIsLockCurrentSelectedPiece
// (Final, Native, Public)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       pieceInfo                                              (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckIsLockCurrentSelectedPiece(const struct FRCNzFinalePieceObjectInfo& pieceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckIsLockCurrentSelectedPiece");

	Params::RCNzFinaleManagerBase_CheckIsLockCurrentSelectedPiece Parms{};

	Parms.pieceInfo = std::move(pieceInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CheckSelectPiece
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       Info                                                   (Parm, NativeAccessSpecifierPublic)
// struct FVector2D                        PiecePosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckSelectPiece(const struct FRCNzFinalePieceObjectInfo& Info, struct FVector2D* PiecePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckSelectPiece");

	Params::RCNzFinaleManagerBase_CheckSelectPiece Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PiecePosition != nullptr)
		*PiecePosition = std::move(Parms.PiecePosition);

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.CheckTargetDetectiveSectionState
// (Final, Native, Public)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::CheckTargetDetectiveSectionState(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "CheckTargetDetectiveSectionState");

	Params::RCNzFinaleManagerBase_CheckTargetDetectiveSectionState Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.ClearQuestionWidget
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::ClearQuestionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "ClearQuestionWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.DebugAutoPlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isClearMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::DebugAutoPlay(float DeltaTime, bool isClearMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "DebugAutoPlay");

	Params::RCNzFinaleManagerBase_DebugAutoPlay Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.isClearMode = isClearMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.DebugSelectPiece
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::DebugSelectPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "DebugSelectPiece");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.EnterPieceObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCNzFinalePieceBase*             piece                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::EnterPieceObject(class ARCNzFinalePieceBase* piece)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "EnterPieceObject");

	Params::RCNzFinaleManagerBase_EnterPieceObject Parms{};

	Parms.piece = piece;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.EnterSectionActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCNzFinaleHeadingLineBase*       TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::EnterSectionActor(class ARCNzFinaleHeadingLineBase* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "EnterSectionActor");

	Params::RCNzFinaleManagerBase_EnterSectionActor Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.ExitPieceObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCNzFinalePieceBase*             piece                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::ExitPieceObject(class ARCNzFinalePieceBase* piece)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "ExitPieceObject");

	Params::RCNzFinaleManagerBase_ExitPieceObject Parms{};

	Parms.piece = piece;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.ExitSectionActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCNzFinaleHeadingLineBase*       TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::ExitSectionActor(class ARCNzFinaleHeadingLineBase* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "ExitSectionActor");

	Params::RCNzFinaleManagerBase_ExitSectionActor Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FiishSuccessAllSectionInteractPointAnimation
// (Native, Event, Public, BlueprintEvent)

void ARCNzFinaleManagerBase::FiishSuccessAllSectionInteractPointAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FiishSuccessAllSectionInteractPointAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinaleFinishEvent
// (Final, Native, Public)

void ARCNzFinaleManagerBase::FinaleFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinaleFinishEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishedFinaleInteractIconWidgetAnim
// (Final, Native, Public)
// Parameters:
// bool                                    isSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::FinishedFinaleInteractIconWidgetAnim(bool isSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishedFinaleInteractIconWidgetAnim");

	Params::RCNzFinaleManagerBase_FinishedFinaleInteractIconWidgetAnim Parms{};

	Parms.isSuccess = isSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishedLightingAAnim
// (Final, Native, Public)

void ARCNzFinaleManagerBase::FinishedLightingAAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishedLightingAAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishedMainLayoutFinishAnim
// (Final, Native, Public)

void ARCNzFinaleManagerBase::FinishedMainLayoutFinishAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishedMainLayoutFinishAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishedMainLayoutStartAnim
// (Final, Native, Public)

void ARCNzFinaleManagerBase::FinishedMainLayoutStartAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishedMainLayoutStartAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishGetPieceAnimation
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::FinishGetPieceAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishGetPieceAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishIndexClearEvent
// (Final, Native, Public)

void ARCNzFinaleManagerBase::FinishIndexClearEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishIndexClearEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishPieceDetailUnlock
// (Final, Native, Public)

void ARCNzFinaleManagerBase::FinishPieceDetailUnlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishPieceDetailUnlock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishQuestionWidgetStartAnim
// (Final, Native, Public)

void ARCNzFinaleManagerBase::FinishQuestionWidgetStartAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishQuestionWidgetStartAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishSuccessSectionAllInteractPointAnimation
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::FinishSuccessSectionAllInteractPointAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishSuccessSectionAllInteractPointAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishSucessInteractPointAnimation
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::FinishSucessInteractPointAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishSucessInteractPointAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishSwitchDetectiveAssemblyMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleManagerBase::FinishSwitchDetectiveAssemblyMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishSwitchDetectiveAssemblyMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.FinishSwitchHeadingMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleManagerBase::FinishSwitchHeadingMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "FinishSwitchHeadingMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.GameOverEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleManagerBase::GameOverEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GameOverEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleManagerBase.GetBackgroundImgPath
// (Final, Native, Public)
// Parameters:
// class FName                             BackgroundImgID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetBackgroundImgPath(class FName BackgroundImgID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetBackgroundImgPath");

	Params::RCNzFinaleManagerBase_GetBackgroundImgPath Parms{};

	Parms.BackgroundImgID = BackgroundImgID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCurrentCursorMoveSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNzFinaleManagerBase::GetCurrentCursorMoveSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCurrentCursorMoveSpeed");

	Params::RCNzFinaleManagerBase_GetCurrentCursorMoveSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCurrentDPI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNzFinaleManagerBase::GetCurrentDPI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCurrentDPI");

	Params::RCNzFinaleManagerBase_GetCurrentDPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCurrentHoverInteratPointType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFinaleInteractPointType                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFinaleInteractPointType ARCNzFinaleManagerBase::GetCurrentHoverInteratPointType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCurrentHoverInteratPointType");

	Params::RCNzFinaleManagerBase_GetCurrentHoverInteratPointType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCurrentHoverPiecePosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ARCNzFinaleManagerBase::GetCurrentHoverPiecePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCurrentHoverPiecePosition");

	Params::RCNzFinaleManagerBase_GetCurrentHoverPiecePosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCurrentSceneID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNzFinaleManagerBase::GetCurrentSceneID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCurrentSceneID");

	Params::RCNzFinaleManagerBase_GetCurrentSceneID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCurrentSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCNzFinaleHeadingLineBase*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCNzFinaleHeadingLineBase* ARCNzFinaleManagerBase::GetCurrentSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCurrentSection");

	Params::RCNzFinaleManagerBase_GetCurrentSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCurrentSectionDetectivePointState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> ARCNzFinaleManagerBase::GetCurrentSectionDetectivePointState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCurrentSectionDetectivePointState");

	Params::RCNzFinaleManagerBase_GetCurrentSectionDetectivePointState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCurrentSectionID
// (Final, Native, Public)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNzFinaleManagerBase::GetCurrentSectionID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCurrentSectionID");

	Params::RCNzFinaleManagerBase_GetCurrentSectionID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCursorPosViewPortSize
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ARCNzFinaleManagerBase::GetCursorPosViewPortSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCursorPosViewPortSize");

	Params::RCNzFinaleManagerBase_GetCursorPosViewPortSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetCursorScreenPosition
// (Final, Native, Public, HasOutParams)
// Parameters:
// float                                   PositionX                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PositionY                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::GetCursorScreenPosition(float* PositionX, float* PositionY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetCursorScreenPosition");

	Params::RCNzFinaleManagerBase_GetCursorScreenPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PositionX != nullptr)
		*PositionX = Parms.PositionX;

	if (PositionY != nullptr)
		*PositionY = Parms.PositionY;
}


// Function RC.RCNzFinaleManagerBase.GetDataTableRootPath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetDataTableRootPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetDataTableRootPath");

	Params::RCNzFinaleManagerBase_GetDataTableRootPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetDetectiveBackgroundImageList
// (Final, Native, Public)
// Parameters:
// class FString                           targetSectionID                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* ARCNzFinaleManagerBase::GetDetectiveBackgroundImageList(const class FString& targetSectionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetDetectiveBackgroundImageList");

	Params::RCNzFinaleManagerBase_GetDetectiveBackgroundImageList Parms{};

	Parms.targetSectionID = std::move(targetSectionID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetDetectiveBackgroundImgScale
// (Final, Native, Public, HasDefaults)
// Parameters:
// class FString                           targetSectionID                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ARCNzFinaleManagerBase::GetDetectiveBackgroundImgScale(const class FString& targetSectionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetDetectiveBackgroundImgScale");

	Params::RCNzFinaleManagerBase_GetDetectiveBackgroundImgScale Parms{};

	Parms.targetSectionID = std::move(targetSectionID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetDetectiveBackgroundWidget
// (Final, Native, Public)
// Parameters:
// class FName                             targetSectionID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCNzUiFinaleDetectiveSceneWidget*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCNzUiFinaleDetectiveSceneWidget* ARCNzFinaleManagerBase::GetDetectiveBackgroundWidget(class FName targetSectionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetDetectiveBackgroundWidget");

	Params::RCNzFinaleManagerBase_GetDetectiveBackgroundWidget Parms{};

	Parms.targetSectionID = targetSectionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetDetectiveImageRootPath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetDetectiveImageRootPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetDetectiveImageRootPath");

	Params::RCNzFinaleManagerBase_GetDetectiveImageRootPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetDetectiveSceneWidgetClass
// (Final, Native, Public)
// Parameters:
// class FName                             targetSectionID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUserWidget>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UUserWidget> ARCNzFinaleManagerBase::GetDetectiveSceneWidgetClass(class FName targetSectionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetDetectiveSceneWidgetClass");

	Params::RCNzFinaleManagerBase_GetDetectiveSceneWidgetClass Parms{};

	Parms.targetSectionID = targetSectionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetDetectiveSceneWidgetPath
// (Final, Native, Public)
// Parameters:
// class FName                             targetSectionID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetDetectiveSceneWidgetPath(class FName targetSectionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetDetectiveSceneWidgetPath");

	Params::RCNzFinaleManagerBase_GetDetectiveSceneWidgetPath Parms{};

	Parms.targetSectionID = targetSectionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetFinaleDataTablePath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetFinaleDataTablePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetFinaleDataTablePath");

	Params::RCNzFinaleManagerBase_GetFinaleDataTablePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetFinaleDetectiveBackgroundImageDataTablePath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetFinaleDetectiveBackgroundImageDataTablePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetFinaleDetectiveBackgroundImageDataTablePath");

	Params::RCNzFinaleManagerBase_GetFinaleDetectiveBackgroundImageDataTablePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetFinalePieceDataTablePath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetFinalePieceDataTablePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetFinalePieceDataTablePath");

	Params::RCNzFinaleManagerBase_GetFinalePieceDataTablePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetFinaleSceneDataTablePath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetFinaleSceneDataTablePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetFinaleSceneDataTablePath");

	Params::RCNzFinaleManagerBase_GetFinaleSceneDataTablePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetFinaleSectionDataTablePath
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetFinaleSectionDataTablePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetFinaleSectionDataTablePath");

	Params::RCNzFinaleManagerBase_GetFinaleSectionDataTablePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetIsUseDetectiveSceneScaleParam
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::GetIsUseDetectiveSceneScaleParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetIsUseDetectiveSceneScaleParam");

	Params::RCNzFinaleManagerBase_GetIsUseDetectiveSceneScaleParam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetPieceCurrentHoverInteractPoint
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::GetPieceCurrentHoverInteractPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetPieceCurrentHoverInteractPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.GetPieceImageRootPath
// (Final, Native, Public)
// Parameters:
// bool                                    isSmall                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzFinaleManagerBase::GetPieceImageRootPath(bool isSmall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetPieceImageRootPath");

	Params::RCNzFinaleManagerBase_GetPieceImageRootPath Parms{};

	Parms.isSmall = isSmall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetPieceSuccessTargetPage
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       pieceInfo                                              (Parm, NativeAccessSpecifierPublic)
// int32                                   currentIdx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   idx                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SectionName                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   pageMoveDir                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::GetPieceSuccessTargetPage(const struct FRCNzFinalePieceObjectInfo& pieceInfo, int32 currentIdx, int32* idx, class FName* SectionName, int32* pageMoveDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetPieceSuccessTargetPage");

	Params::RCNzFinaleManagerBase_GetPieceSuccessTargetPage Parms{};

	Parms.pieceInfo = std::move(pieceInfo);
	Parms.currentIdx = currentIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (idx != nullptr)
		*idx = Parms.idx;

	if (SectionName != nullptr)
		*SectionName = Parms.SectionName;

	if (pageMoveDir != nullptr)
		*pageMoveDir = Parms.pageMoveDir;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetSectionActorPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCNzFinaleManagerBase::GetSectionActorPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetSectionActorPosition");

	Params::RCNzFinaleManagerBase_GetSectionActorPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetTargetIdxPageText
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   targetIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           titleTxt                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   sectionTxt                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::GetTargetIdxPageText(int32 targetIdx, class FString* titleTxt, int32* sectionTxt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetTargetIdxPageText");

	Params::RCNzFinaleManagerBase_GetTargetIdxPageText Parms{};

	Parms.targetIdx = targetIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (titleTxt != nullptr)
		*titleTxt = std::move(Parms.titleTxt);

	if (sectionTxt != nullptr)
		*sectionTxt = Parms.sectionTxt;
}


// Function RC.RCNzFinaleManagerBase.GetTargetIndexSectionID
// (Final, Native, Public)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNzFinaleManagerBase::GetTargetIndexSectionID(int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetTargetIndexSectionID");

	Params::RCNzFinaleManagerBase_GetTargetIndexSectionID Parms{};

	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetTargetPiecePosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// class FName                             TargetID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCNzFinaleManagerBase::GetTargetPiecePosition(class FName TargetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetTargetPiecePosition");

	Params::RCNzFinaleManagerBase_GetTargetPiecePosition Parms{};

	Parms.TargetID = TargetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetTargetPieceSpawnPosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRCParamNzFinaleSectionTableRow  Data                                                   (Parm, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ARCNzFinaleManagerBase::GetTargetPieceSpawnPosition(int32 idx, const struct FRCParamNzFinaleSectionTableRow& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetTargetPieceSpawnPosition");

	Params::RCNzFinaleManagerBase_GetTargetPieceSpawnPosition Parms{};

	Parms.idx = idx;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetTargetSectionDetectivePointState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             targetSectionID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> ARCNzFinaleManagerBase::GetTargetSectionDetectivePointState(class FName targetSectionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetTargetSectionDetectivePointState");

	Params::RCNzFinaleManagerBase_GetTargetSectionDetectivePointState Parms{};

	Parms.targetSectionID = targetSectionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.GetTargetSectionPieceList
// (Final, Native, Public)
// Parameters:
// class FName                             targetSectionID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRCNzFinaleGamePieceData> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRCNzFinaleGamePieceData> ARCNzFinaleManagerBase::GetTargetSectionPieceList(class FName targetSectionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "GetTargetSectionPieceList");

	Params::RCNzFinaleManagerBase_GetTargetSectionPieceList Parms{};

	Parms.targetSectionID = targetSectionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.InCorrectDamage
// (Final, Native, Public)

void ARCNzFinaleManagerBase::InCorrectDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "InCorrectDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.InitializeRegisterUIEvent
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::InitializeRegisterUIEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "InitializeRegisterUIEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.IsCheckHoverCursorIsPick
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::IsCheckHoverCursorIsPick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "IsCheckHoverCursorIsPick");

	Params::RCNzFinaleManagerBase_IsCheckHoverCursorIsPick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.IsCurrentSection
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::IsCurrentSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "IsCurrentSection");

	Params::RCNzFinaleManagerBase_IsCurrentSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.IsExistNextSection
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::IsExistNextSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "IsExistNextSection");

	Params::RCNzFinaleManagerBase_IsExistNextSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.IsExistPrevSection
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::IsExistPrevSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "IsExistPrevSection");

	Params::RCNzFinaleManagerBase_IsExistPrevSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.IsExistTargetSection
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   TargetSceneIdx                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::IsExistTargetSection(int32 TargetSceneIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "IsExistTargetSection");

	Params::RCNzFinaleManagerBase_IsExistTargetSection Parms{};

	Parms.TargetSceneIdx = TargetSceneIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.IsHoverCusor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::IsHoverCusor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "IsHoverCusor");

	Params::RCNzFinaleManagerBase_IsHoverCusor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.LoadDataTable
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::LoadDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "LoadDataTable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.LoadTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Path                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* ARCNzFinaleManagerBase::LoadTexture(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "LoadTexture");

	Params::RCNzFinaleManagerBase_LoadTexture Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.MoveMode
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::MoveMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MoveMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.MoveModeToHeadingProcess
// (Final, Native, Public)

void ARCNzFinaleManagerBase::MoveModeToHeadingProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MoveModeToHeadingProcess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.MoveNextSection
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::MoveNextSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MoveNextSection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.MoveNextSectionProcess
// (Final, Native, Public)

void ARCNzFinaleManagerBase::MoveNextSectionProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MoveNextSectionProcess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.MovePrevSection
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::MovePrevSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MovePrevSection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.MovePrevSectionProcess
// (Final, Native, Public)

void ARCNzFinaleManagerBase::MovePrevSectionProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MovePrevSectionProcess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.MoveSection
// (Final, Native, Public)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::MoveSection(int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MoveSection");

	Params::RCNzFinaleManagerBase_MoveSection Parms{};

	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.MoveSectionProcess
// (Final, Native, Public)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::MoveSectionProcess(int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MoveSectionProcess");

	Params::RCNzFinaleManagerBase_MoveSectionProcess Parms{};

	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.MoveSectionProcess_OnEndAnimFinished
// (Final, Native, Public)

void ARCNzFinaleManagerBase::MoveSectionProcess_OnEndAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "MoveSectionProcess_OnEndAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.NextSection
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ARCNzFinaleHeadingLineBase*       Section                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::NextSection(class ARCNzFinaleHeadingLineBase** Section)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "NextSection");

	Params::RCNzFinaleManagerBase_NextSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Section != nullptr)
		*Section = Parms.Section;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.OnPageGuideClick
// (Final, Native, Protected, HasOutParams)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::OnPageGuideClick(int32 PageIndex, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "OnPageGuideClick");

	Params::RCNzFinaleManagerBase_OnPageGuideClick Parms{};

	Parms.PageIndex = PageIndex;
	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlayClearAnimation
// (Final, Native, Public)

void ARCNzFinaleManagerBase::PlayClearAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayClearAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlayFinaleMainLayoutFinishSE
// (Final, Native, Public)

void ARCNzFinaleManagerBase::PlayFinaleMainLayoutFinishSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayFinaleMainLayoutFinishSE");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlayFinaleSE
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFinaleSEType                           targetSE                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::PlayFinaleSE(EFinaleSEType targetSE, bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayFinaleSE");

	Params::RCNzFinaleManagerBase_PlayFinaleSE Parms{};

	Parms.targetSE = targetSE;
	Parms.IsLoop = IsLoop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzFinaleManagerBase.PlayFinaleTimelimitFinishSE
// (Final, Native, Public)

void ARCNzFinaleManagerBase::PlayFinaleTimelimitFinishSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayFinaleTimelimitFinishSE");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlayFinishAnimation
// (Final, Native, Public)

void ARCNzFinaleManagerBase::PlayFinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayFinishAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlayGetPieceAnimation
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::PlayGetPieceAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayGetPieceAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlayIndexClearSE
// (Final, Native, Public)

void ARCNzFinaleManagerBase::PlayIndexClearSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayIndexClearSE");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlaySuccessAllSectionInteractPointAnimation
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::PlaySuccessAllSectionInteractPointAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlaySuccessAllSectionInteractPointAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlaySuccessInteractPointAnimation
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::PlaySuccessInteractPointAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlaySuccessInteractPointAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlaySuccessSectionAllInteractPointAnimation
// (Final, Native, Public, BlueprintCallable)

void ARCNzFinaleManagerBase::PlaySuccessSectionAllInteractPointAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlaySuccessSectionAllInteractPointAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.PlayTimeLimitSE
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleManagerBase::PlayTimeLimitSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayTimeLimitSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleManagerBase.PlayTimeSignalSE
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleManagerBase::PlayTimeSignalSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PlayTimeSignalSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleManagerBase.PrevSection
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ARCNzFinaleHeadingLineBase*       Section                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::PrevSection(class ARCNzFinaleHeadingLineBase** Section)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "PrevSection");

	Params::RCNzFinaleManagerBase_PrevSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Section != nullptr)
		*Section = Parms.Section;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.SetCursorPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Pos                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::SetCursorPosition(const struct FVector2D& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "SetCursorPosition");

	Params::RCNzFinaleManagerBase_SetCursorPosition Parms{};

	Parms.Pos = std::move(Pos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.SetCursorVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::SetCursorVisible(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "SetCursorVisible");

	Params::RCNzFinaleManagerBase_SetCursorVisible Parms{};

	Parms.IsVisible = IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.SetIsMouseCursor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::SetIsMouseCursor(bool Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "SetIsMouseCursor");

	Params::RCNzFinaleManagerBase_SetIsMouseCursor Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.SetIsMouseCursorState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isStatic                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::SetIsMouseCursorState(bool IsVisible, bool isStatic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "SetIsMouseCursorState");

	Params::RCNzFinaleManagerBase_SetIsMouseCursorState Parms{};

	Parms.IsVisible = IsVisible;
	Parms.isStatic = isStatic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.SetSelectedPieceIdx
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::SetSelectedPieceIdx(int32 idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "SetSelectedPieceIdx");

	Params::RCNzFinaleManagerBase_SetSelectedPieceIdx Parms{};

	Parms.idx = idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.ShowDirectingUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::ShowDirectingUI(bool isSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "ShowDirectingUI");

	Params::RCNzFinaleManagerBase_ShowDirectingUI Parms{};

	Parms.isSuccess = isSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.ShowPieceLayout
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::ShowPieceLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "ShowPieceLayout");

	Params::RCNzFinaleManagerBase_ShowPieceLayout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.SpawnSectionActorList
// (Final, Native, Public)

void ARCNzFinaleManagerBase::SpawnSectionActorList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "SpawnSectionActorList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.StartTutorial
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinaleManagerBase::StartTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "StartTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzFinaleManagerBase.UpdateCursor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   deltaSecond                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::UpdateCursor(float deltaSecond, float X, float Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "UpdateCursor");

	Params::RCNzFinaleManagerBase_UpdateCursor Parms{};

	Parms.deltaSecond = deltaSecond;
	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.UpdateLimitTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   deltaSecond                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinaleManagerBase::UpdateLimitTime(float deltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "UpdateLimitTime");

	Params::RCNzFinaleManagerBase_UpdateLimitTime Parms{};

	Parms.deltaSecond = deltaSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinaleManagerBase.UpdatePageMoveIcon
// (Final, Native, Public)

void ARCNzFinaleManagerBase::UpdatePageMoveIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "UpdatePageMoveIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.UpdatePieceData
// (Final, Native, Public)

void ARCNzFinaleManagerBase::UpdatePieceData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "UpdatePieceData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.UpdatePieceDataList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       Info                                                   (Parm, NativeAccessSpecifierPublic)

void ARCNzFinaleManagerBase::UpdatePieceDataList(const struct FRCNzFinalePieceObjectInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "UpdatePieceDataList");

	Params::RCNzFinaleManagerBase_UpdatePieceDataList Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.UpdatePieceListData
// (Final, Native, Public)

void ARCNzFinaleManagerBase::UpdatePieceListData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "UpdatePieceListData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinaleManagerBase.UpdateSectionPageGuide
// (Final, Native, Public)

void ARCNzFinaleManagerBase::UpdateSectionPageGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinaleManagerBase", "UpdateSectionPageGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinalePieceBase.CheckPieceID
// (Final, Native, Public)
// Parameters:
// class FName                             TargetID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzFinalePieceBase::CheckPieceID(class FName TargetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinalePieceBase", "CheckPieceID");

	Params::RCNzFinalePieceBase_CheckPieceID Parms{};

	Parms.TargetID = TargetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinalePieceBase.CompletePiece
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzFinalePieceBase::CompletePiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinalePieceBase", "CompletePiece");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzFinalePieceBase.GetAnswerPieceID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNzFinalePieceBase::GetAnswerPieceID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinalePieceBase", "GetAnswerPieceID");

	Params::RCNzFinalePieceBase_GetAnswerPieceID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzFinalePieceBase.InitializeFinalePiece
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ImagePath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Type                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NameTextID                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TextID                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             answerID_0                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PieceID_0                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzFinalePieceBase::InitializeFinalePiece(const class FString& ImagePath, const int32& Type, const class FName& NameTextID, const class FName& TextID, const class FName& answerID_0, const class FName& PieceID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzFinalePieceBase", "InitializeFinalePiece");

	Params::RCNzFinalePieceBase_InitializeFinalePiece Parms{};

	Parms.ImagePath = std::move(ImagePath);
	Parms.Type = Type;
	Parms.NameTextID = NameTextID;
	Parms.TextID = TextID;
	Parms.answerID_0 = answerID_0;
	Parms.PieceID_0 = PieceID_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterCategoryListData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterCategoryListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterCategoryListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReHUD.CheckFreeMoveButtonGuide
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::CheckFreeMoveButtonGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "CheckFreeMoveButtonGuide");

	Params::RCReHUD_CheckFreeMoveButtonGuide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.CheckLocationFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::CheckLocationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "CheckLocationFinished");

	Params::RCReHUD_CheckLocationFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.CheckLocationRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::CheckLocationRunning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "CheckLocationRunning");

	Params::RCReHUD_CheckLocationRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.CheckLocationStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bInMiniMap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::CheckLocationStarted(bool bInMiniMap, bool bInLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "CheckLocationStarted");

	Params::RCReHUD_CheckLocationStarted Parms{};

	Parms.bInMiniMap = bInMiniMap;
	Parms.bInLocation = bInLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.CheckSelectFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::CheckSelectFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "CheckSelectFinished");

	Params::RCReHUD_CheckSelectFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.CheckSelectStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::CheckSelectStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "CheckSelectStarted");

	Params::RCReHUD_CheckSelectStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.CheckSelectWindow
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::CheckSelectWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "CheckSelectWindow");

	Params::RCReHUD_CheckSelectWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.CheckSoundNovelFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::CheckSoundNovelFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "CheckSoundNovelFinished");

	Params::RCReHUD_CheckSoundNovelFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.FinishLocation
// (Final, Native, Public, BlueprintCallable)

void ARCReHUD::FinishLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "FinishLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReHUD.FreeMoveButtonGuideFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::FreeMoveButtonGuideFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "FreeMoveButtonGuideFinish");

	Params::RCReHUD_FreeMoveButtonGuideFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.FreeMoveButtonGuideStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::FreeMoveButtonGuideStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "FreeMoveButtonGuideStart");

	Params::RCReHUD_FreeMoveButtonGuideStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.FreeMoveButtonGuideUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::FreeMoveButtonGuideUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "FreeMoveButtonGuideUpdate");

	Params::RCReHUD_FreeMoveButtonGuideUpdate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.FreeMoveFinish
// (Final, Native, Public, BlueprintCallable)

void ARCReHUD::FreeMoveFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "FreeMoveFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReHUD.FreeMoveStart
// (Final, Native, Public, BlueprintCallable)

void ARCReHUD::FreeMoveStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "FreeMoveStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReHUD.GetCurrentLocationDisplayLocationID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCReHUD::GetCurrentLocationDisplayLocationID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetCurrentLocationDisplayLocationID");

	Params::RCReHUD_GetCurrentLocationDisplayLocationID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetCurrentLocationDisplayTextID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCReHUD::GetCurrentLocationDisplayTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetCurrentLocationDisplayTextID");

	Params::RCReHUD_GetCurrentLocationDisplayTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetCurrentLocationID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCReHUD::GetCurrentLocationID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetCurrentLocationID");

	Params::RCReHUD_GetCurrentLocationID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetCurrentLocationTextID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCReHUD::GetCurrentLocationTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetCurrentLocationTextID");

	Params::RCReHUD_GetCurrentLocationTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetCurrentMiniMapLocationID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCReHUD::GetCurrentMiniMapLocationID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetCurrentMiniMapLocationID");

	Params::RCReHUD_GetCurrentMiniMapLocationID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetCurrentMiniMapTextID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCReHUD::GetCurrentMiniMapTextID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetCurrentMiniMapTextID");

	Params::RCReHUD_GetCurrentMiniMapTextID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetFreeMoveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCReHUDFreeMoveState                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCReHUDFreeMoveState ARCReHUD::GetFreeMoveState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetFreeMoveState");

	Params::RCReHUD_GetFreeMoveState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetHUDState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCReHUDState                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCReHUDState ARCReHUD::GetHUDState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetHUDState");

	Params::RCReHUD_GetHUDState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCReHUD::GetSelectedIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetSelectedIndex");

	Params::RCReHUD_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetSelectIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCReHUD::GetSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetSelectIndex");

	Params::RCReHUD_GetSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetSelectWindowState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDWidgetState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDWidgetState ARCReHUD::GetSelectWindowState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetSelectWindowState");

	Params::RCReHUD_GetSelectWindowState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.GetTalkWindowState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDWidgetState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDWidgetState ARCReHUD::GetTalkWindowState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "GetTalkWindowState");

	Params::RCReHUD_GetTalkWindowState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.LoadLocationDataName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             in_LocationID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             in_LocationTextID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::LoadLocationDataName(class FName in_LocationID, class FName in_LocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "LoadLocationDataName");

	Params::RCReHUD_LoadLocationDataName Parms{};

	Parms.in_LocationID = in_LocationID;
	Parms.in_LocationTextID = in_LocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SelectFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SelectFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SelectFinish");

	Params::RCReHUD_SelectFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SelectSetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   in_Index                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             in_TextID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    in_bCheckMark                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SelectSetData(int32 in_Index, class FName in_TextID, bool in_bCheckMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SelectSetData");

	Params::RCReHUD_SelectSetData Parms{};

	Parms.in_Index = in_Index;
	Parms.in_TextID = in_TextID;
	Parms.in_bCheckMark = in_bCheckMark;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SelectStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   in_SelectNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             in_QuestionTextID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SelectStart(int32 in_SelectNum, class FName in_QuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SelectStart");

	Params::RCReHUD_SelectStart Parms{};

	Parms.in_SelectNum = in_SelectNum;
	Parms.in_QuestionTextID = in_QuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SelectStartWithDataArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRCReHUDSelectData>       InSelectDataArray                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             InQuestionTextID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SelectStartWithDataArray(const TArray<struct FRCReHUDSelectData>& InSelectDataArray, class FName InQuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SelectStartWithDataArray");

	Params::RCReHUD_SelectStartWithDataArray Parms{};

	Parms.InSelectDataArray = std::move(InSelectDataArray);
	Parms.InQuestionTextID = InQuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SetLocationDisplayLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             in_LocationID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             in_LocationTextID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SetLocationDisplayLocation(class FName in_LocationID, class FName in_LocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SetLocationDisplayLocation");

	Params::RCReHUD_SetLocationDisplayLocation Parms{};

	Parms.in_LocationID = in_LocationID;
	Parms.in_LocationTextID = in_LocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SetLocationName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             in_LocationID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             in_LocationTextID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SetLocationName(class FName in_LocationID, class FName in_LocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SetLocationName");

	Params::RCReHUD_SetLocationName Parms{};

	Parms.in_LocationID = in_LocationID;
	Parms.in_LocationTextID = in_LocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SetMiniMapLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             in_LocationID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             in_LocationTextID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SetMiniMapLocation(class FName in_LocationID, class FName in_LocationTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SetMiniMapLocation");

	Params::RCReHUD_SetMiniMapLocation Parms{};

	Parms.in_LocationID = in_LocationID;
	Parms.in_LocationTextID = in_LocationTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SoundNovelShowBackgroundFade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SoundNovelShowBackgroundFade(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SoundNovelShowBackgroundFade");

	Params::RCReHUD_SoundNovelShowBackgroundFade Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SoundNovelStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InSoundNovelDataTable                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowBackgroundFade                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SoundNovelStart(class UDataTable* InSoundNovelDataTable, bool bInShowBackgroundFade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SoundNovelStart");

	Params::RCReHUD_SoundNovelStart Parms{};

	Parms.InSoundNovelDataTable = InSoundNovelDataTable;
	Parms.bInShowBackgroundFade = bInShowBackgroundFade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.SoundNovelWidgetStart
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInShowBackgroundFade                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCReHUD::SoundNovelWidgetStart(bool bInShowBackgroundFade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "SoundNovelWidgetStart");

	Params::RCReHUD_SoundNovelWidgetStart Parms{};

	Parms.bInShowBackgroundFade = bInShowBackgroundFade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReHUD.StartLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMiniMap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCReHUD::StartLocation(bool bInMiniMap, bool bInLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReHUD", "StartLocation");

	Params::RCReHUD_StartLocation Parms{};

	Parms.bInMiniMap = bInMiniMap;
	Parms.bInLocation = bInLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamButtonGuideListData.Import
// (Native, Public, BlueprintCallable)

void URCParamButtonGuideListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamButtonGuideListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzHUD.CountdownGetMilliseconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzHUD::CountdownGetMilliseconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownGetMilliseconds");

	Params::RCNzHUD_CountdownGetMilliseconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownGetProgressAndMilliseconds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutProgress                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutMilliseconds                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownGetProgressAndMilliseconds(int32* OutProgress, int32* OutMilliseconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownGetProgressAndMilliseconds");

	Params::RCNzHUD_CountdownGetProgressAndMilliseconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProgress != nullptr)
		*OutProgress = Parms.OutProgress;

	if (OutMilliseconds != nullptr)
		*OutMilliseconds = Parms.OutMilliseconds;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownGetProgressAndSeconds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutProgress                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutSeconds                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownGetProgressAndSeconds(int32* OutProgress, float* OutSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownGetProgressAndSeconds");

	Params::RCNzHUD_CountdownGetProgressAndSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProgress != nullptr)
		*OutProgress = Parms.OutProgress;

	if (OutSeconds != nullptr)
		*OutSeconds = Parms.OutSeconds;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownGetProgressAndTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutProgress                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutHours                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutMinutes                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSeconds                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutMilliseconds                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownGetProgressAndTime(int32* OutProgress, int32* OutHours, int32* OutMinutes, int32* OutSeconds, int32* OutMilliseconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownGetProgressAndTime");

	Params::RCNzHUD_CountdownGetProgressAndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProgress != nullptr)
		*OutProgress = Parms.OutProgress;

	if (OutHours != nullptr)
		*OutHours = Parms.OutHours;

	if (OutMinutes != nullptr)
		*OutMinutes = Parms.OutMinutes;

	if (OutSeconds != nullptr)
		*OutSeconds = Parms.OutSeconds;

	if (OutMilliseconds != nullptr)
		*OutMilliseconds = Parms.OutMilliseconds;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownGetSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNzHUD::CountdownGetSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownGetSeconds");

	Params::RCNzHUD_CountdownGetSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownGetTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutHours                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutMinutes                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSeconds                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutMilliseconds                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownGetTime(int32* OutHours, int32* OutMinutes, int32* OutSeconds, int32* OutMilliseconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownGetTime");

	Params::RCNzHUD_CountdownGetTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHours != nullptr)
		*OutHours = Parms.OutHours;

	if (OutMinutes != nullptr)
		*OutMinutes = Parms.OutMinutes;

	if (OutSeconds != nullptr)
		*OutSeconds = Parms.OutSeconds;

	if (OutMilliseconds != nullptr)
		*OutMilliseconds = Parms.OutMilliseconds;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownInitialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownInitialize");

	Params::RCNzHUD_CountdownInitialize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownIsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownIsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownIsInitialized");

	Params::RCNzHUD_CountdownIsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownPause");

	Params::RCNzHUD_CountdownPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownRelease");

	Params::RCNzHUD_CountdownRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownResume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownResume");

	Params::RCNzHUD_CountdownResume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownSetProgressAndTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownSetProgressAndTime(int32 InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownSetProgressAndTime");

	Params::RCNzHUD_CountdownSetProgressAndTime Parms{};

	Parms.InProgress = InProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownStartMillisecond
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInWidgetOpen                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownStartMillisecond(int32 InTime, bool bInWidgetOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownStartMillisecond");

	Params::RCNzHUD_CountdownStartMillisecond Parms{};

	Parms.InTime = InTime;
	Parms.bInWidgetOpen = bInWidgetOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownStartSecond
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInWidgetOpen                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownStartSecond(float InTime, bool bInWidgetOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownStartSecond");

	Params::RCNzHUD_CountdownStartSecond Parms{};

	Parms.InTime = InTime;
	Parms.bInWidgetOpen = bInWidgetOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownStartTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InHours                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMinutes                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMilliseconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInWidgetOpen                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownStartTime(int32 InHours, int32 InMinutes, int32 InSeconds, int32 InMilliseconds, bool bInWidgetOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownStartTime");

	Params::RCNzHUD_CountdownStartTime Parms{};

	Parms.InHours = InHours;
	Parms.InMinutes = InMinutes;
	Parms.InSeconds = InSeconds;
	Parms.InMilliseconds = InMilliseconds;
	Parms.bInWidgetOpen = bInWidgetOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownStop");

	Params::RCNzHUD_CountdownStop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownWidgetClose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInTimerPause                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownWidgetClose(bool bInTimerPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownWidgetClose");

	Params::RCNzHUD_CountdownWidgetClose Parms{};

	Parms.bInTimerPause = bInTimerPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownWidgetIsClosed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownWidgetIsClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownWidgetIsClosed");

	Params::RCNzHUD_CountdownWidgetIsClosed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownWidgetIsOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownWidgetIsOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownWidgetIsOpened");

	Params::RCNzHUD_CountdownWidgetIsOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.CountdownWidgetOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::CountdownWidgetOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "CountdownWidgetOpen");

	Params::RCNzHUD_CountdownWidgetOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.GameOverGetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzHUD::GameOverGetSelectedIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "GameOverGetSelectedIndex");

	Params::RCNzHUD_GameOverGetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.GameOverIsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::GameOverIsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "GameOverIsFinished");

	Params::RCNzHUD_GameOverIsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.GameOverStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::GameOverStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "GameOverStart");

	Params::RCNzHUD_GameOverStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HintIsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::HintIsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HintIsFinished");

	Params::RCNzHUD_HintIsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HintStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             HintTextId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::HintStart(class FName HintTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HintStart");

	Params::RCNzHUD_HintStart Parms{};

	Parms.HintTextId = HintTextId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HPGaugeDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutResultHP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::HPGaugeDamage(int32 InDamage, int32* OutResultHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HPGaugeDamage");

	Params::RCNzHUD_HPGaugeDamage Parms{};

	Parms.InDamage = InDamage;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResultHP != nullptr)
		*OutResultHP = Parms.OutResultHP;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HPGaugeDamageForScene
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutResultHP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::HPGaugeDamageForScene(int32* OutResultHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HPGaugeDamageForScene");

	Params::RCNzHUD_HPGaugeDamageForScene Parms{};

	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResultHP != nullptr)
		*OutResultHP = Parms.OutResultHP;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HPGaugeFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::HPGaugeFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HPGaugeFinish");

	Params::RCNzHUD_HPGaugeFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HPGaugeGetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCAdvHUDWidgetState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCAdvHUDWidgetState ARCNzHUD::HPGaugeGetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HPGaugeGetState");

	Params::RCNzHUD_HPGaugeGetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HPGaugeRecover
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InRecover                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutResultHP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::HPGaugeRecover(int32 InRecover, int32* OutResultHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HPGaugeRecover");

	Params::RCNzHUD_HPGaugeRecover Parms{};

	Parms.InRecover = InRecover;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResultHP != nullptr)
		*OutResultHP = Parms.OutResultHP;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HPGaugeRecoverForScene
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutResultHP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::HPGaugeRecoverForScene(int32* OutResultHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HPGaugeRecoverForScene");

	Params::RCNzHUD_HPGaugeRecoverForScene Parms{};

	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResultHP != nullptr)
		*OutResultHP = Parms.OutResultHP;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.HPGaugeStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::HPGaugeStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "HPGaugeStart");

	Params::RCNzHUD_HPGaugeStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.SkillInfoListStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     skillNameTextIDList                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::SkillInfoListStart(const TArray<class FName>& skillNameTextIDList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "SkillInfoListStart");

	Params::RCNzHUD_SkillInfoListStart Parms{};

	Parms.skillNameTextIDList = std::move(skillNameTextIDList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.SkillInfoListStartByType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<ERCSkillFunctionType>            skillFunctionTypeList                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::SkillInfoListStartByType(const TArray<ERCSkillFunctionType>& skillFunctionTypeList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "SkillInfoListStartByType");

	Params::RCNzHUD_SkillInfoListStartByType Parms{};

	Parms.skillFunctionTypeList = std::move(skillFunctionTypeList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUD.SkillInfoListIsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzHUD::SkillInfoListIsFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzHUD", "SkillInfoListIsFinished");

	Params::RCNzHUD_SkillInfoListIsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUDBFL.CountdownGetMilliseconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzHUDBFL::CountdownGetMilliseconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownGetMilliseconds");

	Params::RCNzHUDBFL_CountdownGetMilliseconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUDBFL.CountdownGetProgressAndMilliseconds
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Milliseconds                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownGetProgressAndMilliseconds(bool* bSucceeded, int32* Progress, int32* Milliseconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownGetProgressAndMilliseconds");

	Params::RCNzHUDBFL_CountdownGetProgressAndMilliseconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	if (Progress != nullptr)
		*Progress = Parms.Progress;

	if (Milliseconds != nullptr)
		*Milliseconds = Parms.Milliseconds;
}


// Function RC.RCNzHUDBFL.CountdownGetProgressAndSeconds
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Seconds                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownGetProgressAndSeconds(bool* bSucceeded, int32* Progress, float* Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownGetProgressAndSeconds");

	Params::RCNzHUDBFL_CountdownGetProgressAndSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	if (Progress != nullptr)
		*Progress = Parms.Progress;

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;
}


// Function RC.RCNzHUDBFL.CountdownGetProgressAndTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Hours                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minutes                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Seconds                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Milliseconds                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownGetProgressAndTime(bool* bSucceeded, int32* Progress, int32* Hours, int32* Minutes, int32* Seconds, int32* Milliseconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownGetProgressAndTime");

	Params::RCNzHUDBFL_CountdownGetProgressAndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	if (Progress != nullptr)
		*Progress = Parms.Progress;

	if (Hours != nullptr)
		*Hours = Parms.Hours;

	if (Minutes != nullptr)
		*Minutes = Parms.Minutes;

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;

	if (Milliseconds != nullptr)
		*Milliseconds = Parms.Milliseconds;
}


// Function RC.RCNzHUDBFL.CountdownGetSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCNzHUDBFL::CountdownGetSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownGetSeconds");

	Params::RCNzHUDBFL_CountdownGetSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUDBFL.CountdownGetTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Hours                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minutes                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Seconds                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Milliseconds                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownGetTime(bool* bSucceeded, int32* Hours, int32* Minutes, int32* Seconds, int32* Milliseconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownGetTime");

	Params::RCNzHUDBFL_CountdownGetTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	if (Hours != nullptr)
		*Hours = Parms.Hours;

	if (Minutes != nullptr)
		*Minutes = Parms.Minutes;

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;

	if (Milliseconds != nullptr)
		*Milliseconds = Parms.Milliseconds;
}


// Function RC.RCNzHUDBFL.CountdownInitialize
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownInitialize(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownInitialize");

	Params::RCNzHUDBFL_CountdownInitialize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownIsInitialized
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzHUDBFL::CountdownIsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownIsInitialized");

	Params::RCNzHUDBFL_CountdownIsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUDBFL.CountdownPause
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownPause(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownPause");

	Params::RCNzHUDBFL_CountdownPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownRelease
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownRelease(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownRelease");

	Params::RCNzHUDBFL_CountdownRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownResume
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownResume(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownResume");

	Params::RCNzHUDBFL_CountdownResume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownSetProgressAndTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Progress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownSetProgressAndTime(bool* bSucceeded, int32 Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownSetProgressAndTime");

	Params::RCNzHUDBFL_CountdownSetProgressAndTime Parms{};

	Parms.Progress = Progress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownStartMillisecond
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWidgetOpen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownStartMillisecond(bool* bSucceeded, int32 Time, bool bWidgetOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownStartMillisecond");

	Params::RCNzHUDBFL_CountdownStartMillisecond Parms{};

	Parms.Time = Time;
	Parms.bWidgetOpen = bWidgetOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownStartSecond
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWidgetOpen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownStartSecond(bool* bSucceeded, float Time, bool bWidgetOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownStartSecond");

	Params::RCNzHUDBFL_CountdownStartSecond Parms{};

	Parms.Time = Time;
	Parms.bWidgetOpen = bWidgetOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownStartTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Hours                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minutes                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Milliseconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWidgetOpen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownStartTime(bool* bSucceeded, int32 Hours, int32 Minutes, int32 Seconds, int32 Milliseconds, bool bWidgetOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownStartTime");

	Params::RCNzHUDBFL_CountdownStartTime Parms{};

	Parms.Hours = Hours;
	Parms.Minutes = Minutes;
	Parms.Seconds = Seconds;
	Parms.Milliseconds = Milliseconds;
	Parms.bWidgetOpen = bWidgetOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownStop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownStop(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownStop");

	Params::RCNzHUDBFL_CountdownStop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownWidgetClose
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTimerPause                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownWidgetClose(bool* bSucceeded, bool bTimerPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownWidgetClose");

	Params::RCNzHUDBFL_CountdownWidgetClose Parms{};

	Parms.bTimerPause = bTimerPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.CountdownWidgetIsClosed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzHUDBFL::CountdownWidgetIsClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownWidgetIsClosed");

	Params::RCNzHUDBFL_CountdownWidgetIsClosed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUDBFL.CountdownWidgetIsOpened
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzHUDBFL::CountdownWidgetIsOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownWidgetIsOpened");

	Params::RCNzHUDBFL_CountdownWidgetIsOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzHUDBFL.CountdownWidgetOpen
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::CountdownWidgetOpen(bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "CountdownWidgetOpen");

	Params::RCNzHUDBFL_CountdownWidgetOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCNzHUDBFL.GetBattleCutinPriority
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzHUDBFL::GetBattleCutinPriority(int32* Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "GetBattleCutinPriority");

	Params::RCNzHUDBFL_GetBattleCutinPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;
}


// Function RC.RCNzHUDBFL.GetNzHUD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCNzHUD*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCNzHUD* URCNzHUDBFL::GetNzHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzHUDBFL", "GetNzHUD");

	Params::RCNzHUDBFL_GetNzHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamAttachmentFormListData.Import
// (Native, Public, BlueprintCallable)

void URCParamAttachmentFormListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamAttachmentFormListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTB_FortActorBase.AttackFort
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DamageCheck                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HitCount                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Hp                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzMTB_FortActorBase::AttackFort(bool DamageCheck, bool* Result, int32* HitCount, int32* Hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_FortActorBase", "AttackFort");

	Params::RCNzMTB_FortActorBase_AttackFort Parms{};

	Parms.DamageCheck = DamageCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (HitCount != nullptr)
		*HitCount = Parms.HitCount;

	if (Hp != nullptr)
		*Hp = Parms.Hp;
}


// Function RC.RCNzMTB_FortActorBase.CheckAnswerKaikagiID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKaiKagiID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzMTB_FortActorBase::CheckAnswerKaikagiID(class FName InKaiKagiID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_FortActorBase", "CheckAnswerKaikagiID");

	Params::RCNzMTB_FortActorBase_CheckAnswerKaikagiID Parms{};

	Parms.InKaiKagiID = InKaiKagiID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzMTB_FortActorBase.LoadParamData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzMTB_FortActorBase::LoadParamData(class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_FortActorBase", "LoadParamData");

	Params::RCNzMTB_FortActorBase_LoadParamData Parms{};

	Parms.SceneID = SceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzMTB_FortActorBase.PlayFortTextVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzMTB_FortActorBase::PlayFortTextVoice(class ARCCharacterRender* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_FortActorBase", "PlayFortTextVoice");

	Params::RCNzMTB_FortActorBase_PlayFortTextVoice Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTB_FortActorBase.PlayTextVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzMTB_FortActorBase::PlayTextVoice(class ARCCharacterRender* InChara, class FName VoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_FortActorBase", "PlayTextVoice");

	Params::RCNzMTB_FortActorBase_PlayTextVoice Parms{};

	Parms.InChara = InChara;
	Parms.VoiceID = VoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamChapterSelectDialogData.Import
// (Native, Public, BlueprintCallable)

void URCParamChapterSelectDialogData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamChapterSelectDialogData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTB_WallActorBase.AttackWall
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWallWeakPointType                      Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzMTB_WallActorBase::AttackWall(const EWallWeakPointType Type, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_WallActorBase", "AttackWall");

	Params::RCNzMTB_WallActorBase_AttackWall Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function RC.RCNzMTB_WallActorBase.GetWallType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWallType                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWallType ARCNzMTB_WallActorBase::GetWallType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_WallActorBase", "GetWallType");

	Params::RCNzMTB_WallActorBase_GetWallType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzMTB_WallActorBase.InitializeWallActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzMTB_WallActorBase::InitializeWallActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_WallActorBase", "InitializeWallActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTB_WallActorBase.LoadParamData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzMTB_WallActorBase::LoadParamData(class FName SceneID, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_WallActorBase", "LoadParamData");

	Params::RCNzMTB_WallActorBase_LoadParamData Parms{};

	Parms.SceneID = SceneID;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzMTB_WallActorBase.PlayTextVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzMTB_WallActorBase::PlayTextVoice(class ARCCharacterRender* InChara, class FName VoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_WallActorBase", "PlayTextVoice");

	Params::RCNzMTB_WallActorBase_PlayTextVoice Parms{};

	Parms.InChara = InChara;
	Parms.VoiceID = VoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzMTB_WallActorBase.PlayWallTextVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzMTB_WallActorBase::PlayWallTextVoice(class ARCCharacterRender* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzMTB_WallActorBase", "PlayWallTextVoice");

	Params::RCNzMTB_WallActorBase_PlayWallTextVoice Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterModelListData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterModelListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterModelListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterDlcListData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterDlcListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterDlcListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleAnswerWordBase.AnswerCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   answerID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzPazzleAnswerWordBase::AnswerCheck(int32 answerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleAnswerWordBase", "AnswerCheck");

	Params::RCNzPazzleAnswerWordBase_AnswerCheck Parms{};

	Parms.answerID = answerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleAnswerWordBase.LoadAnswerList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SceneWordID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   targetBarrelIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleAnswerWordBase::LoadAnswerList(class FName SceneWordID, int32 targetBarrelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleAnswerWordBase", "LoadAnswerList");

	Params::RCNzPazzleAnswerWordBase_LoadAnswerList Parms{};

	Parms.SceneWordID = SceneWordID;
	Parms.targetBarrelIndex = targetBarrelIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.AddRotateCameraParent
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         addRot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::AddRotateCameraParent(const struct FRotator& addRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "AddRotateCameraParent");

	Params::RCNzPazzleBarrelBase_AddRotateCameraParent Parms{};

	Parms.addRot = std::move(addRot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.AddZoomCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AddForward                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::AddZoomCamera(float AddForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "AddZoomCamera");

	Params::RCNzPazzleBarrelBase_AddZoomCamera Parms{};

	Parms.AddForward = AddForward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.ChangeRotate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isRot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::ChangeRotate(bool isRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "ChangeRotate");

	Params::RCNzPazzleBarrelBase_ChangeRotate Parms{};

	Parms.isRot = isRot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.GetAnswerWordActorList
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ARCNzPazzleAnswerWordBase*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ARCNzPazzleAnswerWordBase*> ARCNzPazzleBarrelBase::GetAnswerWordActorList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "GetAnswerWordActorList");

	Params::RCNzPazzleBarrelBase_GetAnswerWordActorList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleBarrelBase.GetRotateSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNzPazzleBarrelBase::GetRotateSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "GetRotateSpeed");

	Params::RCNzPazzleBarrelBase_GetRotateSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleBarrelBase.GetRotateSpeedScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNzPazzleBarrelBase::GetRotateSpeedScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "GetRotateSpeedScale");

	Params::RCNzPazzleBarrelBase_GetRotateSpeedScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleBarrelBase.InitializeAnswerWord
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     UpperTextList                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           UpperTextPosList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FText>                     LowerTextList                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           LowerTextPosList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UTexture2D*>               UpperTextTextureList                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UTexture2D*>               LowerTextTextureList                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             SceneID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::InitializeAnswerWord(const TArray<class FText>& UpperTextList, const TArray<int32>& UpperTextPosList, const TArray<class FText>& LowerTextList, const TArray<int32>& LowerTextPosList, const TArray<class UTexture2D*>& UpperTextTextureList, const TArray<class UTexture2D*>& LowerTextTextureList, class FName SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "InitializeAnswerWord");

	Params::RCNzPazzleBarrelBase_InitializeAnswerWord Parms{};

	Parms.UpperTextList = std::move(UpperTextList);
	Parms.UpperTextPosList = std::move(UpperTextPosList);
	Parms.LowerTextList = std::move(LowerTextList);
	Parms.LowerTextPosList = std::move(LowerTextPosList);
	Parms.UpperTextTextureList = std::move(UpperTextTextureList);
	Parms.LowerTextTextureList = std::move(LowerTextTextureList);
	Parms.SceneID = SceneID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzPazzleBarrelBase.InitializeKaikagiActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   KaikagiNameList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   KaikagiTextList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Length                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::InitializeKaikagiActor(const TArray<class FString>& KaikagiNameList, const TArray<class FString>& KaikagiTextList, const int32& Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "InitializeKaikagiActor");

	Params::RCNzPazzleBarrelBase_InitializeKaikagiActor Parms{};

	Parms.KaikagiNameList = std::move(KaikagiNameList);
	Parms.KaikagiTextList = std::move(KaikagiTextList);
	Parms.Length = Length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.PlayVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCCharacterRender*               InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::PlayVoice(class ARCCharacterRender* InChara, class FName VoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "PlayVoice");

	Params::RCNzPazzleBarrelBase_PlayVoice Parms{};

	Parms.InChara = InChara;
	Parms.VoiceID = VoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.SetKaikagiListLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Length                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::SetKaikagiListLocation(const int32& Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "SetKaikagiListLocation");

	Params::RCNzPazzleBarrelBase_SetKaikagiListLocation Parms{};

	Parms.Length = Length;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzPazzleBarrelBase.SetRotateCameraParent
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         NewRot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::SetRotateCameraParent(const struct FRotator& NewRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "SetRotateCameraParent");

	Params::RCNzPazzleBarrelBase_SetRotateCameraParent Parms{};

	Parms.NewRot = std::move(NewRot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.SetRotateCameraParentForPointer
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        pointerPos                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::SetRotateCameraParentForPointer(const struct FVector2D& pointerPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "SetRotateCameraParentForPointer");

	Params::RCNzPazzleBarrelBase_SetRotateCameraParentForPointer Parms{};

	Parms.pointerPos = std::move(pointerPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.SetRotateSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::SetRotateSpeed(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "SetRotateSpeed");

	Params::RCNzPazzleBarrelBase_SetRotateSpeed Parms{};

	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.SetRotateSpeedScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleBarrelBase::SetRotateSpeedScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "SetRotateSpeedScale");

	Params::RCNzPazzleBarrelBase_SetRotateSpeedScale Parms{};

	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleBarrelBase.StartNoMoveWaitTimer
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzPazzleBarrelBase::StartNoMoveWaitTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "StartNoMoveWaitTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzPazzleBarrelBase.SwitchIsRotate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzPazzleBarrelBase::SwitchIsRotate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleBarrelBase", "SwitchIsRotate");

	Params::RCNzPazzleBarrelBase_SwitchIsRotate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamChapterNameData.Import
// (Native, Public, BlueprintCallable)

void URCParamChapterNameData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamChapterNameData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleKaikagiActorBase.GetCapText
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzPazzleKaikagiActorBase::GetCapText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "GetCapText");

	Params::RCNzPazzleKaikagiActorBase_GetCapText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleKaikagiActorBase.GetKaikagiTextData
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FString                           nameText                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           capText                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleKaikagiActorBase::GetKaikagiTextData(class FString* nameText, class FString* capText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "GetKaikagiTextData");

	Params::RCNzPazzleKaikagiActorBase_GetKaikagiTextData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (nameText != nullptr)
		*nameText = std::move(Parms.nameText);

	if (capText != nullptr)
		*capText = std::move(Parms.capText);
}


// Function RC.RCNzPazzleKaikagiActorBase.GetNameText
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ARCNzPazzleKaikagiActorBase::GetNameText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "GetNameText");

	Params::RCNzPazzleKaikagiActorBase_GetNameText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleKaikagiActorBase.HoldMove
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          nextLocation                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleKaikagiActorBase::HoldMove(const struct FVector& nextLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "HoldMove");

	Params::RCNzPazzleKaikagiActorBase_HoldMove Parms{};

	Parms.nextLocation = std::move(nextLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleKaikagiActorBase.Initialize
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           kaikagiName_0                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           kaikagiCapText_0                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleKaikagiActorBase::Initialize(const class FString& kaikagiName_0, const class FString& kaikagiCapText_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "Initialize");

	Params::RCNzPazzleKaikagiActorBase_Initialize Parms{};

	Parms.kaikagiName_0 = std::move(kaikagiName_0);
	Parms.kaikagiCapText_0 = std::move(kaikagiCapText_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleKaikagiActorBase.KaikagiHold
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzPazzleKaikagiActorBase::KaikagiHold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "KaikagiHold");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzPazzleKaikagiActorBase.KaikagiRelease
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzPazzleKaikagiActorBase::KaikagiRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "KaikagiRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzPazzleKaikagiActorBase.SetKaikagiTextSize
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Size                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleKaikagiActorBase::SetKaikagiTextSize(const int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "SetKaikagiTextSize");

	Params::RCNzPazzleKaikagiActorBase_SetKaikagiTextSize Parms{};

	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzPazzleKaikagiActorBase.SetStartTransform
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           ParentActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleKaikagiActorBase::SetStartTransform(const struct FTransform& Transform, class AActor* ParentActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleKaikagiActorBase", "SetStartTransform");

	Params::RCNzPazzleKaikagiActorBase_SetStartTransform Parms{};

	Parms.Transform = std::move(Transform);
	Parms.ParentActor = ParentActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzPazzleManagerBase.GetKaikagiData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   listLength                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   kaikagiNameTextList                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   KaikagiTextList                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCNzPazzleManagerBase::GetKaikagiData(int32* listLength, TArray<class FString>* kaikagiNameTextList, TArray<class FString>* KaikagiTextList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "GetKaikagiData");

	Params::RCNzPazzleManagerBase_GetKaikagiData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (listLength != nullptr)
		*listLength = Parms.listLength;

	if (kaikagiNameTextList != nullptr)
		*kaikagiNameTextList = std::move(Parms.kaikagiNameTextList);

	if (KaikagiTextList != nullptr)
		*KaikagiTextList = std::move(Parms.KaikagiTextList);
}


// Function RC.RCNzPazzleManagerBase.GetKaikagiNameText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InKaiKagiID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           kaikagiNameText                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPazzleManagerBase::GetKaikagiNameText(class FName InKaiKagiID, class FString* kaikagiNameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "GetKaikagiNameText");

	Params::RCNzPazzleManagerBase_GetKaikagiNameText Parms{};

	Parms.InKaiKagiID = InKaiKagiID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (kaikagiNameText != nullptr)
		*kaikagiNameText = std::move(Parms.kaikagiNameText);
}


// Function RC.RCNzPazzleManagerBase.GetSceneIDFName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCNzPazzleManagerBase::GetSceneIDFName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "GetSceneIDFName");

	Params::RCNzPazzleManagerBase_GetSceneIDFName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleManagerBase.IncrementResultData_Answer
// (Final, Native, Public, BlueprintCallable)

void ARCNzPazzleManagerBase::IncrementResultData_Answer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "IncrementResultData_Answer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleManagerBase.IncrementResultData_Kaikagi
// (Final, Native, Public, BlueprintCallable)

void ARCNzPazzleManagerBase::IncrementResultData_Kaikagi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "IncrementResultData_Kaikagi");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleManagerBase.InitFocusIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzPazzleManagerBase::InitFocusIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "InitFocusIndex");

	Params::RCNzPazzleManagerBase_InitFocusIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleManagerBase.InitializeBarrelWord
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzPazzleManagerBase::InitializeBarrelWord()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "InitializeBarrelWord");

	Params::RCNzPazzleManagerBase_InitializeBarrelWord Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleManagerBase.LoadDataTable
// (Final, Native, Public, BlueprintCallable)

void ARCNzPazzleManagerBase::LoadDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "LoadDataTable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleManagerBase.NextFocusIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAnimation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCNzPazzleManagerBase::NextFocusIndex(bool bAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "NextFocusIndex");

	Params::RCNzPazzleManagerBase_NextFocusIndex Parms{};

	Parms.bAnimation = bAnimation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzPazzleManagerBase.SendResultData
// (Final, Native, Public, BlueprintCallable)

void ARCNzPazzleManagerBase::SendResultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "SendResultData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleManagerBase.SkillInfo_Start
// (Final, Native, Public, BlueprintCallable)

void ARCNzPazzleManagerBase::SkillInfo_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "SkillInfo_Start");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPazzleManagerBase.StartPuzzleClear
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARCNzPazzleManagerBase::StartPuzzleClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPazzleManagerBase", "StartPuzzleClear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCParamCharacterLookSettingData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterLookSettingData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterLookSettingData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzle3DText.CheckTextID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             resultText                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCNzPuzzle3DText::CheckTextID(class FName ID, class FText* resultText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzle3DText", "CheckTextID");

	Params::RCNzPuzzle3DText_CheckTextID Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (resultText != nullptr)
		*resultText = std::move(Parms.resultText);

	return Parms.ReturnValue;
}


// Function RC.RCParamEnviromentSoundData.Import
// (Native, Public, BlueprintCallable)

void URCParamEnviromentSoundData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEnviromentSoundData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleAnswerLayoutBase.ClearWordList
// (Final, Native, Public)

void URCNzPuzzleAnswerLayoutBase::ClearWordList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleAnswerLayoutBase", "ClearWordList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleAnswerLayoutBase.InitializePuzzleAnswerLayout
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleAnswerLayoutBase::InitializePuzzleAnswerLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleAnswerLayoutBase", "InitializePuzzleAnswerLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleAnswerLayoutBase.SetAnswer
// (Final, Native, Public)
// Parameters:
// int32                                   wordPos                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             wordText                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       wordTexture                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleAnswerLayoutBase::SetAnswer(int32 wordPos, class FName wordText, class UTexture2D* wordTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleAnswerLayoutBase", "SetAnswer");

	Params::RCNzPuzzleAnswerLayoutBase_SetAnswer Parms{};

	Parms.wordPos = wordPos;
	Parms.wordText = wordText;
	Parms.wordTexture = wordTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleAnswerLayoutBase.SetWordList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleAnswerLayoutBase::SetWordList(int32 Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleAnswerLayoutBase", "SetWordList");

	Params::RCNzPuzzleAnswerLayoutBase_SetWordList Parms{};

	Parms.Length = Length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleCameraActor.CalcKaikagiSpawnLocationList
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  locList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  dirList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  HintDirList                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ARCNzPuzzleCameraActor::CalcKaikagiSpawnLocationList(const TArray<struct FVector>& locList, const TArray<struct FVector>& dirList, const TArray<struct FVector>& HintDirList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleCameraActor", "CalcKaikagiSpawnLocationList");

	Params::RCNzPuzzleCameraActor_CalcKaikagiSpawnLocationList Parms{};

	Parms.locList = std::move(locList);
	Parms.dirList = std::move(dirList);
	Parms.HintDirList = std::move(HintDirList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzPuzzleCameraActor.GetKaikagiDistance
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCNzPuzzleCameraActor::GetKaikagiDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleCameraActor", "GetKaikagiDistance");

	Params::RCNzPuzzleCameraActor_GetKaikagiDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleCameraActor.InitializeKaikagiActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   KaikagiNameList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   KaikagiTextList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Length                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WordSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPuzzleCameraActor::InitializeKaikagiActor(const TArray<class FString>& KaikagiNameList, const TArray<class FString>& KaikagiTextList, const int32& Length, const int32 WordSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleCameraActor", "InitializeKaikagiActor");

	Params::RCNzPuzzleCameraActor_InitializeKaikagiActor Parms{};

	Parms.KaikagiNameList = std::move(KaikagiNameList);
	Parms.KaikagiTextList = std::move(KaikagiTextList);
	Parms.Length = Length;
	Parms.WordSize = WordSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleCameraActor.SetKaikagiListLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Length                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPuzzleCameraActor::SetKaikagiListLocation(const int32& Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleCameraActor", "SetKaikagiListLocation");

	Params::RCNzPuzzleCameraActor_SetKaikagiListLocation Parms{};

	Parms.Length = Length;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzPuzzleCameraActor.SetZoomLength
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCNzPuzzleCameraActor::SetZoomLength(float Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleCameraActor", "SetZoomLength");

	Params::RCNzPuzzleCameraActor_SetZoomLength Parms{};

	Parms.Length = Length;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCParamCharacterSelectPageSettingData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterSelectPageSettingData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterSelectPageSettingData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleHintBalloonBase.CheckCursorHover
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        cursorPos                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzPuzzleHintBalloonBase::CheckCursorHover(const struct FVector2D& cursorPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonBase", "CheckCursorHover");

	Params::RCNzPuzzleHintBalloonBase_CheckCursorHover Parms{};

	Parms.cursorPos = std::move(cursorPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleHintBalloonBase.InitializePuzzleHintBalloon
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleHintBalloonBase::InitializePuzzleHintBalloon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonBase", "InitializePuzzleHintBalloon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleHintBalloonBase.PlayHint
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleHintBalloonBase::PlayHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonBase", "PlayHint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleHintBalloonBase.SetWidgetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        NewPosition                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleHintBalloonBase::SetWidgetPosition(const struct FVector2D& NewPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonBase", "SetWidgetPosition");

	Params::RCNzPuzzleHintBalloonBase_SetWidgetPosition Parms{};

	Parms.NewPosition = std::move(NewPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleHintBalloonBase.ShowHint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)
// class FName                             VoiceID_0                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleHintBalloonBase::ShowHint(const class FText& Text, const class FName VoiceID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonBase", "ShowHint");

	Params::RCNzPuzzleHintBalloonBase_ShowHint Parms{};

	Parms.Text = std::move(Text);
	Parms.VoiceID_0 = VoiceID_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleHintBalloonBase.ShowHintAfterEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzPuzzleHintBalloonBase::ShowHintAfterEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonBase", "ShowHintAfterEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzPuzzleHintBalloonTextBase.GetHintText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText URCNzPuzzleHintBalloonTextBase::GetHintText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonTextBase", "GetHintText");

	Params::RCNzPuzzleHintBalloonTextBase_GetHintText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleHintBalloonTextBase.InitializePuzzleHintBalloonText
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleHintBalloonTextBase::InitializePuzzleHintBalloonText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonTextBase", "InitializePuzzleHintBalloonText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleHintBalloonTextBase.SetHintText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)

void URCNzPuzzleHintBalloonTextBase::SetHintText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleHintBalloonTextBase", "SetHintText");

	Params::RCNzPuzzleHintBalloonTextBase_SetHintText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterFacialTempleteData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterFacialTempleteData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterFacialTempleteData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.CalcIsHoverCursor
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FMargin                          Offsets                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        halfViewportSize                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        cursorPos                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isLeft                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzPuzzleMainLayoutBase::CalcIsHoverCursor(const struct FMargin& Offsets, const struct FVector2D& Size, const struct FVector2D& halfViewportSize, const struct FVector2D& cursorPos, bool isLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "CalcIsHoverCursor");

	Params::RCNzPuzzleMainLayoutBase_CalcIsHoverCursor Parms{};

	Parms.Offsets = std::move(Offsets);
	Parms.Size = std::move(Size);
	Parms.halfViewportSize = std::move(halfViewportSize);
	Parms.cursorPos = std::move(cursorPos);
	Parms.isLeft = isLeft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleMainLayoutBase.CheckIsHoverCursorToHintBalloon
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleMainLayoutBase::CheckIsHoverCursorToHintBalloon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "CheckIsHoverCursorToHintBalloon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.CheckPointerHoverType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPuzzlePointerHoverType                 Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzPuzzleMainLayoutBase::CheckPointerHoverType(EPuzzlePointerHoverType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "CheckPointerHoverType");

	Params::RCNzPuzzleMainLayoutBase_CheckPointerHoverType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleMainLayoutBase.GetHintBalloonBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URCNzPuzzleHintBalloonBase*       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isLeft                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector2D> URCNzPuzzleMainLayoutBase::GetHintBalloonBox(class URCNzPuzzleHintBalloonBase* Widget, bool isLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "GetHintBalloonBox");

	Params::RCNzPuzzleMainLayoutBase_GetHintBalloonBox Parms{};

	Parms.Widget = Widget;
	Parms.isLeft = isLeft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleMainLayoutBase.GetPointerLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::GetPointerLocation(struct FVector* Location, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "GetPointerLocation");

	Params::RCNzPuzzleMainLayoutBase_GetPointerLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function RC.RCNzPuzzleMainLayoutBase.GetPointerMoveDistance
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector URCNzPuzzleMainLayoutBase::GetPointerMoveDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "GetPointerMoveDistance");

	Params::RCNzPuzzleMainLayoutBase_GetPointerMoveDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleMainLayoutBase.GetPointerScreenPosition
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   PositionX                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PositionY                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::GetPointerScreenPosition(float* PositionX, float* PositionY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "GetPointerScreenPosition");

	Params::RCNzPuzzleMainLayoutBase_GetPointerScreenPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PositionX != nullptr)
		*PositionX = Parms.PositionX;

	if (PositionY != nullptr)
		*PositionY = Parms.PositionY;
}


// Function RC.RCNzPuzzleMainLayoutBase.GetPointerScreenPositionAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   PositionX                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PositionY                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::GetPointerScreenPositionAlpha(float* PositionX, float* PositionY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "GetPointerScreenPositionAlpha");

	Params::RCNzPuzzleMainLayoutBase_GetPointerScreenPositionAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PositionX != nullptr)
		*PositionX = Parms.PositionX;

	if (PositionY != nullptr)
		*PositionY = Parms.PositionY;
}


// Function RC.RCNzPuzzleMainLayoutBase.GetWidget3DLocAndDir
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::GetWidget3DLocAndDir(const class UWidget* Widget, struct FVector* Location, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "GetWidget3DLocAndDir");

	Params::RCNzPuzzleMainLayoutBase_GetWidget3DLocAndDir Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function RC.RCNzPuzzleMainLayoutBase.HideButtonGuide
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleMainLayoutBase::HideButtonGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "HideButtonGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.InitializePuzzleMainLayout
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleMainLayoutBase::InitializePuzzleMainLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "InitializePuzzleMainLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.PlayHint
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleMainLayoutBase::PlayHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "PlayHint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.PointerMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Aspect                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzPuzzleMainLayoutBase::PointerMove(float DeltaTime, float Aspect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "PointerMove");

	Params::RCNzPuzzleMainLayoutBase_PointerMove Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.Aspect = Aspect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzleMainLayoutBase.SetAnswer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   wordPos                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             wordText                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       wordTexture                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::SetAnswer(int32 wordPos, class FName wordText, class UTexture2D* wordTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "SetAnswer");

	Params::RCNzPuzzleMainLayoutBase_SetAnswer Parms{};

	Parms.wordPos = wordPos;
	Parms.wordText = wordText;
	Parms.wordTexture = wordTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.SetHoverPointer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPuzzlePointerHoverType                 Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::SetHoverPointer(EPuzzlePointerHoverType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "SetHoverPointer");

	Params::RCNzPuzzleMainLayoutBase_SetHoverPointer Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.SetQuestion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             wordText                                               (ConstParm, Parm, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::SetQuestion(const class FText& wordText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "SetQuestion");

	Params::RCNzPuzzleMainLayoutBase_SetQuestion Parms{};

	Parms.wordText = std::move(wordText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.SetTimeLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::SetTimeLimit(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "SetTimeLimit");

	Params::RCNzPuzzleMainLayoutBase_SetTimeLimit Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.SetWordListNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::SetWordListNum(int32 Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "SetWordListNum");

	Params::RCNzPuzzleMainLayoutBase_SetWordListNum Parms{};

	Parms.Length = Length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.ShowButtonGuide
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleMainLayoutBase::ShowButtonGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "ShowButtonGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.ShowHint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   KaikagiNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             HintText                                               (ConstParm, Parm, NativeAccessSpecifierPublic)
// class FName                             hintVoiceID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::ShowHint(const int32 KaikagiNum, const class FText& HintText, const class FName hintVoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "ShowHint");

	Params::RCNzPuzzleMainLayoutBase_ShowHint Parms{};

	Parms.KaikagiNum = KaikagiNum;
	Parms.HintText = std::move(HintText);
	Parms.hintVoiceID = hintVoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.StartAlert
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleMainLayoutBase::StartAlert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "StartAlert");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.StartUI
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleMainLayoutBase::StartUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "StartUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.SynchronizeToInputPlatform
// (Final, Native, Public)
// Parameters:
// ERCInputPlatform                        InputPlatform                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzleMainLayoutBase::SynchronizeToInputPlatform(ERCInputPlatform InputPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "SynchronizeToInputPlatform");

	Params::RCNzPuzzleMainLayoutBase_SynchronizeToInputPlatform Parms{};

	Parms.InputPlatform = InputPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleMainLayoutBase.WaitingOpen
// (Final, Native, Public)

void URCNzPuzzleMainLayoutBase::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleMainLayoutBase", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzlePointerBase.CheckHoverType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPuzzlePointerHoverType                 Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzPuzzlePointerBase::CheckHoverType(EPuzzlePointerHoverType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzlePointerBase", "CheckHoverType");

	Params::RCNzPuzzlePointerBase_CheckHoverType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzPuzzlePointerBase.InitializePuzzlePointer
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzlePointerBase::InitializePuzzlePointer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzlePointerBase", "InitializePuzzlePointer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzlePointerBase.SetHover
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPuzzlePointerHoverType                 Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzPuzzlePointerBase::SetHover(EPuzzlePointerHoverType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzlePointerBase", "SetHover");

	Params::RCNzPuzzlePointerBase_SetHover Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleTimelimitAlertBase.AN_StartFinished
// (Final, Native, Public)

void URCNzPuzzleTimelimitAlertBase::AN_StartFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleTimelimitAlertBase", "AN_StartFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleTimelimitAlertBase.InitializePuzzleTimelimitAleart
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleTimelimitAlertBase::InitializePuzzleTimelimitAleart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleTimelimitAlertBase", "InitializePuzzleTimelimitAleart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzPuzzleTimelimitAlertBase.StartAlert
// (Final, Native, Public, BlueprintCallable)

void URCNzPuzzleTimelimitAlertBase::StartAlert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzPuzzleTimelimitAlertBase", "StartAlert");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamEventMapConnectInfoData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventMapConnectInfoData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventMapConnectInfoData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControllerBFL.SetVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVehicleControllerBFL::SetVisible(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVehicleControllerBFL", "SetVisible");

	Params::RCVehicleControllerBFL_SetVisible Parms{};

	Parms.IsVisible = IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleAssist.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleAssist::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleAssist", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleAssist.GetBattleCutinStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleAssistStatus               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleAssistStatus URCNzUiBattleAssist::GetBattleCutinStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleAssist", "GetBattleCutinStatus");

	Params::RCNzUiBattleAssist_GetBattleCutinStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleAssist.InitializeBattleAssist
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  InFaceImagePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleAssist::InitializeBattleAssist(const struct FSoftObjectPath& InFaceImagePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleAssist", "InitializeBattleAssist");

	Params::RCNzUiBattleAssist_InitializeBattleAssist Parms{};

	Parms.InFaceImagePath = std::move(InFaceImagePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleAssist.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleAssist::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleAssist", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleAssist.SetAssistGauge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAssistGauge                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAssistGaugeMax                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleAssist::SetAssistGauge(float InAssistGauge, float InAssistGaugeMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleAssist", "SetAssistGauge");

	Params::RCNzUiBattleAssist_SetAssistGauge Parms{};

	Parms.InAssistGauge = InAssistGauge;
	Parms.InAssistGaugeMax = InAssistGaugeMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleAssist.UninitializeBattleAssist
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleAssist::UninitializeBattleAssist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleAssist", "UninitializeBattleAssist");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleDodge.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleDodge::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleDodge", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleDodge.GetBattleDodgeStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleDodgeStatus                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleDodgeStatus URCNzUiBattleDodge::GetBattleDodgeStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleDodge", "GetBattleDodgeStatus");

	Params::RCNzUiBattleDodge_GetBattleDodgeStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleDodge.InitializeBattleDodge
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleDodge::InitializeBattleDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleDodge", "InitializeBattleDodge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleDodge.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleDodge::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleDodge", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamEventListData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOver.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOver::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOver.Decide
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOver::Decide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "Decide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOver.GetBattleGameOverStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleGameOverStatus             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleGameOverStatus URCNzUiBattleGameOver::GetBattleGameOverStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "GetBattleGameOverStatus");

	Params::RCNzUiBattleGameOver_GetBattleGameOverStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleGameOver.GetSelectIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiBattleGameOver::GetSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "GetSelectIndex");

	Params::RCNzUiBattleGameOver_GetSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleGameOver.InitializeBattleGameOver
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOver::InitializeBattleGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "InitializeBattleGameOver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOver.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOver::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOver.Select
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSelectIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleGameOver::Select(int32 InSelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "Select");

	Params::RCNzUiBattleGameOver_Select Parms{};

	Parms.InSelectIndex = InSelectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleGameOver.SelectStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSelectIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleGameOver::SelectStart(int32 InSelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "SelectStart");

	Params::RCNzUiBattleGameOver_SelectStart Parms{};

	Parms.InSelectIndex = InSelectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleGameOver.UpAndDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCNzUiBattleGameOver::UpAndDown(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOver", "UpAndDown");

	Params::RCNzUiBattleGameOver_UpAndDown Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiOptionKeyList.OnInitializeButtonClick
// (Final, Native, Public)

void URCUiOptionKeyList::OnInitializeButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionKeyList", "OnInitializeButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionKeyList.OnPagerSetClickEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   ind                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiOptionKeyList::OnPagerSetClickEvent(int32 ind, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionKeyList", "OnPagerSetClickEvent");

	Params::RCUiOptionKeyList_OnPagerSetClickEvent Parms{};

	Parms.ind = ind;
	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleGameOverSelectBar.Cancel
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOverSelectBar::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOverSelectBar", "Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOverSelectBar.Decide
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOverSelectBar::Decide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOverSelectBar", "Decide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOverSelectBar.InitializeBattleKaiKagiSelectBar
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOverSelectBar::InitializeBattleKaiKagiSelectBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOverSelectBar", "InitializeBattleKaiKagiSelectBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOverSelectBar.Select
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOverSelectBar::Select()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOverSelectBar", "Select");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOverSelectBar.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleGameOverSelectBar::SetText(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOverSelectBar", "SetText");

	Params::RCNzUiBattleGameOverSelectBar_SetText Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOverSelectBar.SetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleGameOverSelectBar::SetVisible(bool bInVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOverSelectBar", "SetVisible");

	Params::RCNzUiBattleGameOverSelectBar_SetVisible Parms{};

	Parms.bInVisibility = bInVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleGameOverSelectBar.Unselect
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleGameOverSelectBar::Unselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleGameOverSelectBar", "Unselect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamFinaleTest.Import
// (Native, Public, BlueprintCallable)

void URCParamFinaleTest::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamFinaleTest", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHint.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHint::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHint", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHint.GetBattleHintStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERCNzUiBattleHintStatus                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleHintStatus URCNzUiBattleHint::GetBattleHintStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHint", "GetBattleHintStatus");

	Params::RCNzUiBattleHint_GetBattleHintStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleHint.InitializeBattleHint
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHint::InitializeBattleHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHint", "InitializeBattleHint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHint.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHint::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHint", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHint.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHint::SetText(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHint", "SetText");

	Params::RCNzUiBattleHint_SetText Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPBar.DamageAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPBar::DamageAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPBar", "DamageAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPBar.GetBattleHPBarStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleHPBarStatus                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleHPBarStatus URCNzUiBattleHPBar::GetBattleHPBarStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPBar", "GetBattleHPBarStatus");

	Params::RCNzUiBattleHPBar_GetBattleHPBarStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleHPBar.InitializeBattleHPBar
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPBar::InitializeBattleHPBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPBar", "InitializeBattleHPBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPBar.RecoverAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPBar::RecoverAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPBar", "RecoverAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPBar.ResetHP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPBar::ResetHP(int32 InHP, int32 InMaxHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPBar", "ResetHP");

	Params::RCNzUiBattleHPBar_ResetHP Parms{};

	Parms.InHP = InHP;
	Parms.InMaxHP = InMaxHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPBar.SetDelayHP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDelayHP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPBar::SetDelayHP(int32 InDelayHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPBar", "SetDelayHP");

	Params::RCNzUiBattleHPBar_SetDelayHP Parms{};

	Parms.InDelayHP = InDelayHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPBar.SetHP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInApplyDelayHP                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPBar::SetHP(int32 InHP, int32 InMaxHP, bool bInApplyDelayHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPBar", "SetHP");

	Params::RCNzUiBattleHPBar_SetHP Parms{};

	Parms.InHP = InHP;
	Parms.InMaxHP = InMaxHP;
	Parms.bInApplyDelayHP = bInApplyDelayHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamInputKeyData.Import
// (Native, Public, BlueprintCallable)

void URCParamInputKeyData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamInputKeyData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.ApplyHP
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInReset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPGauge::ApplyHP(bool bInReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "ApplyHP");

	Params::RCNzUiBattleHPGauge_ApplyHP Parms{};

	Parms.bInReset = bInReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.AutoDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InNewHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleHPGauge::AutoDamage(int32 InNewHP, int32 InHP, int32 InMaxHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "AutoDamage");

	Params::RCNzUiBattleHPGauge_AutoDamage Parms{};

	Parms.InNewHP = InNewHP;
	Parms.InHP = InHP;
	Parms.InMaxHP = InMaxHP;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleHPGauge.AutoDamage2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleHPGauge::AutoDamage2(int32 InDamage, int32 InHP, int32 InMaxHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "AutoDamage2");

	Params::RCNzUiBattleHPGauge_AutoDamage2 Parms{};

	Parms.InDamage = InDamage;
	Parms.InHP = InHP;
	Parms.InMaxHP = InMaxHP;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleHPGauge.AutoRecover
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InNewHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleHPGauge::AutoRecover(int32 InNewHP, int32 InHP, int32 InMaxHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "AutoRecover");

	Params::RCNzUiBattleHPGauge_AutoRecover Parms{};

	Parms.InNewHP = InNewHP;
	Parms.InHP = InHP;
	Parms.InMaxHP = InMaxHP;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleHPGauge.AutoRecover2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRecover                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleHPGauge::AutoRecover2(int32 InRecover, int32 InHP, int32 InMaxHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "AutoRecover2");

	Params::RCNzUiBattleHPGauge_AutoRecover2 Parms{};

	Parms.InRecover = InRecover;
	Parms.InHP = InHP;
	Parms.InMaxHP = InMaxHP;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleHPGauge.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPGauge::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.Damage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPGauge::Damage(int32 InHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "Damage");

	Params::RCNzUiBattleHPGauge_Damage Parms{};

	Parms.InHP = InHP;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.Damage2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPGauge::Damage2(int32 InDamage, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "Damage2");

	Params::RCNzUiBattleHPGauge_Damage2 Parms{};

	Parms.InDamage = InDamage;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.GetBattleHPGaugeStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleHPGaugeStatus              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleHPGaugeStatus URCNzUiBattleHPGauge::GetBattleHPGaugeStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "GetBattleHPGaugeStatus");

	Params::RCNzUiBattleHPGauge_GetBattleHPGaugeStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleHPGauge.InitializeBattleHPGauge
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPGauge::InitializeBattleHPGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "InitializeBattleHPGauge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPGauge::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.Recover
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPGauge::Recover(int32 InHP, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "Recover");

	Params::RCNzUiBattleHPGauge_Recover Parms{};

	Parms.InHP = InHP;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.Recover2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRecover                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSilence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPGauge::Recover2(int32 InRecover, bool bInSilence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "Recover2");

	Params::RCNzUiBattleHPGauge_Recover2 Parms{};

	Parms.InRecover = InRecover;
	Parms.bInSilence = bInSilence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.SetHP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPGauge::SetHP(int32 InHP, int32 InMaxHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "SetHP");

	Params::RCNzUiBattleHPGauge_SetHP Parms{};

	Parms.InHP = InHP;
	Parms.InMaxHP = InMaxHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPGauge.UninitializeBattleHPGauge
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPGauge::UninitializeBattleHPGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPGauge", "UninitializeBattleHPGauge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionPager.OnButtonGuideClickEvent
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionPager::OnButtonGuideClickEvent(ERCInputKeyType Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionPager", "OnButtonGuideClickEvent");

	Params::RCUiOptionPager_OnButtonGuideClickEvent Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPValue.DamageAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPValue::DamageAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPValue", "DamageAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPValue.GetBattleHPValueStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleHPValueStatus              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleHPValueStatus URCNzUiBattleHPValue::GetBattleHPValueStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPValue", "GetBattleHPValueStatus");

	Params::RCNzUiBattleHPValue_GetBattleHPValueStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleHPValue.InitializeBattleHPValue
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPValue::InitializeBattleHPValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPValue", "InitializeBattleHPValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPValue.RecoverAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleHPValue::RecoverAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPValue", "RecoverAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleHPValue.SetHP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InHP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxHP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleHPValue::SetHP(int32 InHP, int32 InMaxHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleHPValue", "SetHP");

	Params::RCNzUiBattleHPValue_SetHP Parms{};

	Parms.InHP = InHP;
	Parms.InMaxHP = InMaxHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiButton.InitializeBattleKaiKagiButton
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiButton::InitializeBattleKaiKagiButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiButton", "InitializeBattleKaiKagiButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamFigureData.Import
// (Native, Public, BlueprintCallable)

void URCParamFigureData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamFigureData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiList.GetBattleKaiKagiListStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleKaiKagiListStatus          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleKaiKagiListStatus URCNzUiBattleKaiKagiList::GetBattleKaiKagiListStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiList", "GetBattleKaiKagiListStatus");

	Params::RCNzUiBattleKaiKagiList_GetBattleKaiKagiListStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiList.InitializeBattleKaiKagiList
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiList::InitializeBattleKaiKagiList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiList", "InitializeBattleKaiKagiList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiList.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InKaiKagiNameIDArray                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiList::Open(const TArray<class FName>& InKaiKagiNameIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiList", "Open");

	Params::RCNzUiBattleKaiKagiList_Open Parms{};

	Parms.InKaiKagiNameIDArray = std::move(InKaiKagiNameIDArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiList.UninitializeBattleKaiKagiList
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiList::UninitializeBattleKaiKagiList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiList", "UninitializeBattleKaiKagiList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamGlossaryListData.Import
// (Native, Public, BlueprintCallable)

void URCParamGlossaryListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamGlossaryListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiName.InitializeBattleKaiKagiName
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiName::InitializeBattleKaiKagiName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiName", "InitializeBattleKaiKagiName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiName.SetKaiKagiName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiName::SetKaiKagiName(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiName", "SetKaiKagiName");

	Params::RCNzUiBattleKaiKagiName_SetKaiKagiName Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelect.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelect::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelect.Decide
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelect::Decide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "Decide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelect.GetBattleKaiKagiSelectStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleKaiKagiSelectStatus        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleKaiKagiSelectStatus URCNzUiBattleKaiKagiSelect::GetBattleKaiKagiSelectStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "GetBattleKaiKagiSelectStatus");

	Params::RCNzUiBattleKaiKagiSelect_GetBattleKaiKagiSelectStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiSelect.GetSelectIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiBattleKaiKagiSelect::GetSelectIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "GetSelectIndex");

	Params::RCNzUiBattleKaiKagiSelect_GetSelectIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiSelect.InitializeBattleKaiKagiSelect
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelect::InitializeBattleKaiKagiSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "InitializeBattleKaiKagiSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelect.KaiKagiSelectStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InKaiKagiIDArray                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InSelectIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleKaiKagiSelect::KaiKagiSelectStart(const TArray<class FName>& InKaiKagiIDArray, int32 InSelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "KaiKagiSelectStart");

	Params::RCNzUiBattleKaiKagiSelect_KaiKagiSelectStart Parms{};

	Parms.InKaiKagiIDArray = std::move(InKaiKagiIDArray);
	Parms.InSelectIndex = InSelectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiSelect.KaiKagiSelectStart2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     InKaiKagiIDArray                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>                     InDeleteKaiKagiIDArray                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InSelectIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleKaiKagiSelect::KaiKagiSelectStart2(const TArray<class FName>& InKaiKagiIDArray, const TArray<class FName>& InDeleteKaiKagiIDArray, int32 InSelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "KaiKagiSelectStart2");

	Params::RCNzUiBattleKaiKagiSelect_KaiKagiSelectStart2 Parms{};

	Parms.InKaiKagiIDArray = std::move(InKaiKagiIDArray);
	Parms.InDeleteKaiKagiIDArray = std::move(InDeleteKaiKagiIDArray);
	Parms.InSelectIndex = InSelectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiSelect.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelect::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelect.SelectDeteil
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelect::SelectDeteil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "SelectDeteil");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelect.SelectKaiKagi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSelectIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleKaiKagiSelect::SelectKaiKagi(int32 InSelectIndex, bool bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "SelectKaiKagi");

	Params::RCNzUiBattleKaiKagiSelect_SelectKaiKagi Parms{};

	Parms.InSelectIndex = InSelectIndex;
	Parms.bStart = bStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiSelect.UninitializeBattleKaiKagiSelect
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelect::UninitializeBattleKaiKagiSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "UninitializeBattleKaiKagiSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelect.UpAndDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCNzUiBattleKaiKagiSelect::UpAndDown(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelect", "UpAndDown");

	Params::RCNzUiBattleKaiKagiSelect_UpAndDown Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamMenuAreaMapListData.Import
// (Native, Public, BlueprintCallable)

void URCParamMenuAreaMapListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamMenuAreaMapListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiShortLoadingIcon.EndLoad
// (Final, Native, Public, BlueprintCallable)

void URCUiShortLoadingIcon::EndLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiShortLoadingIcon", "EndLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiShortLoadingIcon.StartLoad
// (Final, Native, Public, BlueprintCallable)

void URCUiShortLoadingIcon::StartLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiShortLoadingIcon", "StartLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiShortLoadingIcon.IsLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiShortLoadingIcon::IsLoading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiShortLoadingIcon", "IsLoading");

	Params::RCUiShortLoadingIcon_IsLoading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar2.InitializeBattleKaiKagiSelectBar
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectBar2::InitializeBattleKaiKagiSelectBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar2", "InitializeBattleKaiKagiSelectBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar2.IsSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiBattleKaiKagiSelectBar2::IsSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar2", "IsSelect");

	Params::RCNzUiBattleKaiKagiSelectBar2_IsSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar2.Select
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInStart                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectBar2::Select(bool bInStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar2", "Select");

	Params::RCNzUiBattleKaiKagiSelectBar2_Select Parms{};

	Parms.bInStart = bInStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar2.SetKaiKagiName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectBar2::SetKaiKagiName(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar2", "SetKaiKagiName");

	Params::RCNzUiBattleKaiKagiSelectBar2_SetKaiKagiName Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar2.SetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectBar2::SetVisible(bool bInVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar2", "SetVisible");

	Params::RCNzUiBattleKaiKagiSelectBar2_SetVisible Parms{};

	Parms.bInVisibility = bInVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectBar2.Unselect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInStart                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectBar2::Unselect(bool bInStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectBar2", "Unselect");

	Params::RCNzUiBattleKaiKagiSelectBar2_Unselect Parms{};

	Parms.bInStart = bInStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDecide.InitializeBattleKaiKagiSelectDecide
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectDecide::InitializeBattleKaiKagiSelectDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDecide", "InitializeBattleKaiKagiSelectDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDecide.OnMouseClickEvent
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDecide::OnMouseClickEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDecide", "OnMouseClickEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDecide.OnMouseHoverdEvent
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDecide::OnMouseHoverdEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDecide", "OnMouseHoverdEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDecide.OnMouseUnhoverdEvent
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDecide::OnMouseUnhoverdEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDecide", "OnMouseUnhoverdEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDecide.SetInputFromButtonGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectDecide::SetInputFromButtonGuide(ERCInputKeyType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDecide", "SetInputFromButtonGuide");

	Params::RCNzUiBattleKaiKagiSelectDecide_SetInputFromButtonGuide Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDecide.SetMouseButtonDisable
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDecide::SetMouseButtonDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDecide", "SetMouseButtonDisable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDecide.SetMouseButtonEnable
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDecide::SetMouseButtonEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDecide", "SetMouseButtonEnable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDecide.UninitializeBattleKaiKagiSelectDecide
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectDecide::UninitializeBattleKaiKagiSelectDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDecide", "UninitializeBattleKaiKagiSelectDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamGalleryMovieListData.Import
// (Native, Public, BlueprintCallable)

void URCParamGalleryMovieListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamGalleryMovieListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.InitializeBattleKaiKagiSelectDetail
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectDetail::InitializeBattleKaiKagiSelectDetail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "InitializeBattleKaiKagiSelectDetail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.OnMouseClickEvent
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDetail::OnMouseClickEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "OnMouseClickEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.OnMouseHoverdEvent
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDetail::OnMouseHoverdEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "OnMouseHoverdEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.OnMouseUnhoverdEvent
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDetail::OnMouseUnhoverdEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "OnMouseUnhoverdEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.PlayAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleKaiKagiSelectPartsAnimType AnimType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectDetail::PlayAnim(ERCNzUiBattleKaiKagiSelectPartsAnimType AnimType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "PlayAnim");

	Params::RCNzUiBattleKaiKagiSelectDetail_PlayAnim Parms{};

	Parms.AnimType = AnimType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.SetDetailTextID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             DetailTextID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectDetail::SetDetailTextID(class FName DetailTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "SetDetailTextID");

	Params::RCNzUiBattleKaiKagiSelectDetail_SetDetailTextID Parms{};

	Parms.DetailTextID = DetailTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.SetImageTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ImageTexture                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectDetail::SetImageTexture(class UTexture2D* ImageTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "SetImageTexture");

	Params::RCNzUiBattleKaiKagiSelectDetail_SetImageTexture Parms{};

	Parms.ImageTexture = ImageTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.SetInputFromButtonGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleKaiKagiSelectDetail::SetInputFromButtonGuide(ERCInputKeyType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "SetInputFromButtonGuide");

	Params::RCNzUiBattleKaiKagiSelectDetail_SetInputFromButtonGuide Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.SetMouseButtonDisable
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDetail::SetMouseButtonDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "SetMouseButtonDisable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.SetMouseButtonEnable
// (Final, Native, Public)

void URCNzUiBattleKaiKagiSelectDetail::SetMouseButtonEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "SetMouseButtonEnable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectDetail.UninitializeBattleKaiKagiSelectDetail
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectDetail::UninitializeBattleKaiKagiSelectDetail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectDetail", "UninitializeBattleKaiKagiSelectDetail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectEquip.InitializeBattleKaiKagiSelectEquip
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectEquip::InitializeBattleKaiKagiSelectEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectEquip", "InitializeBattleKaiKagiSelectEquip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectEquip.Off
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectEquip::Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectEquip", "Off");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleKaiKagiSelectEquip.On
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleKaiKagiSelectEquip::On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleKaiKagiSelectEquip", "On");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzCriminalCameraSettingData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzCriminalCameraSettingData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzCriminalCameraSettingData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleStart.GetBattleStartStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleStartStatus                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleStartStatus URCNzUiBattleStart::GetBattleStartStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleStart", "GetBattleStartStatus");

	Params::RCNzUiBattleStart_GetBattleStartStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleStart.InitializeBattleStart
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleStart::InitializeBattleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleStart", "InitializeBattleStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleStart.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleStart::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleStart", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.BattleUiFinish
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleUi::BattleUiFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "BattleUiFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.BattleUiStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOpenKaiKagi                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAssistEnable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleUi::BattleUiStart(bool bOpenKaiKagi, bool bInAssistEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "BattleUiStart");

	Params::RCNzUiBattleUi_BattleUiStart Parms{};

	Parms.bOpenKaiKagi = bOpenKaiKagi;
	Parms.bInAssistEnable = bInAssistEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.ChangeKaiKagi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleUi::ChangeKaiKagi(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "ChangeKaiKagi");

	Params::RCNzUiBattleUi_ChangeKaiKagi Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleUi::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.GetBattleUiStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCNzUiBattleUiStatus                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCNzUiBattleUiStatus URCNzUiBattleUi::GetBattleUiStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "GetBattleUiStatus");

	Params::RCNzUiBattleUi_GetBattleUiStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiBattleUi.InitializeBattleUi
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCNzUiBattleUiAssetData         InAssetData                                            (Parm, OutParm, NativeAccessSpecifierPublic)

void URCNzUiBattleUi::InitializeBattleUi(struct FRCNzUiBattleUiAssetData* InAssetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "InitializeBattleUi");

	Params::RCNzUiBattleUi_InitializeBattleUi Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InAssetData != nullptr)
		*InAssetData = std::move(Parms.InAssetData);
}


// Function RC.RCNzUiBattleUi.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleUi::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.RebuttalFinish
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleUi::RebuttalFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "RebuttalFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.RebuttalStart
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleUi::RebuttalStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "RebuttalStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.SetAssistGauge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAssistGauge                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAssistGaugeMax                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleUi::SetAssistGauge(float InAssistGauge, float InAssistGaugeMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "SetAssistGauge");

	Params::RCNzUiBattleUi_SetAssistGauge Parms{};

	Parms.InAssistGauge = InAssistGauge;
	Parms.InAssistGaugeMax = InAssistGaugeMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.SetButtonGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFinalBattle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInRebuttalSlash                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDisturbSlashEnable                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleUi::SetButtonGuide(bool bInFinalBattle, bool bInRebuttalSlash, bool bInDisturbSlashEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "SetButtonGuide");

	Params::RCNzUiBattleUi_SetButtonGuide Parms{};

	Parms.bInFinalBattle = bInFinalBattle;
	Parms.bInRebuttalSlash = bInRebuttalSlash;
	Parms.bInDisturbSlashEnable = bInDisturbSlashEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.SetElapsedTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ElapsedTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleUi::SetElapsedTime(float ElapsedTime, float LimitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "SetElapsedTime");

	Params::RCNzUiBattleUi_SetElapsedTime Parms{};

	Parms.ElapsedTime = ElapsedTime;
	Parms.LimitTime = LimitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.SetKaiKagiName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleUi::SetKaiKagiName(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "SetKaiKagiName");

	Params::RCNzUiBattleUi_SetKaiKagiName Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.SetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiBattleUi::SetTime(float Time, float LimitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "SetTime");

	Params::RCNzUiBattleUi_SetTime Parms{};

	Parms.Time = Time;
	Parms.LimitTime = LimitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiBattleUi.UninitializeBattleUi
// (Final, Native, Public, BlueprintCallable)

void URCNzUiBattleUi::UninitializeBattleUi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiBattleUi", "UninitializeBattleUi");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiChousaStart.GetNzChousaStartPriority
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiChousaStart::GetNzChousaStartPriority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzUiChousaStart", "GetNzChousaStartPriority");

	Params::RCNzUiChousaStart_GetNzChousaStartPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiChousaStart.CloseChousaStart
// (Final, Native, Protected, BlueprintCallable)

void URCNzUiChousaStart::CloseChousaStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiChousaStart", "CloseChousaStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiChousaStart.IsFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiChousaStart::IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiChousaStart", "IsFinished");

	Params::RCNzUiChousaStart_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiChousaStart.OpenChousaStart
// (Final, Native, Public, BlueprintCallable)

void URCNzUiChousaStart::OpenChousaStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiChousaStart", "OpenChousaStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamMovieDataData.Import
// (Native, Public, BlueprintCallable)

void URCParamMovieDataData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamMovieDataData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzMTBChData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzMTBChData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzMTBChData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleCursorBtnGuideWidget.InitializeFinaleCursorBtnGuide
// (Final, Native, Public)

void URCNzUiFinaleCursorBtnGuideWidget::InitializeFinaleCursorBtnGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorBtnGuideWidget", "InitializeFinaleCursorBtnGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleCursorBtnGuideWidget.UpdateBtnGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GuideStr                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleCursorBtnGuideWidget::UpdateBtnGuide(ERCInputKeyType Key, const class FString& GuideStr, bool visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorBtnGuideWidget", "UpdateBtnGuide");

	Params::RCNzUiFinaleCursorBtnGuideWidget_UpdateBtnGuide Parms{};

	Parms.Key = Key;
	Parms.GuideStr = std::move(GuideStr);
	Parms.visible = visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleCursorWidget.CursorFinish
// (Final, Native, Public)

void URCNzUiFinaleCursorWidget::CursorFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorWidget", "CursorFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleCursorWidget.CursorStart
// (Final, Native, Public)

void URCNzUiFinaleCursorWidget::CursorStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorWidget", "CursorStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleCursorWidget.InitializeFinaleCursorWidget
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleCursorWidget::InitializeFinaleCursorWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorWidget", "InitializeFinaleCursorWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleCursorWidget.PlaySelectAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleCursorWidget::PlaySelectAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorWidget", "PlaySelectAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleCursorWidget.PlayUnSelectAnimation
// (Event, Public, BlueprintEvent)

void URCNzUiFinaleCursorWidget::PlayUnSelectAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorWidget", "PlayUnSelectAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleCursorWidget.UpdateCursorBtnGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GuideStr                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleCursorWidget::UpdateCursorBtnGuide(ERCInputKeyType Key, bool IsVisible_0, const class FString& GuideStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorWidget", "UpdateCursorBtnGuide");

	Params::RCNzUiFinaleCursorWidget_UpdateCursorBtnGuide Parms{};

	Parms.Key = Key;
	Parms.IsVisible_0 = IsVisible_0;
	Parms.GuideStr = std::move(GuideStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleCursorWidget.UpdateCursorVisibleState
// (Final, Native, Public)

void URCNzUiFinaleCursorWidget::UpdateCursorVisibleState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleCursorWidget", "UpdateCursorVisibleState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzFinaleData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzFinaleData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzFinaleData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageText.InitializeText
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleDetectiveImageText::InitializeText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageText", "InitializeText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveImageText.UpdateText
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveImageText::UpdateText(const class FString& str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveImageText", "UpdateText");

	Params::RCNzUiFinaleDetectiveImageText_UpdateText Parms{};

	Parms.str = std::move(str);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCParamMinimapListData.Import
// (Native, Public, BlueprintCallable)

void URCParamMinimapListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamMinimapListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.AddImage
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Img                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveSceneWidget::AddImage(const class UTexture2D* Img)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "AddImage");

	Params::RCNzUiFinaleDetectiveSceneWidget_AddImage Parms{};

	Parms.Img = Img;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.ClearAddImageList
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleDetectiveSceneWidget::ClearAddImageList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "ClearAddImageList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.GetBackgroundImgScale
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinaleDetectiveSceneWidget::GetBackgroundImgScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "GetBackgroundImgScale");

	Params::RCNzUiFinaleDetectiveSceneWidget_GetBackgroundImgScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.GetCurrentDetectiveSceneInteractPointPos
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URCNzUiFinaleInteractIconWidget*  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCNzUiFinaleInteractIconWidget* URCNzUiFinaleDetectiveSceneWidget::GetCurrentDetectiveSceneInteractPointPos(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "GetCurrentDetectiveSceneInteractPointPos");

	Params::RCNzUiFinaleDetectiveSceneWidget_GetCurrentDetectiveSceneInteractPointPos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.GetInteractIconList
// (Final, Native, Public)
// Parameters:
// TArray<class URCNzUiFinaleInteractIconWidget*>ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class URCNzUiFinaleInteractIconWidget*> URCNzUiFinaleDetectiveSceneWidget::GetInteractIconList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "GetInteractIconList");

	Params::RCNzUiFinaleDetectiveSceneWidget_GetInteractIconList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.GetInteractIconNum
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinaleDetectiveSceneWidget::GetInteractIconNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "GetInteractIconNum");

	Params::RCNzUiFinaleDetectiveSceneWidget_GetInteractIconNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.GetInteractIDList
// (Final, Native, Public)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> URCNzUiFinaleDetectiveSceneWidget::GetInteractIDList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "GetInteractIDList");

	Params::RCNzUiFinaleDetectiveSceneWidget_GetInteractIDList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.GetInteractPieceDataList
// (Final, Native, Public)
// Parameters:
// TArray<struct FRCNzFinaleGamePieceData> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRCNzFinaleGamePieceData> URCNzUiFinaleDetectiveSceneWidget::GetInteractPieceDataList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "GetInteractPieceDataList");

	Params::RCNzUiFinaleDetectiveSceneWidget_GetInteractPieceDataList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.GetPieceImgInfoList
// (Final, Native, Public)
// Parameters:
// TArray<struct FRCNzUiFinaleInteractImgInfo>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRCNzUiFinaleInteractImgInfo> URCNzUiFinaleDetectiveSceneWidget::GetPieceImgInfoList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "GetPieceImgInfoList");

	Params::RCNzUiFinaleDetectiveSceneWidget_GetPieceImgInfoList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.GetPieceImgList
// (Final, Native, Public)
// Parameters:
// TMap<class FName, class UTexture2D*>    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FName, class UTexture2D*> URCNzUiFinaleDetectiveSceneWidget::GetPieceImgList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "GetPieceImgList");

	Params::RCNzUiFinaleDetectiveSceneWidget_GetPieceImgList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.HiddenDetectiveScene
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleDetectiveSceneWidget::HiddenDetectiveScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "HiddenDetectiveScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.InitializeDetectiveScene
// (Final, Native, Public)

void URCNzUiFinaleDetectiveSceneWidget::InitializeDetectiveScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "InitializeDetectiveScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.InteractEndFinished
// (Final, Native, Public)

void URCNzUiFinaleDetectiveSceneWidget::InteractEndFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "InteractEndFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.InteractStartFinished
// (Final, Native, Public)

void URCNzUiFinaleDetectiveSceneWidget::InteractStartFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "InteractStartFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.IsUseInOutAnim
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleDetectiveSceneWidget::IsUseInOutAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "IsUseInOutAnim");

	Params::RCNzUiFinaleDetectiveSceneWidget_IsUseInOutAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.PlayEndAnim
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleDetectiveSceneWidget::PlayEndAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "PlayEndAnim");

	Params::RCNzUiFinaleDetectiveSceneWidget_PlayEndAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.PlayInitPieceList
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleDetectiveSceneWidget::PlayInitPieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "PlayInitPieceList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.PlayStartAnim
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleDetectiveSceneWidget::PlayStartAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "PlayStartAnim");

	Params::RCNzUiFinaleDetectiveSceneWidget_PlayStartAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.SetBackgroundImgScale
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ScaleX                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ScaleY                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveSceneWidget::SetBackgroundImgScale(float ScaleX, float ScaleY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "SetBackgroundImgScale");

	Params::RCNzUiFinaleDetectiveSceneWidget_SetBackgroundImgScale Parms{};

	Parms.ScaleX = ScaleX;
	Parms.ScaleY = ScaleY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.SetVisibleDetectiveScene
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveSceneWidget::SetVisibleDetectiveScene(const bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "SetVisibleDetectiveScene");

	Params::RCNzUiFinaleDetectiveSceneWidget_SetVisibleDetectiveScene Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.ShowDetectiveScene
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Img                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveSceneWidget::ShowDetectiveScene(const class UTexture2D* Img)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "ShowDetectiveScene");

	Params::RCNzUiFinaleDetectiveSceneWidget_ShowDetectiveScene Parms{};

	Parms.Img = Img;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.UpdateDetectiveScene
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Img                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveSceneWidget::UpdateDetectiveScene(const class UTexture2D* Img)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "UpdateDetectiveScene");

	Params::RCNzUiFinaleDetectiveSceneWidget_UpdateDetectiveScene Parms{};

	Parms.Img = Img;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.UpdatePieceData
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FRCNzFinaleGamePieceData> pieceList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveSceneWidget::UpdatePieceData(const TArray<struct FRCNzFinaleGamePieceData>& pieceList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "UpdatePieceData");

	Params::RCNzUiFinaleDetectiveSceneWidget_UpdatePieceData Parms{};

	Parms.pieceList = std::move(pieceList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.UpdatePieceImg
// (Final, Native, Public)
// Parameters:
// TMap<class FName, class UTexture2D*>    PieceImgList                                           (ConstParm, Parm, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveSceneWidget::UpdatePieceImg(const TMap<class FName, class UTexture2D*>& PieceImgList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "UpdatePieceImg");

	Params::RCNzUiFinaleDetectiveSceneWidget_UpdatePieceImg Parms{};

	Parms.PieceImgList = std::move(PieceImgList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleDetectiveSceneWidget.UpdatePieceImgInfo
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FRCNzUiFinaleInteractImgInfo>PieceImgInfoList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleDetectiveSceneWidget::UpdatePieceImgInfo(const TArray<struct FRCNzUiFinaleInteractImgInfo>& PieceImgInfoList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleDetectiveSceneWidget", "UpdatePieceImgInfo");

	Params::RCNzUiFinaleDetectiveSceneWidget_UpdatePieceImgInfo Parms{};

	Parms.PieceImgInfoList = std::move(PieceImgInfoList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzFinaleSectionData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzFinaleSectionData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzFinaleSectionData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleHeadingClearWidget.PlayHeadingClearHiddenAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleHeadingClearWidget::PlayHeadingClearHiddenAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingClearWidget", "PlayHeadingClearHiddenAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleHeadingClearWidget.PlayHeadingClearShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleHeadingClearWidget::PlayHeadingClearShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleHeadingClearWidget", "PlayHeadingClearShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultChapterSettingData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultChapterSettingData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultChapterSettingData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexBTNGuideWidget.BTNGuideCloseEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleIndexBTNGuideWidget::BTNGuideCloseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexBTNGuideWidget", "BTNGuideCloseEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleIndexBTNGuideWidget.BTNGuideOpenEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleIndexBTNGuideWidget::BTNGuideOpenEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexBTNGuideWidget", "BTNGuideOpenEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleIndexBTNGuideWidget.InitializeButtonGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleIndexBTNGuideWidget::InitializeButtonGuide(ERCInputKeyType InKeyType, const class FString& str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexBTNGuideWidget", "InitializeButtonGuide");

	Params::RCNzUiFinaleIndexBTNGuideWidget_InitializeButtonGuide Parms{};

	Parms.InKeyType = InKeyType;
	Parms.str = std::move(str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexBTNGuideWidget.WaitingOpen
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleIndexBTNGuideWidget::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexBTNGuideWidget", "WaitingOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCParamNzMTBWallMeshData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzMTBWallMeshData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzMTBWallMeshData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListParentWidget.GetIndexListUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCNzUiFinaleIndexListWidget*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCNzUiFinaleIndexListWidget* URCNzUiFinaleIndexListParentWidget::GetIndexListUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListParentWidget", "GetIndexListUI");

	Params::RCNzUiFinaleIndexListParentWidget_GetIndexListUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleIndexListParentWidget.InitializeIndexList
// (Final, Native, Public)
// Parameters:
// class FString                           chNumStr                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleIndexListParentWidget::InitializeIndexList(const class FString& chNumStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListParentWidget", "InitializeIndexList");

	Params::RCNzUiFinaleIndexListParentWidget_InitializeIndexList Parms{};

	Parms.chNumStr = std::move(chNumStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleIndexListParentWidget.UpdateIndexList
// (Final, Native, Public)
// Parameters:
// struct FRCParamNzFinaleSectionTableRow  Section                                                (Parm, NativeAccessSpecifierPublic)
// int32                                   idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCNzFinaleManagerBase*           FinaleManager                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleIndexListParentWidget::UpdateIndexList(const struct FRCParamNzFinaleSectionTableRow& Section, int32 idx, class ARCNzFinaleManagerBase* FinaleManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleIndexListParentWidget", "UpdateIndexList");

	Params::RCNzUiFinaleIndexListParentWidget_UpdateIndexList Parms{};

	Parms.Section = std::move(Section);
	Parms.idx = idx;
	Parms.FinaleManager = FinaleManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzFinalePieceData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzFinalePieceData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzFinalePieceData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconQBase.PlayCorrect
// (Final, Native, Public)

void URCNzUiFinaleInteractIconQBase::PlayCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconQBase", "PlayCorrect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconQBase.PlayFinish
// (Final, Native, Public)

void URCNzUiFinaleInteractIconQBase::PlayFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconQBase", "PlayFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconQBase.PlayHide
// (Final, Native, Public)

void URCNzUiFinaleInteractIconQBase::PlayHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconQBase", "PlayHide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconQBase.PlayInCorrect
// (Final, Native, Public)

void URCNzUiFinaleInteractIconQBase::PlayInCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconQBase", "PlayInCorrect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconQBase.PlayStart
// (Final, Native, Public)

void URCNzUiFinaleInteractIconQBase::PlayStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconQBase", "PlayStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleInteractIconQBase.PlayWait
// (Final, Native, Public)

void URCNzUiFinaleInteractIconQBase::PlayWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleInteractIconQBase", "PlayWait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzPuzzleSceneData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzPuzzleSceneData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzPuzzleSceneData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleLowSpeedBTNGuide.InitializeButtonGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleLowSpeedBTNGuide::InitializeButtonGuide(ERCInputKeyType InKeyType, const class FString& str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleLowSpeedBTNGuide", "InitializeButtonGuide");

	Params::RCNzUiFinaleLowSpeedBTNGuide_InitializeButtonGuide Parms{};

	Parms.InKeyType = InKeyType;
	Parms.str = std::move(str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleLowSpeedBTNGuide.PlayOffAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleLowSpeedBTNGuide::PlayOffAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleLowSpeedBTNGuide", "PlayOffAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleLowSpeedBTNGuide.PlayOnAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleLowSpeedBTNGuide::PlayOnAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleLowSpeedBTNGuide", "PlayOnAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCParamNzResultRankPointData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultRankPointData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultRankPointData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePageMoveLayoutWidget.ChangeVisiblePageMoveIcons
// (Final, Native, Public)
// Parameters:
// EPageMoveVisibleDirection               dir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePageMoveLayoutWidget::ChangeVisiblePageMoveIcons(EPageMoveVisibleDirection dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageMoveLayoutWidget", "ChangeVisiblePageMoveIcons");

	Params::RCNzUiFinalePageMoveLayoutWidget_ChangeVisiblePageMoveIcons Parms{};

	Parms.dir = dir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePageMoveLayoutWidget.GetPageMoveIconLocationAndSize
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector2D                        Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePageMoveLayoutWidget::GetPageMoveIconLocationAndSize(struct FVector2D* Location, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePageMoveLayoutWidget", "GetPageMoveIconLocationAndSize");

	Params::RCNzUiFinalePageMoveLayoutWidget_GetPageMoveIconLocationAndSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function RC.RCParamNzResultMinigameListData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultMinigameListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultMinigameListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceCorrectWidget.PlayCorrectPieceHiddenAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceCorrectWidget::PlayCorrectPieceHiddenAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceCorrectWidget", "PlayCorrectPieceHiddenAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceCorrectWidget.PlayCorrectPieceShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceCorrectWidget::PlayCorrectPieceShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceCorrectWidget", "PlayCorrectPieceShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceCorrectWidget.PlayInCorrectPieceShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceCorrectWidget::PlayInCorrectPieceShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceCorrectWidget", "PlayInCorrectPieceShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceDetailWidget.PlayApplyBlock_Done
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceDetailWidget::PlayApplyBlock_Done()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceDetailWidget", "PlayApplyBlock_Done");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceDetailWidget.PlayApplyBlock_Lock
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceDetailWidget::PlayApplyBlock_Lock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceDetailWidget", "PlayApplyBlock_Lock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceDetailWidget.PlayApplyFinish
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceDetailWidget::PlayApplyFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceDetailWidget", "PlayApplyFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceDetailWidget.PlayApplyStart
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceDetailWidget::PlayApplyStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceDetailWidget", "PlayApplyStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceDetailWidget.PlayDone
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceDetailWidget::PlayDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceDetailWidget", "PlayDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceDetailWidget.StartFinish
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceDetailWidget::StartFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceDetailWidget", "StartFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceDetailWidget.StartOpen
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceDetailWidget::StartOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceDetailWidget", "StartOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceDetailWidget.UpdateDetailInfo
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           titile                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       PieceImg                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       lockNum                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isLock                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isUsed                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isUnlockAnim                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceDetailWidget::UpdateDetailInfo(const class FString& titile, const class UTexture2D* PieceImg, const class UTexture2D* lockNum, const bool isLock, const bool isUsed, const bool isUnlockAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceDetailWidget", "UpdateDetailInfo");

	Params::RCNzUiFinalePieceDetailWidget_UpdateDetailInfo Parms{};

	Parms.titile = std::move(titile);
	Parms.PieceImg = PieceImg;
	Parms.lockNum = lockNum;
	Parms.isLock = isLock;
	Parms.isUsed = isUsed;
	Parms.isUnlockAnim = isUnlockAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCSingletonObject.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSingletonObject::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSingletonObject", "ReceiveTick");

	Params::RCSingletonObject_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCParamNzPuzzleBarrelWordData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzPuzzleBarrelWordData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzPuzzleBarrelWordData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceGetWidget.CallHiddenFinishedDelegate
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceGetWidget::CallHiddenFinishedDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceGetWidget", "CallHiddenFinishedDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceGetWidget.PlayGetPieceHiddenAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceGetWidget::PlayGetPieceHiddenAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceGetWidget", "PlayGetPieceHiddenAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceGetWidget.PlayGetPieceShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinalePieceGetWidget::PlayGetPieceShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceGetWidget", "PlayGetPieceShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCollectionMenuData.Import
// (Native, Public, BlueprintCallable)

void URCParamCollectionMenuData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCollectionMenuData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.CheckCurrentPieceState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFinalePieceState                       targetState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinalePieceList_PieceBase::CheckCurrentPieceState(EFinalePieceState targetState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "CheckCurrentPieceState");

	Params::RCNzUiFinalePieceList_PieceBase_CheckCurrentPieceState Parms{};

	Parms.targetState = targetState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.GetCurrentPieceState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFinalePieceState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFinalePieceState URCNzUiFinalePieceList_PieceBase::GetCurrentPieceState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "GetCurrentPieceState");

	Params::RCNzUiFinalePieceList_PieceBase_GetCurrentPieceState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.GetPieceDegree
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCNzUiFinalePieceList_PieceBase::GetPieceDegree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "GetPieceDegree");

	Params::RCNzUiFinalePieceList_PieceBase_GetPieceDegree Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.GetPieceImgAngle
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCNzUiFinalePieceList_PieceBase::GetPieceImgAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "GetPieceImgAngle");

	Params::RCNzUiFinalePieceList_PieceBase_GetPieceImgAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.GetPieceImgSize
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinalePieceList_PieceBase::GetPieceImgSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "GetPieceImgSize");

	Params::RCNzUiFinalePieceList_PieceBase_GetPieceImgSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.GetPieceWBPScale
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinalePieceList_PieceBase::GetPieceWBPScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "GetPieceWBPScale");

	Params::RCNzUiFinalePieceList_PieceBase_GetPieceWBPScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.GetPieceWBPSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCNzUiFinalePieceList_PieceBase::GetPieceWBPSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "GetPieceWBPSize");

	Params::RCNzUiFinalePieceList_PieceBase_GetPieceWBPSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.InitializePiece
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       Info                                                   (Parm, NativeAccessSpecifierPublic)
// class URCNzUiFinalePieceLayoutWidget*   Owner                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceList_PieceBase::InitializePiece(const struct FRCNzFinalePieceObjectInfo& Info, class URCNzUiFinalePieceLayoutWidget* Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "InitializePiece");

	Params::RCNzUiFinalePieceList_PieceBase_InitializePiece Parms{};

	Parms.Info = std::move(Info);
	Parms.Owner = Owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.PlayDone
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceList_PieceBase::PlayDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "PlayDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceList_PieceBase.PlayPickAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceList_PieceBase::PlayPickAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "PlayPickAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceList_PieceBase.PlaySelect
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceList_PieceBase::PlaySelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "PlaySelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceList_PieceBase.PlayUnLockAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceList_PieceBase::PlayUnLockAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "PlayUnLockAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceList_PieceBase.PlayUnSelect
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceList_PieceBase::PlayUnSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "PlayUnSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceList_PieceBase.SetPieceImage
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       tex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceList_PieceBase::SetPieceImage(class UTexture2D* tex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "SetPieceImage");

	Params::RCNzUiFinalePieceList_PieceBase_SetPieceImage Parms{};

	Parms.tex = tex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinalePieceList_PieceBase.SetPieceState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSelect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceList_PieceBase::SetPieceState(bool IsSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "SetPieceState");

	Params::RCNzUiFinalePieceList_PieceBase_SetPieceState Parms{};

	Parms.IsSelect = IsSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinalePieceList_PieceBase.UpdatePiece
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRCNzFinalePieceObjectInfo       Info                                                   (Parm, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceList_PieceBase::UpdatePiece(const struct FRCNzFinalePieceObjectInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "UpdatePiece");

	Params::RCNzUiFinalePieceList_PieceBase_UpdatePiece Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinalePieceList_PieceBase.UpdateRockState
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceList_PieceBase::UpdateRockState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceList_PieceBase", "UpdateRockState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceQuestionBase.FinishPieceQuestion
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceQuestionBase::FinishPieceQuestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceQuestionBase", "FinishPieceQuestion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceQuestionBase.InitializePieceQuestion
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinalePieceQuestionBase::InitializePieceQuestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceQuestionBase", "InitializePieceQuestion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinalePieceQuestionBase.SetQuestionTextPosition
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isLeft                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceQuestionBase::SetQuestionTextPosition(const struct FVector2D& Position, const bool isLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceQuestionBase", "SetQuestionTextPosition");

	Params::RCNzUiFinalePieceQuestionBase_SetQuestionTextPosition Parms{};

	Parms.Position = std::move(Position);
	Parms.isLeft = isLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinalePieceQuestionBase.UpdateQuestion
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           QuestionText                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinalePieceQuestionBase::UpdateQuestion(const bool IsVisible_0, const class FString& QuestionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinalePieceQuestionBase", "UpdateQuestion");

	Params::RCNzUiFinalePieceQuestionBase_UpdateQuestion Parms{};

	Parms.IsVisible_0 = IsVisible_0;
	Parms.QuestionText = std::move(QuestionText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCParamEventCheckReloadSubLevelData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventCheckReloadSubLevelData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventCheckReloadSubLevelData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionLayoutWidget.HiddenAllQuestionIcon
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleQuestionLayoutWidget::HiddenAllQuestionIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionLayoutWidget", "HiddenAllQuestionIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionLayoutWidget.InitializeQuestionLayoutWidget
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleQuestionLayoutWidget::InitializeQuestionLayoutWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionLayoutWidget", "InitializeQuestionLayoutWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionLayoutWidget.UpdateAllQuestionIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<bool>                            isCheckList                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionLayoutWidget::UpdateAllQuestionIcon(const TArray<bool>& isCheckList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionLayoutWidget", "UpdateAllQuestionIcon");

	Params::RCNzUiFinaleQuestionLayoutWidget_UpdateAllQuestionIcon Parms{};

	Parms.isCheckList = std::move(isCheckList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionLayoutWidget.UpdateAtQuestionIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isCheck                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionLayoutWidget::UpdateAtQuestionIcon(int32 Index_0, bool isCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionLayoutWidget", "UpdateAtQuestionIcon");

	Params::RCNzUiFinaleQuestionLayoutWidget_UpdateAtQuestionIcon Parms{};

	Parms.Index_0 = Index_0;
	Parms.isCheck = isCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionRestWidget.InitializeFinaleQuestionRestWidget
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleQuestionRestWidget::InitializeFinaleQuestionRestWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionRestWidget", "InitializeFinaleQuestionRestWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionRestWidget.PlayPieeCorrectAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleQuestionRestWidget::PlayPieeCorrectAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionRestWidget", "PlayPieeCorrectAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionRestWidget.SetQuestionNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionRestWidget::SetQuestionNum(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionRestWidget", "SetQuestionNum");

	Params::RCNzUiFinaleQuestionRestWidget_SetQuestionNum Parms{};

	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterTagListData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterTagListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterTagListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.AddBackgroundImg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       tex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionWidget::AddBackgroundImg(class UTexture2D* tex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "AddBackgroundImg");

	Params::RCNzUiFinaleQuestionWidget_AddBackgroundImg Parms{};

	Parms.tex = tex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.AddInteractIconWidget
// (Final, Native, Public, HasDefaults)
// Parameters:
// class URCNzUiFinaleInteractIconWidget*  Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionWidget::AddInteractIconWidget(class URCNzUiFinaleInteractIconWidget* Widget, const struct FVector2D& Position, bool isSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "AddInteractIconWidget");

	Params::RCNzUiFinaleQuestionWidget_AddInteractIconWidget Parms{};

	Parms.Widget = Widget;
	Parms.Position = std::move(Position);
	Parms.isSuccess = isSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.CleanPiece
// (Final, Native, Public)

void URCNzUiFinaleQuestionWidget::CleanPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "CleanPiece");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.FinishedInteractIconStartAnim
// (Final, Native, Public)

void URCNzUiFinaleQuestionWidget::FinishedInteractIconStartAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "FinishedInteractIconStartAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.FinishedToLeftAnim
// (Final, Native, Public)

void URCNzUiFinaleQuestionWidget::FinishedToLeftAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "FinishedToLeftAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.FinishedToRightAnim
// (Final, Native, Public)

void URCNzUiFinaleQuestionWidget::FinishedToRightAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "FinishedToRightAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.GetCurrentDetectiveScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCNzUiFinaleDetectiveSceneWidget*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URCNzUiFinaleDetectiveSceneWidget* URCNzUiFinaleQuestionWidget::GetCurrentDetectiveScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "GetCurrentDetectiveScene");

	Params::RCNzUiFinaleQuestionWidget_GetCurrentDetectiveScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleQuestionWidget.GetCurrentShowDetectiveSceneIdx
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiFinaleQuestionWidget::GetCurrentShowDetectiveSceneIdx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "GetCurrentShowDetectiveSceneIdx");

	Params::RCNzUiFinaleQuestionWidget_GetCurrentShowDetectiveSceneIdx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleQuestionWidget.GetPieceList
// (Final, Native, Public)
// Parameters:
// TArray<class URCNzUiFinaleInteractIconWidget*>ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class URCNzUiFinaleInteractIconWidget*> URCNzUiFinaleQuestionWidget::GetPieceList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "GetPieceList");

	Params::RCNzUiFinaleQuestionWidget_GetPieceList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleQuestionWidget.InitializeFinaleQuestion
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleQuestionWidget::InitializeFinaleQuestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "InitializeFinaleQuestion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.PlayIconListInitAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URCNzUiFinaleQuestionWidget::PlayIconListInitAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "PlayIconListInitAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCNzUiFinaleQuestionWidget.SetIsPickPiece
// (Final, Native, Public)
// Parameters:
// class FName                             targetPieceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isPick                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionWidget::SetIsPickPiece(class FName targetPieceID, bool isPick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "SetIsPickPiece");

	Params::RCNzUiFinaleQuestionWidget_SetIsPickPiece Parms{};

	Parms.targetPieceID = targetPieceID;
	Parms.isPick = isPick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.SetVisiblePiece
// (Final, Native, Public)
// Parameters:
// class FName                             targetPieceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionWidget::SetVisiblePiece(class FName targetPieceID, bool visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "SetVisiblePiece");

	Params::RCNzUiFinaleQuestionWidget_SetVisiblePiece Parms{};

	Parms.targetPieceID = targetPieceID;
	Parms.visible = visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.SetVisibleQuestionWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionWidget::SetVisibleQuestionWidget(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "SetVisibleQuestionWidget");

	Params::RCNzUiFinaleQuestionWidget_SetVisibleQuestionWidget Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleQuestionWidget.StartPlayPageMoveAnim
// (Final, Native, Public)
// Parameters:
// int32                                   targetSectionNum                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFinalePageMoveDirection                dir                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleQuestionWidget::StartPlayPageMoveAnim(const int32 targetSectionNum, const EFinalePageMoveDirection dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "StartPlayPageMoveAnim");

	Params::RCNzUiFinaleQuestionWidget_StartPlayPageMoveAnim Parms{};

	Parms.targetSectionNum = targetSectionNum;
	Parms.dir = dir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleQuestionWidget.UpdateBackgroundImg
// (Final, Native, Public)
// Parameters:
// int32                                   targetSectionNum                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiFinaleQuestionWidget::UpdateBackgroundImg(const int32 targetSectionNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "UpdateBackgroundImg");

	Params::RCNzUiFinaleQuestionWidget_UpdateBackgroundImg Parms{};

	Parms.targetSectionNum = targetSectionNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiFinaleQuestionWidget.UpdatePiece
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FRCNzFinaleGamePieceData> pieceList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionWidget::UpdatePiece(const TArray<struct FRCNzFinaleGamePieceData>& pieceList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "UpdatePiece");

	Params::RCNzUiFinaleQuestionWidget_UpdatePiece Parms{};

	Parms.pieceList = std::move(pieceList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleQuestionWidget.UpdateTexture
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       backImg                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleQuestionWidget::UpdateTexture(const class UTexture2D* backImg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleQuestionWidget", "UpdateTexture");

	Params::RCNzUiFinaleQuestionWidget_UpdateTexture Parms{};

	Parms.backImg = backImg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzUiFinaleTimeLimitWidget.InitializeFinaleTimeLimitWidget
// (Final, Native, Public, BlueprintCallable)

void URCNzUiFinaleTimeLimitWidget::InitializeFinaleTimeLimitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitWidget", "InitializeFinaleTimeLimitWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiFinaleTimeLimitWidget.SetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiFinaleTimeLimitWidget::SetTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiFinaleTimeLimitWidget", "SetTime");

	Params::RCNzUiFinaleTimeLimitWidget_SetTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiKagiChoiceQuestion.Close
// (Final, Native, Public, BlueprintCallable)

void URCNzUiKagiChoiceQuestion::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiKagiChoiceQuestion", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiKagiChoiceQuestion.Open
// (Final, Native, Public, BlueprintCallable)

void URCNzUiKagiChoiceQuestion::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiKagiChoiceQuestion", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiKagiChoiceQuestion.Wait
// (Final, Native, Public, BlueprintCallable)

void URCNzUiKagiChoiceQuestion::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiKagiChoiceQuestion", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiKagiChoiceQuestion.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCNzUiKagiChoiceQuestion::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiKagiChoiceQuestion", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiReproduceClosedRoomTelop.GetReproduceClosedRoomTelopPriority
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCNzUiReproduceClosedRoomTelop::GetReproduceClosedRoomTelopPriority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCNzUiReproduceClosedRoomTelop", "GetReproduceClosedRoomTelopPriority");

	Params::RCNzUiReproduceClosedRoomTelop_GetReproduceClosedRoomTelopPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiReproduceClosedRoomTelop.FinishTelop
// (Final, Native, Public, BlueprintCallable)

void URCNzUiReproduceClosedRoomTelop::FinishTelop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiReproduceClosedRoomTelop", "FinishTelop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiReproduceClosedRoomTelop.IsFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiReproduceClosedRoomTelop::IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiReproduceClosedRoomTelop", "IsFinished");

	Params::RCNzUiReproduceClosedRoomTelop_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiReproduceClosedRoomTelop.StartTelop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCReproduceCloseRoomUIDataAsset* DataAsset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiReproduceClosedRoomTelop::StartTelop(class URCReproduceCloseRoomUIDataAsset* DataAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiReproduceClosedRoomTelop", "StartTelop");

	Params::RCNzUiReproduceClosedRoomTelop_StartTelop Parms{};

	Parms.DataAsset = DataAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiSkillInfo.SetWaitTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   sec                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiSkillInfo::SetWaitTime(float sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiSkillInfo", "SetWaitTime");

	Params::RCNzUiSkillInfo_SetWaitTime Parms{};

	Parms.sec = sec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiSkillInfo.StartSkillInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartOffsetTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFinishWaitTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInFinishSE                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzUiSkillInfo::StartSkillInfo(class FName ID, float StartOffsetTime, float InFinishWaitTime, bool bInFinishSE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiSkillInfo", "StartSkillInfo");

	Params::RCNzUiSkillInfo_StartSkillInfo Parms{};

	Parms.ID = ID;
	Parms.StartOffsetTime = StartOffsetTime;
	Parms.InFinishWaitTime = InFinishWaitTime;
	Parms.bInFinishSE = bInFinishSE;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiSkillInfo.IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiSkillInfo::IsFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiSkillInfo", "IsFinished");

	Params::RCNzUiSkillInfo_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiSkillInfoList.FinishSkilInfoList
// (Final, Native, Public, BlueprintCallable)

void URCNzUiSkillInfoList::FinishSkilInfoList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiSkillInfoList", "FinishSkilInfoList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzUiSkillInfoList.StartShowSkillInfoList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     IdList                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiSkillInfoList::StartShowSkillInfoList(const TArray<class FName>& IdList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiSkillInfoList", "StartShowSkillInfoList");

	Params::RCNzUiSkillInfoList_StartShowSkillInfoList Parms{};

	Parms.IdList = std::move(IdList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzUiSkillInfoList.IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCNzUiSkillInfoList::IsFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzUiSkillInfoList", "IsFinished");

	Params::RCNzUiSkillInfoList_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCNzWaruagaki_LayoutBase.HideButtonGuide
// (Final, Native, Public, BlueprintCallable)

void URCNzWaruagaki_LayoutBase::HideButtonGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "HideButtonGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LayoutBase.InitializeKaikagiQuestionAndInfoUI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Heading                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           question                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzWaruagaki_LayoutBase::InitializeKaikagiQuestionAndInfoUI(const class FString& Heading, const class FString& question)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "InitializeKaikagiQuestionAndInfoUI");

	Params::RCNzWaruagaki_LayoutBase_InitializeKaikagiQuestionAndInfoUI Parms{};

	Parms.Heading = std::move(Heading);
	Parms.question = std::move(question);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LayoutBase.InitializeWaruagakiUI
// (Final, Native, Public, BlueprintCallable)

void URCNzWaruagaki_LayoutBase::InitializeWaruagakiUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "InitializeWaruagakiUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LayoutBase.PlayWaruagakiLogoShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzWaruagaki_LayoutBase::PlayWaruagakiLogoShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "PlayWaruagakiLogoShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LayoutBase.ReleaseWaruagakiLayout
// (Final, Native, Public, BlueprintCallable)

void URCNzWaruagaki_LayoutBase::ReleaseWaruagakiLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "ReleaseWaruagakiLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LayoutBase.SetHP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   OldHP                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewHP                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    PlayDamageAnimation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzWaruagaki_LayoutBase::SetHP(int32 OldHP, int32 NewHP, bool PlayDamageAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "SetHP");

	Params::RCNzWaruagaki_LayoutBase_SetHP Parms{};

	Parms.OldHP = OldHP;
	Parms.NewHP = NewHP;
	Parms.PlayDamageAnimation = PlayDamageAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LayoutBase.SetKaiKagiName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzWaruagaki_LayoutBase::SetKaiKagiName(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "SetKaiKagiName");

	Params::RCNzWaruagaki_LayoutBase_SetKaiKagiName Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LayoutBase.ShowButtonGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsNormalMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzWaruagaki_LayoutBase::ShowButtonGuide(bool IsNormalMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "ShowButtonGuide");

	Params::RCNzWaruagaki_LayoutBase_ShowButtonGuide Parms{};

	Parms.IsNormalMode = IsNormalMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LayoutBase.ShowStartLogoAnimFinishedEvent
// (Final, Native, Public)

void URCNzWaruagaki_LayoutBase::ShowStartLogoAnimFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LayoutBase", "ShowStartLogoAnimFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_LogoBase.PlayWaruagakiLogoShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzWaruagaki_LogoBase::PlayWaruagakiLogoShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_LogoBase", "PlayWaruagakiLogoShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_Question.InitializeQuestionText
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Heading                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           question                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCNzWaruagaki_Question::InitializeQuestionText(const class FString& Heading, const class FString& question)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_Question", "InitializeQuestionText");

	Params::RCNzWaruagaki_Question_InitializeQuestionText Parms{};

	Parms.Heading = std::move(Heading);
	Parms.question = std::move(question);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RC.RCNzWaruagaki_Question.PlayWaruagakiQuestionFinishAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzWaruagaki_Question::PlayWaruagakiQuestionFinishAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_Question", "PlayWaruagakiQuestionFinishAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCNzWaruagaki_Question.PlayWaruagakiQuestionShowAnim
// (Final, Native, Public, BlueprintCallable)

void URCNzWaruagaki_Question::PlayWaruagakiQuestionShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCNzWaruagaki_Question", "PlayWaruagakiQuestionShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamAttachmentColorPaletteData.Import
// (Native, Public, BlueprintCallable)

void URCParamAttachmentColorPaletteData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamAttachmentColorPaletteData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuContentsButton.DecidedProc
// (Final, Native, Public)

void URCUiMenuContentsButton::DecidedProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuContentsButton", "DecidedProc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamBgFileListData.Import
// (Native, Public, BlueprintCallable)

void URCParamBgFileListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamBgFileListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamBgListL00Data.Import
// (Native, Public, BlueprintCallable)

void URCParamBgListL00Data::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamBgListL00Data", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamBombReleaseData.Import
// (Native, Public, BlueprintCallable)

void URCParamBombReleaseData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamBombReleaseData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamChapterListData.Import
// (Native, Public, BlueprintCallable)

void URCParamChapterListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamChapterListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamChapterSelectDataData.Import
// (Native, Public, BlueprintCallable)

void URCParamChapterSelectDataData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamChapterSelectDataData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterBallonPositionData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterBallonPositionData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterBallonPositionData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuKagi.ChangeKagiScale
// (Final, Native, Protected)

void URCUiMenuKagi::ChangeKagiScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuKagi", "ChangeKagiScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuKagi.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuKagi::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuKagi", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuKagi.InitializeMenuKagi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInKagiSelect                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuKagi::InitializeMenuKagi(bool bInKagiSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuKagi", "InitializeMenuKagi");

	Params::RCUiMenuKagi_InitializeMenuKagi Parms{};

	Parms.bInKagiSelect = bInKagiSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuKagi.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuKagi::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuKagi", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterColorPaletteData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterColorPaletteData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterColorPaletteData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterFacial2D3DListData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterFacial2D3DListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterFacial2D3DListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterInfoListData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterInfoListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterInfoListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterMaterialListData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterMaterialListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterMaterialListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterMotionTemplateData.Import
// (Native, Public, BlueprintCallable)

void URCParamCharacterMotionTemplateData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterMotionTemplateData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCharacterSettingDataAsset.Import
// (Final, Native, Public, BlueprintCallable)

void URCParamCharacterSettingDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCharacterSettingDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamCollectionDialogData.Import
// (Native, Public, BlueprintCallable)

void URCParamCollectionDialogData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamCollectionDialogData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamDLCSoundSheetListData.Import
// (Native, Public, BlueprintCallable)

void URCParamDLCSoundSheetListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamDLCSoundSheetListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamEventCharacterFacialColorData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventCharacterFacialColorData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventCharacterFacialColorData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamEventCheckSubQuestSubLevelData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventCheckSubQuestSubLevelData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventCheckSubQuestSubLevelData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamEventMapBusStopInfoData.Import
// (Native, Public, BlueprintCallable)

void URCParamEventMapBusStopInfoData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamEventMapBusStopInfoData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamFaceGradationListData.Import
// (Native, Public, BlueprintCallable)

void URCParamFaceGradationListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamFaceGradationListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleMenuList.TitleListSelectNavigation
// (Final, Native, Protected)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleMenuList::TitleListSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleMenuList", "TitleListSelectNavigation");

	Params::RCTitleMenuList_TitleListSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamFigureInformationData.Import
// (Native, Public, BlueprintCallable)

void URCParamFigureInformationData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamFigureInformationData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamFloorTypeData.Import
// (Native, Public, BlueprintCallable)

void URCParamFloorTypeData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamFloorTypeData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamGalleryBgmListData.Import
// (Native, Public, BlueprintCallable)

void URCParamGalleryBgmListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamGalleryBgmListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCharacterFace._Push
// (Final, Native, Private)

void URCUiMenuCharacterFace::mPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCharacterFace", "_Push");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamGlossaryCategoryListData.Import
// (Native, Public, BlueprintCallable)

void URCParamGlossaryCategoryListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamGlossaryCategoryListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamInputIDData.Import
// (Native, Public, BlueprintCallable)

void URCParamInputIDData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamInputIDData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamLevelListData.Import
// (Native, Public, BlueprintCallable)

void URCParamLevelListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamLevelListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamLipSyncCharaIDListData.Import
// (Native, Public, BlueprintCallable)

void URCParamLipSyncCharaIDListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamLipSyncCharaIDListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamLipSyncForTextIDData.Import
// (Native, Public, BlueprintCallable)

void URCParamLipSyncForTextIDData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamLipSyncForTextIDData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamMenuWorldMapListData.Import
// (Native, Public, BlueprintCallable)

void URCParamMenuWorldMapListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamMenuWorldMapListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamMobListData.Import
// (Native, Public, BlueprintCallable)

void URCParamMobListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamMobListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzCriminalData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzCriminalData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzCriminalData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzCriminalSceneData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzCriminalSceneData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzCriminalSceneData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzFinaleDetectiveBackgroundImageData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzFinaleDetectiveBackgroundImageData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzFinaleDetectiveBackgroundImageData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzFinaleSceneData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzFinaleSceneData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzFinaleSceneData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzMTBData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzMTBData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzMTBData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzMTBWallData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzMTBWallData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzMTBWallData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzPuzzleData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzPuzzleData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzPuzzleData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzPuzzleLangData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzPuzzleLangData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzPuzzleLangData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzPuzzleSpeedData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzPuzzleSpeedData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzPuzzleSpeedData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultHitPointData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultHitPointData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultHitPointData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultMinigamePointData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultMinigamePointData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultMinigamePointData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultMinigameTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultMinigameTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultMinigameTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuQuestList.QuestMenuCustomNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuQuestList::QuestMenuCustomNavigation(EUINavigation InNavigation, class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuQuestList", "QuestMenuCustomNavigation");

	Params::RCUiMenuQuestList_QuestMenuCustomNavigation Parms{};

	Parms.InNavigation = InNavigation;
	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuQuestList.QuestNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCUiMenuQuestList::QuestNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuQuestList", "QuestNavigation");

	Params::RCUiMenuQuestList_QuestNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuQuestList.SelectQuestListBar
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuQuestList::SelectQuestListBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuQuestList", "SelectQuestListBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuQuestList.SelectQuestListBarWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuQuestList::SelectQuestListBarWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuQuestList", "SelectQuestListBarWrap");

	Params::RCUiMenuQuestList_SelectQuestListBarWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuQuestList.SetQuestButtonGuide
// (Final, Native, Protected)
// Parameters:
// class URCUiMenuQuestListGrp*            InListGrp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuQuestList::SetQuestButtonGuide(class URCUiMenuQuestListGrp* InListGrp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuQuestList", "SetQuestButtonGuide");

	Params::RCUiMenuQuestList_SetQuestButtonGuide Parms{};

	Parms.InListGrp = InListGrp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultMinigameTypeData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultMinigameTypeData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultMinigameTypeData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultRankData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultRankData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultRankData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultRankItemToTanteiPointData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultRankItemToTanteiPointData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultRankItemToTanteiPointData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillSelect.NotifyCloseEventWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuSkillSelect::NotifyCloseEventWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillSelect", "NotifyCloseEventWrap");

	Params::RCUiMenuSkillSelect_NotifyCloseEventWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillSelect.NotifyOpenEventWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuSkillSelect::NotifyOpenEventWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillSelect", "NotifyOpenEventWrap");

	Params::RCUiMenuSkillSelect_NotifyOpenEventWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillSelect.SkillSelectNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCUiMenuSkillSelect::SkillSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillSelect", "SkillSelectNavigation");

	Params::RCUiMenuSkillSelect_SkillSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuSkillSelect.StartPush
// (Final, Native, Protected)

void URCUiMenuSkillSelect::StartPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillSelect", "StartPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultRankToTanteiPointData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultRankToTanteiPointData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultRankToTanteiPointData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamNzResultReasoningPointData.Import
// (Native, Public, BlueprintCallable)

void URCParamNzResultReasoningPointData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamNzResultReasoningPointData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamOptionData.Import
// (Native, Public, BlueprintCallable)

void URCParamOptionData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamOptionData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamOption_ItemListData.Import
// (Native, Public, BlueprintCallable)

void URCParamOption_ItemListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamOption_ItemListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractText.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiInteractText::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractText", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractText.InitializeTextPl
// (Final, Native, Public, BlueprintCallable)

void URCUiInteractText::InitializeTextPl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractText", "InitializeTextPl");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractText.Off
// (Final, Native, Public, BlueprintCallable)

void URCUiInteractText::Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractText", "Off");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractText.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiInteractText::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractText", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractText.SetTargetName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiInteractText::SetTargetName(const class FString& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractText", "SetTargetName");

	Params::RCUiInteractText_SetTargetName Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractText.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCUiInteractText::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractText", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamOptionCommonData.Import
// (Native, Public, BlueprintCallable)

void URCParamOptionCommonData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamOptionCommonData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamOptionControllerData.Import
// (Native, Public, BlueprintCallable)

void URCParamOptionControllerData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamOptionControllerData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamOptionGraphicsData.Import
// (Native, Public, BlueprintCallable)

void URCParamOptionGraphicsData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamOptionGraphicsData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamOptionKeyData.Import
// (Native, Public, BlueprintCallable)

void URCParamOptionKeyData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamOptionKeyData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiIntTarget.SetTargetImg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsNzWorld                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiIntTarget::SetTargetImg(bool bInIsNzWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiIntTarget", "SetTargetImg");

	Params::RCUiIntTarget_SetTargetImg Parms{};

	Parms.bInIsNzWorld = bInIsNzWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamOptionKeyDuplicateData.Import
// (Native, Public, BlueprintCallable)

void URCParamOptionKeyDuplicateData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamOptionKeyDuplicateData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamOptionSoundData.Import
// (Native, Public, BlueprintCallable)

void URCParamOptionSoundData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamOptionSoundData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamQuestCategoryListData.Import
// (Native, Public, BlueprintCallable)

void URCParamQuestCategoryListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamQuestCategoryListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamQuestListData.Import
// (Native, Public, BlueprintCallable)

void URCParamQuestListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamQuestListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamRainEffectListData.Import
// (Native, Public, BlueprintCallable)

void URCParamRainEffectListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamRainEffectListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamRealEventSettingDataAsset.Import
// (Final, Native, Public, BlueprintCallable)

void URCParamRealEventSettingDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamRealEventSettingDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSaveLoadDialogData.Import
// (Native, Public, BlueprintCallable)

void URCParamSaveLoadDialogData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSaveLoadDialogData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSaveLoadErrorData.Import
// (Native, Public, BlueprintCallable)

void URCParamSaveLoadErrorData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSaveLoadErrorData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPointer.FinishCursor
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMapPointer::FinishCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "FinishCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPointer.FinishDefault
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMapPointer::FinishDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "FinishDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPointer.FinishOverlap
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMapPointer::FinishOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "FinishOverlap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPointer.GetWidgetRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCUiMenuAreaMapPointer::GetWidgetRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "GetWidgetRadius");

	Params::RCUiMenuAreaMapPointer_GetWidgetRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuAreaMapPointer.InitializeMapPointer
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMapPointer::InitializeMapPointer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "InitializeMapPointer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPointer.OffMark
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMapPointer::OffMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "OffMark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPointer.OnMark
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMapPointer::OnMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "OnMark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPointer.SetIconText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuAreaMapPointer::SetIconText(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "SetIconText");

	Params::RCUiMenuAreaMapPointer_SetIconText Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPointer.StartDefault
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMapPointer::StartDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPointer", "StartDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSaveLoadIconData.Import
// (Native, Public, BlueprintCallable)

void URCParamSaveLoadIconData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSaveLoadIconData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSaveLoadTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamSaveLoadTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSaveLoadTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSequencerSoundTemplateData.Import
// (Native, Public, BlueprintCallable)

void URCParamSequencerSoundTemplateData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSequencerSoundTemplateData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamShinigamiExIdleData.Import
// (Native, Public, BlueprintCallable)

void URCParamShinigamiExIdleData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamShinigamiExIdleData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuTutorialList.SelectTutorial
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuTutorialList::SelectTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuTutorialList", "SelectTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuTutorialList.TutorialNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCUiMenuTutorialList::TutorialNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuTutorialList", "TutorialNavigation");

	Params::RCUiMenuTutorialList_TutorialNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamShinigamiFacialTempleteData.Import
// (Native, Public, BlueprintCallable)

void URCParamShinigamiFacialTempleteData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamShinigamiFacialTempleteData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSkillEquipmentListData.Import
// (Native, Public, BlueprintCallable)

void URCParamSkillEquipmentListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSkillEquipmentListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSkillListData.Import
// (Native, Public, BlueprintCallable)

void URCParamSkillListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSkillListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSocketListData.Import
// (Native, Public, BlueprintCallable)

void URCParamSocketListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSocketListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapBusIcon.OnFinishClickAnim
// (Final, Native, Protected)

void URCUiMenuWorldMapBusIcon::OnFinishClickAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapBusIcon", "OnFinishClickAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapBusIcon.OnFinishMouseEnterAnim
// (Final, Native, Protected)

void URCUiMenuWorldMapBusIcon::OnFinishMouseEnterAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapBusIcon", "OnFinishMouseEnterAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSoundFormatData.Import
// (Native, Public, BlueprintCallable)

void URCParamSoundFormatData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSoundFormatData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSoundIdListTemplateData.Import
// (Native, Public, BlueprintCallable)

void URCParamSoundIdListTemplateData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSoundIdListTemplateData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSoundNonResidentListData.Import
// (Native, Public, BlueprintCallable)

void URCParamSoundNonResidentListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSoundNonResidentListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSoundResidentListData.Import
// (Native, Public, BlueprintCallable)

void URCParamSoundResidentListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSoundResidentListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamStaffRollListData.Import
// (Native, Public, BlueprintCallable)

void URCParamStaffRollListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamStaffRollListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamStaffRollList_PS5Data.Import
// (Native, Public, BlueprintCallable)

void URCParamStaffRollList_PS5Data::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamStaffRollList_PS5Data", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamStaffRollList_SwitchData.Import
// (Native, Public, BlueprintCallable)

void URCParamStaffRollList_SwitchData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamStaffRollList_SwitchData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamStaffRollList_XboxData.Import
// (Native, Public, BlueprintCallable)

void URCParamStaffRollList_XboxData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamStaffRollList_XboxData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamStartupTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamStartupTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamStartupTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSubQuestTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamSubQuestTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSubQuestTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSystemData.Import
// (Native, Public, BlueprintCallable)

void URCParamSystemData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSystemData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCShinigamiAICommandTrigger.OnActorBeginOverlapScriptEntry
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCShinigamiAICommandTrigger::OnActorBeginOverlapScriptEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCShinigamiAICommandTrigger", "OnActorBeginOverlapScriptEntry");

	Params::RCShinigamiAICommandTrigger_OnActorBeginOverlapScriptEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCShinigamiAICommandTrigger.OnActorEndOverlapScriptEntry
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCShinigamiAICommandTrigger::OnActorEndOverlapScriptEntry(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCShinigamiAICommandTrigger", "OnActorEndOverlapScriptEntry");

	Params::RCShinigamiAICommandTrigger_OnActorEndOverlapScriptEntry Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCShinigamiAICommandTrigger.ResetStatus
// (Final, Native, Public, BlueprintCallable)

void ARCShinigamiAICommandTrigger::ResetStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCShinigamiAICommandTrigger", "ResetStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamSystemPlatformData.Import
// (Native, Public, BlueprintCallable)

void URCParamSystemPlatformData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamSystemPlatformData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTalkTextTagListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTalkTextTagListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTalkTextTagListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTanteiPointListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTanteiPointListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTanteiPointListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTanteiRankListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTanteiRankListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTanteiRankListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTextListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTextListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTextListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTipsBlackSceneListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTipsBlackSceneListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTipsBlackSceneListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTipsListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTipsListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTipsListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTitleDialogTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamTitleDialogTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTitleDialogTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTitleHelpTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamTitleHelpTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTitleHelpTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTitleLanguageTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamTitleLanguageTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTitleLanguageTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTitleMenuListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTitleMenuListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTitleMenuListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTitleSubStoryData.Import
// (Native, Public, BlueprintCallable)

void URCParamTitleSubStoryData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTitleSubStoryData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTitleSubStoryDialogTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamTitleSubStoryDialogTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTitleSubStoryDialogTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTitleSubStoryWindowTextData.Import
// (Native, Public, BlueprintCallable)

void URCParamTitleSubStoryWindowTextData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTitleSubStoryWindowTextData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTutorialButtonGuideListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTutorialButtonGuideListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTutorialButtonGuideListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamTutorialListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTutorialListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTutorialListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleSaveCheckConnectWindow.WindowListSelectNavigation
// (Final, Native, Protected)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleSaveCheckConnectWindow::WindowListSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleSaveCheckConnectWindow", "WindowListSelectNavigation");

	Params::RCTitleSaveCheckConnectWindow_WindowListSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleSaveCheckConnectWindow.WindowListSelectNavigationSolo
// (Final, Native, Protected)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleSaveCheckConnectWindow::WindowListSelectNavigationSolo(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleSaveCheckConnectWindow", "WindowListSelectNavigationSolo");

	Params::RCTitleSaveCheckConnectWindow_WindowListSelectNavigationSolo Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCParamTutorialPageListData.Import
// (Native, Public, BlueprintCallable)

void URCParamTutorialPageListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamTutorialPageListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamVariableChapterData.Import
// (Native, Public, BlueprintCallable)

void URCParamVariableChapterData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamVariableChapterData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamVariableGameData.Import
// (Native, Public, BlueprintCallable)

void URCParamVariableGameData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamVariableGameData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamVariableSceneData.Import
// (Native, Public, BlueprintCallable)

void URCParamVariableSceneData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamVariableSceneData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamVehicleData.Import
// (Native, Public, BlueprintCallable)

void URCParamVehicleData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamVehicleData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamVoiceDataPathListData.Import
// (Native, Public, BlueprintCallable)

void URCParamVoiceDataPathListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamVoiceDataPathListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamVoiceSheetNameListData.Import
// (Native, Public, BlueprintCallable)

void URCParamVoiceSheetNameListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamVoiceSheetNameListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamWanderingSpiritSpeedData.Import
// (Native, Public, BlueprintCallable)

void URCParamWanderingSpiritSpeedData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamWanderingSpiritSpeedData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCParamWarldMapListData.Import
// (Native, Public, BlueprintCallable)

void URCParamWarldMapListData::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCParamWarldMapListData", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPlatformUserInterface.GetLoginStatus
// (Native, Public, BlueprintCallable)
// Parameters:
// ERCLoginStatus                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCLoginStatus IRCPlatformUserInterface::GetLoginStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlatformUserInterface", "GetLoginStatus");

	Params::RCPlatformUserInterface_GetLoginStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPlatformUserInterface.GetPlatformUserName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName IRCPlatformUserInterface::GetPlatformUserName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlatformUserInterface", "GetPlatformUserName");

	Params::RCPlatformUserInterface_GetPlatformUserName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCPlatformUserInterface.RequestGetUserPrivilege
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(ERCUserPrivileges UserPrivileges)>callbackFunc                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IRCPlatformUserInterface::RequestGetUserPrivilege(const TDelegate<void(ERCUserPrivileges UserPrivileges)>& callbackFunc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlatformUserInterface", "RequestGetUserPrivilege");

	Params::RCPlatformUserInterface_RequestGetUserPrivilege Parms{};

	Parms.callbackFunc = callbackFunc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPlatformUserReactProcess.OnFinishSignOutGenericWindow
// (Final, Native, Private)
// Parameters:
// bool                                    bResult                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCPlatformUserReactProcess::OnFinishSignOutGenericWindow(bool bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlatformUserReactProcess", "OnFinishSignOutGenericWindow");

	Params::RCPlatformUserReactProcess_OnFinishSignOutGenericWindow Parms{};

	Parms.bResult = bResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPlatformUserReactProcess.OnSignOut
// (Final, Native, Private)

void URCPlatformUserReactProcess::OnSignOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlatformUserReactProcess", "OnSignOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPlayerCameraManager.ReloadCameras
// (Final, Native, Public, BlueprintCallable)

void ARCPlayerCameraManager::ReloadCameras()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPlayerCameraManager", "ReloadCameras");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillWindow.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuSkillWindow::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillWindow", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillWindow.InitializeSkillWindow
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuSkillWindow::InitializeSkillWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillWindow", "InitializeSkillWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillWindow.IsFinishSkillWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiMenuSkillWindow::IsFinishSkillWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillWindow", "IsFinishSkillWindow");

	Params::RCUiMenuSkillWindow_IsFinishSkillWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuSkillWindow.IsGetButtonResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiMenuSkillWindow::IsGetButtonResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillWindow", "IsGetButtonResult");

	Params::RCUiMenuSkillWindow_IsGetButtonResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuSkillWindow.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuSkillWindow::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillWindow", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillWindow.SetSkillWindowText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSkillMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSkillID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuSkillWindow::SetSkillWindowText(class FName InSkillMode, class FName InSkillID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillWindow", "SetSkillWindowText");

	Params::RCUiMenuSkillWindow_SetSkillWindowText Parms{};

	Parms.InSkillMode = InSkillMode;
	Parms.InSkillID = InSkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillWindow.Wait
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuSkillWindow::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillWindow", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillWindow.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuSkillWindow::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillWindow", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPseudoAttachNiagaraComponent.OnEffectFinished
// (Final, Native, Public)
// Parameters:
// class UNiagaraComponent*                InParticleComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCPseudoAttachNiagaraComponent::OnEffectFinished(class UNiagaraComponent* InParticleComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPseudoAttachNiagaraComponent", "OnEffectFinished");

	Params::RCPseudoAttachNiagaraComponent_OnEffectFinished Parms{};

	Parms.InParticleComponent = InParticleComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCPseudoAttachParticleComponent.OnEffectFinished
// (Final, Native, Public)
// Parameters:
// class UParticleSystemComponent*         InParticleComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCPseudoAttachParticleComponent::OnEffectFinished(class UParticleSystemComponent* InParticleComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCPseudoAttachParticleComponent", "OnEffectFinished");

	Params::RCPseudoAttachParticleComponent_OnEffectFinished Parms{};

	Parms.InParticleComponent = InParticleComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRainActor.GetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ARCRainActor::GetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainActor", "GetPosition");

	Params::RCRainActor_GetPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.SCScriptDefineCommandDataAsset.Import
// (Final, Native, Public, BlueprintCallable)

void USCScriptDefineCommandDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SCScriptDefineCommandDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRainMaker.SetCascadeRainColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Map                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Param                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRainMaker::SetCascadeRainColor(class FName Map, class FName Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetCascadeRainColor");

	Params::RCRainMaker_SetCascadeRainColor Parms{};

	Parms.Map = Map;
	Parms.Param = Param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRainMaker.SetCascadeRainColorDirect
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             Map                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Param                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             aname                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          col                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   A                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRainMaker::SetCascadeRainColorDirect(class FName Map, class FName Param, class FName aname, const struct FVector& col, float A, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetCascadeRainColorDirect");

	Params::RCRainMaker_SetCascadeRainColorDirect Parms{};

	Parms.Map = Map;
	Parms.Param = Param;
	Parms.aname = aname;
	Parms.col = std::move(col);
	Parms.A = A;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRainMaker.SetHiddenOutRain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRainMaker::SetHiddenOutRain(bool isHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetHiddenOutRain");

	Params::RCRainMaker_SetHiddenOutRain Parms{};

	Parms.isHidden = isHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRainMaker.SetHiddenRain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRainMaker::SetHiddenRain(bool isHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetHiddenRain");

	Params::RCRainMaker_SetHiddenRain Parms{};

	Parms.isHidden = isHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRainMaker.SetRainColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRainMaker::SetRainColor(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetRainColor");

	Params::RCRainMaker_SetRainColor Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRainMaker.SetRainColorDirect
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             aname                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector4                         col                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRainMaker::SetRainColorDirect(class FName Name_0, class FName aname, const struct FVector4& col)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetRainColorDirect");

	Params::RCRainMaker_SetRainColorDirect Parms{};

	Parms.Name_0 = Name_0;
	Parms.aname = aname;
	Parms.col = std::move(col);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRainMaker.SetRainForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   paw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCRainMaker::SetRainForce(int32 paw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetRainForce");

	Params::RCRainMaker_SetRainForce Parms{};

	Parms.paw = paw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRainMaker.SetRainLinearColorDirect
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     col                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRainMaker::SetRainLinearColorDirect(class FName Name_0, const struct FLinearColor& col)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetRainLinearColorDirect");

	Params::RCRainMaker_SetRainLinearColorDirect Parms{};

	Parms.Name_0 = Name_0;
	Parms.col = std::move(col);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRainMaker.SetRainRotate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rot                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ARCRainMaker::SetRainRotate(const struct FRotator& Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainMaker", "SetRainRotate");

	Params::RCRainMaker_SetRainRotate Parms{};

	Parms.Rot = std::move(Rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRainSplashEffectComponent.EffectSpawn
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      InEmitterMesh                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpawnRate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRainSplashEffectComponent::EffectSpawn(struct FRCEffectComponentData& InEffectData, class FName InAttachPointName, class UStaticMesh* InEmitterMesh, float InOffset, float InSpawnRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainSplashEffectComponent", "EffectSpawn");

	Params::RCRainSplashEffectComponent_EffectSpawn Parms{};

	Parms.InEffectData = std::move(InEffectData);
	Parms.InAttachPointName = InAttachPointName;
	Parms.InEmitterMesh = InEmitterMesh;
	Parms.InOffset = InOffset;
	Parms.InSpawnRate = InSpawnRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCRainSplashEffectComponent.EffectStart
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FName                             InAttachPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      InEmitterMesh                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpawnRate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRainSplashEffectComponent::EffectStart(struct FRCEffectComponentData& InEffectData, class FName InAttachPointName, class UStaticMesh* InEmitterMesh, float InOffset, float InSpawnRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRainSplashEffectComponent", "EffectStart");

	Params::RCRainSplashEffectComponent_EffectStart Parms{};

	Parms.InEffectData = std::move(InEffectData);
	Parms.InAttachPointName = InAttachPointName;
	Parms.InEmitterMesh = InEmitterMesh;
	Parms.InOffset = InOffset;
	Parms.InSpawnRate = InSpawnRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCRealEventBFL.GetGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InChapter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScene                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCGameMode                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCGameMode URCRealEventBFL::GetGameMode(int32 InChapter, class FName InScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealEventBFL", "GetGameMode");

	Params::RCRealEventBFL_GetGameMode Parms{};

	Parms.InChapter = InChapter;
	Parms.InScene = InScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventBFL.IsBusStopEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealEventBFL::IsBusStopEnable(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealEventBFL", "IsBusStopEnable");

	Params::RCRealEventBFL_IsBusStopEnable Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventSubLevelScriptActor.GetSelectCursolIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCRealEventSubLevelScriptActor::GetSelectCursolIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventSubLevelScriptActor", "GetSelectCursolIndex");

	Params::RCRealEventSubLevelScriptActor_GetSelectCursolIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventBusstopEventSubLevelScriptActor.SetEndEvent
// (Final, Native, Public, BlueprintCallable)

void ARCRealEventBusstopEventSubLevelScriptActor::SetEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventBusstopEventSubLevelScriptActor", "SetEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealEventCheckSubLevelScriptActor.ClearEventThrough
// (Final, Native, Public, BlueprintCallable)

void ARCRealEventCheckSubLevelScriptActor::ClearEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventCheckSubLevelScriptActor", "ClearEventThrough");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealEventCheckSubLevelScriptActor.GetCheckActorName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCRealEventCheckSubLevelScriptActor::GetCheckActorName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventCheckSubLevelScriptActor", "GetCheckActorName");

	Params::RCRealEventCheckSubLevelScriptActor_GetCheckActorName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventCheckSubLevelScriptActor.IsEventThrough
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealEventCheckSubLevelScriptActor::IsEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventCheckSubLevelScriptActor", "IsEventThrough");

	Params::RCRealEventCheckSubLevelScriptActor_IsEventThrough Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventCheckSubLevelScriptActor.SetEventThrough
// (Final, Native, Public, BlueprintCallable)

void ARCRealEventCheckSubLevelScriptActor::SetEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventCheckSubLevelScriptActor", "SetEventThrough");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealEventMapMoveSubLevelScriptActor.ClearEventThrough
// (Final, Native, Public, BlueprintCallable)

void ARCRealEventMapMoveSubLevelScriptActor::ClearEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventMapMoveSubLevelScriptActor", "ClearEventThrough");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealEventMapMoveSubLevelScriptActor.GetMapMoveTriggerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCRealEventMapMoveSubLevelScriptActor::GetMapMoveTriggerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventMapMoveSubLevelScriptActor", "GetMapMoveTriggerName");

	Params::RCRealEventMapMoveSubLevelScriptActor_GetMapMoveTriggerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventMapMoveSubLevelScriptActor.IsEventThrough
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealEventMapMoveSubLevelScriptActor::IsEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventMapMoveSubLevelScriptActor", "IsEventThrough");

	Params::RCRealEventMapMoveSubLevelScriptActor_IsEventThrough Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventMapMoveSubLevelScriptActor.SetEventThrough
// (Final, Native, Public, BlueprintCallable)

void ARCRealEventMapMoveSubLevelScriptActor::SetEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventMapMoveSubLevelScriptActor", "SetEventThrough");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSequenceBFL.CancelShinigamiSequencer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::CancelShinigamiSequencer(bool* bSucceeded, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "CancelShinigamiSequencer");

	Params::RCSequenceBFL_CancelShinigamiSequencer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCSequenceBFL.CheckPlayingShinigamiSequencer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPlaying                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::CheckPlayingShinigamiSequencer(bool* bPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "CheckPlayingShinigamiSequencer");

	Params::RCSequenceBFL_CheckPlayingShinigamiSequencer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPlaying != nullptr)
		*bPlaying = Parms.bPlaying;
}


// Function RC.RCSequenceBFL.GetSequenceManager
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class URCSequenceManager*               SequenceManager                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::GetSequenceManager(class URCSequenceManager** SequenceManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "GetSequenceManager");

	Params::RCSequenceBFL_GetSequenceManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SequenceManager != nullptr)
		*SequenceManager = Parms.SequenceManager;
}


// Function RC.RCSequenceBFL.GetShinigamiSequenceActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ALevelSequenceActor*              OutLSA                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::GetShinigamiSequenceActor(class ALevelSequenceActor** OutLSA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "GetShinigamiSequenceActor");

	Params::RCSequenceBFL_GetShinigamiSequenceActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLSA != nullptr)
		*OutLSA = Parms.OutLSA;
}


// Function RC.RCSequenceBFL.InitShinigamiSequencerLS
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              OutLSA                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   LS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiTransformTypeLS     TransformType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiFollowType          FollowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiFollowTarget        FollowTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           FollowTargetActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCSequenceFollowTarget*          FollowDummyActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::InitShinigamiSequencerLS(bool* bSucceeded, class ALevelSequenceActor** OutLSA, class UObject* WorldContextObject, class ULevelSequence* LS, bool bSpawn, ERCSequenceShinigamiTransformTypeLS TransformType, class AActor* Actor, const struct FTransform& Transform, ERCSequenceShinigamiFollowType FollowType, ERCSequenceShinigamiFollowTarget FollowTarget, class AActor* FollowTargetActor, class ARCSequenceFollowTarget* FollowDummyActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "InitShinigamiSequencerLS");

	Params::RCSequenceBFL_InitShinigamiSequencerLS Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LS = LS;
	Parms.bSpawn = bSpawn;
	Parms.TransformType = TransformType;
	Parms.Actor = Actor;
	Parms.Transform = std::move(Transform);
	Parms.FollowType = FollowType;
	Parms.FollowTarget = FollowTarget;
	Parms.FollowTargetActor = FollowTargetActor;
	Parms.FollowDummyActor = FollowDummyActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	if (OutLSA != nullptr)
		*OutLSA = Parms.OutLSA;
}


// Function RC.RCSequenceBFL.InitShinigamiSequencerLSA
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              LSA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiTransformTypeLSA    TransformType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiFollowType          FollowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiFollowTarget        FollowTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           FollowTargetActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCSequenceFollowTarget*          FollowDummyActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::InitShinigamiSequencerLSA(bool* bSucceeded, class UObject* WorldContextObject, class ALevelSequenceActor* LSA, bool bSpawn, ERCSequenceShinigamiTransformTypeLSA TransformType, class AActor* Actor, const struct FTransform& Transform, ERCSequenceShinigamiFollowType FollowType, ERCSequenceShinigamiFollowTarget FollowTarget, class AActor* FollowTargetActor, class ARCSequenceFollowTarget* FollowDummyActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "InitShinigamiSequencerLSA");

	Params::RCSequenceBFL_InitShinigamiSequencerLSA Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LSA = LSA;
	Parms.bSpawn = bSpawn;
	Parms.TransformType = TransformType;
	Parms.Actor = Actor;
	Parms.Transform = std::move(Transform);
	Parms.FollowType = FollowType;
	Parms.FollowTarget = FollowTarget;
	Parms.FollowTargetActor = FollowTargetActor;
	Parms.FollowDummyActor = FollowDummyActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCSequenceBFL.PlayShinigamiSequencer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              LSA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::PlayShinigamiSequencer(bool* bSucceeded, class ALevelSequenceActor* LSA, bool bSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "PlayShinigamiSequencer");

	Params::RCSequenceBFL_PlayShinigamiSequencer Parms{};

	Parms.LSA = LSA;
	Parms.bSpawn = bSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCSequenceBFL.SetLSATransform
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              LSA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void URCSequenceBFL::SetLSATransform(bool* bSucceeded, class ALevelSequenceActor* LSA, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "SetLSATransform");

	Params::RCSequenceBFL_SetLSATransform Parms{};

	Parms.LSA = LSA;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCSequenceBFL.SetLSATransformActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              LSA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TransformActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::SetLSATransformActor(bool* bSucceeded, class ALevelSequenceActor* LSA, class AActor* TransformActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "SetLSATransformActor");

	Params::RCSequenceBFL_SetLSATransformActor Parms{};

	Parms.LSA = LSA;
	Parms.TransformActor = TransformActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCSequenceBFL.StartShinigamiSequencerLS
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              OutLSA                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   LS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiTransformTypeLS     TransformType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiFollowType          FollowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiFollowTarget        FollowTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           FollowTargetActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::StartShinigamiSequencerLS(bool* bSucceeded, class ALevelSequenceActor** OutLSA, class UObject* WorldContextObject, class ULevelSequence* LS, bool bSpawn, ERCSequenceShinigamiTransformTypeLS TransformType, class AActor* Actor, const struct FTransform& Transform, ERCSequenceShinigamiFollowType FollowType, ERCSequenceShinigamiFollowTarget FollowTarget, class AActor* FollowTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "StartShinigamiSequencerLS");

	Params::RCSequenceBFL_StartShinigamiSequencerLS Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LS = LS;
	Parms.bSpawn = bSpawn;
	Parms.TransformType = TransformType;
	Parms.Actor = Actor;
	Parms.Transform = std::move(Transform);
	Parms.FollowType = FollowType;
	Parms.FollowTarget = FollowTarget;
	Parms.FollowTargetActor = FollowTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	if (OutLSA != nullptr)
		*OutLSA = Parms.OutLSA;
}


// Function RC.RCSequenceBFL.StartShinigamiSequencerLSA
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              LSA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiTransformTypeLSA    TransformType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiFollowType          FollowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSequenceShinigamiFollowTarget        FollowTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           FollowTargetActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::StartShinigamiSequencerLSA(bool* bSucceeded, class UObject* WorldContextObject, class ALevelSequenceActor* LSA, bool bSpawn, ERCSequenceShinigamiTransformTypeLSA TransformType, class AActor* Actor, const struct FTransform& Transform, ERCSequenceShinigamiFollowType FollowType, ERCSequenceShinigamiFollowTarget FollowTarget, class AActor* FollowTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "StartShinigamiSequencerLSA");

	Params::RCSequenceBFL_StartShinigamiSequencerLSA Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LSA = LSA;
	Parms.bSpawn = bSpawn;
	Parms.TransformType = TransformType;
	Parms.Actor = Actor;
	Parms.Transform = std::move(Transform);
	Parms.FollowType = FollowType;
	Parms.FollowTarget = FollowTarget;
	Parms.FollowTargetActor = FollowTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCSequenceBFL.StartShinigamiSequencerLSA2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCShinigamiLevelSequenceActor*   ShinigamiLSA                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::StartShinigamiSequencerLSA2(bool* bSucceeded, class UObject* WorldContextObject, class ARCShinigamiLevelSequenceActor* ShinigamiLSA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "StartShinigamiSequencerLSA2");

	Params::RCSequenceBFL_StartShinigamiSequencerLSA2 Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ShinigamiLSA = ShinigamiLSA;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCSequenceBFL.StopShinigamiSequencer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              LSA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSequenceBFL::StopShinigamiSequencer(bool* bSucceeded, class ALevelSequenceActor* LSA, bool bSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSequenceBFL", "StopShinigamiSequencer");

	Params::RCSequenceBFL_StopShinigamiSequencer Parms{};

	Parms.LSA = LSA;
	Parms.bSpawn = bSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCRealEventTalkSubLevelScriptActor.ClearEventThrough
// (Final, Native, Public, BlueprintCallable)

void ARCRealEventTalkSubLevelScriptActor::ClearEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventTalkSubLevelScriptActor", "ClearEventThrough");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealEventTalkSubLevelScriptActor.GetTalkCharacterName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ARCRealEventTalkSubLevelScriptActor::GetTalkCharacterName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventTalkSubLevelScriptActor", "GetTalkCharacterName");

	Params::RCRealEventTalkSubLevelScriptActor_GetTalkCharacterName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventTalkSubLevelScriptActor.IsEventThrough
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCRealEventTalkSubLevelScriptActor::IsEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventTalkSubLevelScriptActor", "IsEventThrough");

	Params::RCRealEventTalkSubLevelScriptActor_IsEventThrough Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealEventTalkSubLevelScriptActor.SetEventThrough
// (Final, Native, Public, BlueprintCallable)

void ARCRealEventTalkSubLevelScriptActor::SetEventThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCRealEventTalkSubLevelScriptActor", "SetEventThrough");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealHUDBFL.CheckSoundNovelFinished
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bFinished                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealHUDBFL::CheckSoundNovelFinished(bool* bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "CheckSoundNovelFinished");

	Params::RCRealHUDBFL_CheckSoundNovelFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFinished != nullptr)
		*bFinished = Parms.bFinished;
}


// Function RC.RCRealHUDBFL.CloseMessageWindow
// (Final, Native, Static, Public, BlueprintCallable)

void URCRealHUDBFL::CloseMessageWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "CloseMessageWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealHUDBFL.EndFreeMove
// (Final, Native, Static, Public, BlueprintCallable)

void URCRealHUDBFL::EndFreeMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "EndFreeMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealHUDBFL.GetReHUD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCReHUD*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCReHUD* URCRealHUDBFL::GetReHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "GetReHUD");

	Params::RCRealHUDBFL_GetReHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealHUDBFL.GetSelectResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCRealHUDBFL::GetSelectResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "GetSelectResult");

	Params::RCRealHUDBFL_GetSelectResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealHUDBFL.IsCloseMessageWindowSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealHUDBFL::IsCloseMessageWindowSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "IsCloseMessageWindowSync");

	Params::RCRealHUDBFL_IsCloseMessageWindowSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealHUDBFL.IsEndMessageWindowSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealHUDBFL::IsEndMessageWindowSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "IsEndMessageWindowSync");

	Params::RCRealHUDBFL_IsEndMessageWindowSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealHUDBFL.IsOpenMessageWindowSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealHUDBFL::IsOpenMessageWindowSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "IsOpenMessageWindowSync");

	Params::RCRealHUDBFL_IsOpenMessageWindowSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealHUDBFL.IsTalkStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealHUDBFL::IsTalkStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "IsTalkStart");

	Params::RCRealHUDBFL_IsTalkStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealHUDBFL.OpenMessageWindow2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCAdvHUDTalkWindowType                 WindowType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealHUDBFL::OpenMessageWindow2(ERCAdvHUDTalkWindowType WindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "OpenMessageWindow2");

	Params::RCRealHUDBFL_OpenMessageWindow2 Parms{};

	Parms.WindowType = WindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealHUDBFL.SetSelectSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   SelectNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSelectTextID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCheckMark                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealHUDBFL::SetSelectSetting(int32 SelectNum, class FName InSelectTextID, bool bCheckMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "SetSelectSetting");

	Params::RCRealHUDBFL_SetSelectSetting Parms{};

	Parms.SelectNum = SelectNum;
	Parms.InSelectTextID = InSelectTextID;
	Parms.bCheckMark = bCheckMark;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealHUDBFL.SoundNovelShowBackgroundFade
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealHUDBFL::SoundNovelShowBackgroundFade(bool* bSucceeded, bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "SoundNovelShowBackgroundFade");

	Params::RCRealHUDBFL_SoundNovelShowBackgroundFade Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCRealHUDBFL.SoundNovelStart
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       SoundNovelDataTable                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowBackgroundFade                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealHUDBFL::SoundNovelStart(bool* bSucceeded, class UDataTable* SoundNovelDataTable, bool bShowBackgroundFade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "SoundNovelStart");

	Params::RCRealHUDBFL_SoundNovelStart Parms{};

	Parms.SoundNovelDataTable = SoundNovelDataTable;
	Parms.bShowBackgroundFade = bShowBackgroundFade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;
}


// Function RC.RCRealHUDBFL.StartFreeMove
// (Final, Native, Static, Public, BlueprintCallable)

void URCRealHUDBFL::StartFreeMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "StartFreeMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealHUDBFL.StartMessage2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharacterFaceID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterFacialID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMassageTextID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPartVoiceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealHUDBFL::StartMessage2(int32 InCharacterFaceID, int32 InCharacterFacialID, class FName InMassageTextID, class FName InPartVoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "StartMessage2");

	Params::RCRealHUDBFL_StartMessage2 Parms{};

	Parms.InCharacterFaceID = InCharacterFaceID;
	Parms.InCharacterFacialID = InCharacterFacialID;
	Parms.InMassageTextID = InMassageTextID;
	Parms.InPartVoiceID = InPartVoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealHUDBFL.StartSelect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   SelectMax                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             QuestionTextID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealHUDBFL::StartSelect(int32 SelectMax, class FName QuestionTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealHUDBFL", "StartSelect");

	Params::RCRealHUDBFL_StartSelect Parms{};

	Parms.SelectMax = SelectMax;
	Parms.QuestionTextID = QuestionTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealLevelScriptActorBFL.IsEndBusstopEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealLevelScriptActorBFL::IsEndBusstopEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealLevelScriptActorBFL", "IsEndBusstopEvent");

	Params::RCRealLevelScriptActorBFL_IsEndBusstopEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealLevelScriptActorBFL.IsSubLevelLoadingWait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealLevelScriptActorBFL::IsSubLevelLoadingWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealLevelScriptActorBFL", "IsSubLevelLoadingWait");

	Params::RCRealLevelScriptActorBFL_IsSubLevelLoadingWait Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealLevelScriptActorBFL.IsSubLevelLoadSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealLevelScriptActorBFL::IsSubLevelLoadSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealLevelScriptActorBFL", "IsSubLevelLoadSync");

	Params::RCRealLevelScriptActorBFL_IsSubLevelLoadSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealLevelScriptActorBFL.OnBusIn
// (Final, Native, Static, Public, BlueprintCallable)

void URCRealLevelScriptActorBFL::OnBusIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealLevelScriptActorBFL", "OnBusIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealLevelScriptActorBFL.OnBusOut
// (Final, Native, Static, Public, BlueprintCallable)

void URCRealLevelScriptActorBFL::OnBusOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealLevelScriptActorBFL", "OnBusOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealLevelScriptActorBFL.OnNextLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCGameMode                             InNextGameMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealLevelScriptActorBFL::OnNextLevel(ERCGameMode InNextGameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealLevelScriptActorBFL", "OnNextLevel");

	Params::RCRealLevelScriptActorBFL_OnNextLevel Parms{};

	Parms.InNextGameMode = InNextGameMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealLevelScriptActorBFL.SetSubLevelLoadingWait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealLevelScriptActorBFL::SetSubLevelLoadingWait(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealLevelScriptActorBFL", "SetSubLevelLoadingWait");

	Params::RCRealLevelScriptActorBFL_SetSubLevelLoadingWait Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealLevelScriptActorBFL.SetSubLevelLoadSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealLevelScriptActorBFL::SetSubLevelLoadSync(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealLevelScriptActorBFL", "SetSubLevelLoadSync");

	Params::RCRealLevelScriptActorBFL_SetSubLevelLoadSync Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleLanguageWindow.LanguageWindowListSelectNavigation
// (Final, Native, Protected)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleLanguageWindow::LanguageWindowListSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleLanguageWindow", "LanguageWindowListSelectNavigation");

	Params::RCTitleLanguageWindow_LanguageWindowListSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleLanguageWindow.OnDecide
// (Final, Native, Private)

void URCTitleLanguageWindow::OnDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleLanguageWindow", "OnDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerControllerBFL.IsMouseOverEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealPlayerControllerBFL::IsMouseOverEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealPlayerControllerBFL", "IsMouseOverEnable");

	Params::RCRealPlayerControllerBFL_IsMouseOverEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerControllerBFL.IsSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCRealPlayerControllerBFL::IsSkipEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealPlayerControllerBFL", "IsSkipEnable");

	Params::RCRealPlayerControllerBFL_IsSkipEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCRealPlayerControllerBFL.SetMouseOverEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMouseOverEnable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealPlayerControllerBFL::SetMouseOverEnable(bool bInMouseOverEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealPlayerControllerBFL", "SetMouseOverEnable");

	Params::RCRealPlayerControllerBFL_SetMouseOverEnable Parms{};

	Parms.bInMouseOverEnable = bInMouseOverEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCRealPlayerControllerBFL.SetSkipEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSkipEnable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCRealPlayerControllerBFL::SetSkipEnable(bool bInSkipEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCRealPlayerControllerBFL", "SetSkipEnable");

	Params::RCRealPlayerControllerBFL_SetSkipEnable Parms{};

	Parms.bInSkipEnable = bInSkipEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetAccessable.PushButton
// (Native, Public, BlueprintCallable)

void URCUiWidgetAccessable::PushButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetAccessable", "PushButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetAccessable.ShowButton
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsShowable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiWidgetAccessable::ShowButton(bool bInIsShowable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetAccessable", "ShowButton");

	Params::RCUiWidgetAccessable_ShowButton Parms{};

	Parms.bInIsShowable = bInIsShowable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetAccessable.WaitOutside
// (Native, Public, BlueprintCallable)

void URCUiWidgetAccessable::WaitOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetAccessable", "WaitOutside");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloon.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloon::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloon", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloon.Enlarge
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloon::Enlarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloon", "Enlarge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloon.InitializeBalloon
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloon::InitializeBalloon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloon", "InitializeBalloon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloon.OpenLarge
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloon::OpenLarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloon", "OpenLarge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloon.OpenSmall
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloon::OpenSmall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloon", "OpenSmall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloon.Reduce
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloon::Reduce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloon", "Reduce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloon.SetBalloonData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESCBaloonFrame                          InFrame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCBaloonType                           InIcon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiBalloon::SetBalloonData(ESCBaloonFrame InFrame, ESCBaloonType InIcon, const class FString& inString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloon", "SetBalloonData");

	Params::RCReUiBalloon_SetBalloonData Parms{};

	Parms.InFrame = InFrame;
	Parms.InIcon = InIcon;
	Parms.inString = std::move(inString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidget3D.WaitOutside
// (Native, Public, BlueprintCallable)

void URCUiWidget3D::WaitOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidget3D", "WaitOutside");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonFar.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloonFar::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonFar", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonFar.GetFarBalloonStatusInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCReUiBalloonFar::GetFarBalloonStatusInt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonFar", "GetFarBalloonStatusInt");

	Params::RCReUiBalloonFar_GetFarBalloonStatusInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiBalloonFar.InitializeBalloon
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloonFar::InitializeBalloon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonFar", "InitializeBalloon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonFar.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloonFar::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonFar", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonFar.SetBalloonData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESCBaloonFrame                          InFrame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCBaloonType                           InIcon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiBalloonFar::SetBalloonData(ESCBaloonFrame InFrame, ESCBaloonType InIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonFar", "SetBalloonData");

	Params::RCReUiBalloonFar_SetBalloonData Parms{};

	Parms.InFrame = InFrame;
	Parms.InIcon = InIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonNear.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloonNear::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonNear", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonNear.Enlarge
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloonNear::Enlarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonNear", "Enlarge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonNear.GetBalloonStatusNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCReUiBalloonNear::GetBalloonStatusNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonNear", "GetBalloonStatusNum");

	Params::RCReUiBalloonNear_GetBalloonStatusNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiBalloonNear.InitializeBalloon
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloonNear::InitializeBalloon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonNear", "InitializeBalloon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonNear.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloonNear::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonNear", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonNear.Reduce
// (Final, Native, Public, BlueprintCallable)

void URCReUiBalloonNear::Reduce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonNear", "Reduce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonNear.SetBalloonData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESCBaloonFrame                          InFrame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiBalloonNear::SetBalloonData(ESCBaloonFrame InFrame, const class FString& inString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonNear", "SetBalloonData");

	Params::RCReUiBalloonNear_SetBalloonData Parms{};

	Parms.InFrame = InFrame;
	Parms.inString = std::move(inString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiBalloonNear.SetShakeData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWidthX                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWidthY                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InInterval                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiBalloonNear::SetShakeData(float InWidthX, float InWidthY, float InInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiBalloonNear", "SetShakeData");

	Params::RCReUiBalloonNear_SetShakeData Parms{};

	Parms.InWidthX = InWidthX;
	Parms.InWidthY = InWidthY;
	Parms.InInterval = InInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleProtManager.OnClockButton
// (Final, Native, Private)

void URCTitleProtManager::OnClockButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleProtManager", "OnClockButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleProtManager.OnClockTowerButton
// (Final, Native, Private)

void URCTitleProtManager::OnClockTowerButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleProtManager", "OnClockTowerButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleProtManager.OnGinmaButton
// (Final, Native, Private)

void URCTitleProtManager::OnGinmaButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleProtManager", "OnGinmaButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleProtManager.OnKamasakiButton
// (Final, Native, Private)

void URCTitleProtManager::OnKamasakiButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleProtManager", "OnKamasakiButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaButtonGuide.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaButtonGuide::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaButtonGuide", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaButtonGuide.InitializeChousaButtonGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsResearch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaButtonGuide::InitializeChousaButtonGuide(bool bInIsResearch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaButtonGuide", "InitializeChousaButtonGuide");

	Params::RCReUiChousaButtonGuide_InitializeChousaButtonGuide Parms{};

	Parms.bInIsResearch = bInIsResearch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaButtonGuide.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaButtonGuide::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaButtonGuide", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaButtonGuide.SetGuideParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsResearch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaButtonGuide::SetGuideParts(bool bInIsResearch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaButtonGuide", "SetGuideParts");

	Params::RCReUiChousaButtonGuide_SetGuideParts Parms{};

	Parms.bInIsResearch = bInIsResearch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaButtonGuide.Wait
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaButtonGuide::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaButtonGuide", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaButtonGuide.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaButtonGuide::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaButtonGuide", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCharacterSelect.CharacterSelectButtonCustomNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuCharacterSelect::CharacterSelectButtonCustomNavigation(EUINavigation InNavigation, class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCharacterSelect", "CharacterSelectButtonCustomNavigation");

	Params::RCUiMenuCharacterSelect_CharacterSelectButtonCustomNavigation Parms{};

	Parms.InNavigation = InNavigation;
	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCharacterSelect.StartPush
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuCharacterSelect::StartPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCharacterSelect", "StartPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaEndButtonGuide.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaEndButtonGuide::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaEndButtonGuide", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaEndButtonGuide.InitializeChousaEndButtonGuide
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaEndButtonGuide::InitializeChousaEndButtonGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaEndButtonGuide", "InitializeChousaEndButtonGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaEndButtonGuide.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaEndButtonGuide::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaEndButtonGuide", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaGetKagi.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaGetKagi::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaGetKagi", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaGetKagi.InitializeChousaGetKagi
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaGetKagi::InitializeChousaGetKagi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaGetKagi", "InitializeChousaGetKagi");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaGetKagi.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaGetKagi::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaGetKagi", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaGetKagi.SetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKagiImage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InKagiName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InKagiCaption                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaGetKagi::SetData(class FName InKagiImage, const class FString& InKagiName, const class FString& InKagiCaption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaGetKagi", "SetData");

	Params::RCReUiChousaGetKagi_SetData Parms{};

	Parms.InKagiImage = InKagiImage;
	Parms.InKagiName = std::move(InKagiName);
	Parms.InKagiCaption = std::move(InKagiCaption);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaGetKagi.SetKagiData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKagiID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaGetKagi::SetKagiData(class FName InKagiID, int32 InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaGetKagi", "SetKagiData");

	Params::RCReUiChousaGetKagi_SetKagiData Parms{};

	Parms.InKagiID = InKagiID;
	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPlace.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPlace::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPlace", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPlace.InitializeChousaPlace
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPlace::InitializeChousaPlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPlace", "InitializeChousaPlace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPlace.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAreaNameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaPlace::Open(class FName InMapID, class FName InAreaNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPlace", "Open");

	Params::RCReUiChousaPlace_Open Parms{};

	Parms.InMapID = InMapID;
	Parms.InAreaNameID = InAreaNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPlace.SetChousaPlace
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAreaNameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCReUiChousaPlace::SetChousaPlace(class FName InMapID, class FName InAreaNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPlace", "SetChousaPlace");

	Params::RCReUiChousaPlace_SetChousaPlace Parms{};

	Parms.InMapID = InMapID;
	Parms.InAreaNameID = InAreaNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiChousaPointer.Decided
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPointer::Decided()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "Decided");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.FinishCursor
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPointer::FinishCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "FinishCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.FinishDefault
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPointer::FinishDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "FinishDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.FinishOverlap
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPointer::FinishOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "FinishOverlap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.GetCursorDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCReUiChousaPointer::GetCursorDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "GetCursorDirection");

	Params::RCReUiChousaPointer_GetCursorDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiChousaPointer.GetMousePos
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCReUiChousaPointer::GetMousePos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "GetMousePos");

	Params::RCReUiChousaPointer_GetMousePos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiChousaPointer.GetWidgetRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCReUiChousaPointer::GetWidgetRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "GetWidgetRadius");

	Params::RCReUiChousaPointer_GetWidgetRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiChousaPointer.InitializeChousaPointer
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPointer::InitializeChousaPointer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "InitializeChousaPointer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.OffMark
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPointer::OffMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "OffMark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.OnMark
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPointer::OnMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "OnMark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.SetQuestionFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInQuestion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaPointer::SetQuestionFlag(bool bInQuestion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "SetQuestionFlag");

	Params::RCReUiChousaPointer_SetQuestionFlag Parms{};

	Parms.bInQuestion = bInQuestion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.SetTargetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        In2DPosition                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaPointer::SetTargetPosition(const struct FVector2D& In2DPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "SetTargetPosition");

	Params::RCReUiChousaPointer_SetTargetPosition Parms{};

	Parms.In2DPosition = std::move(In2DPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.SetTracingPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        In2DPosition                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaPointer::SetTracingPosition(const struct FVector2D& In2DPosition, float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "SetTracingPosition");

	Params::RCReUiChousaPointer_SetTracingPosition Parms{};

	Parms.In2DPosition = std::move(In2DPosition);
	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaPointer.StartDefault
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaPointer::StartDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaPointer", "StartDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaSpotSelectTelop.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaSpotSelectTelop::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaSpotSelectTelop", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaSpotSelectTelop.InitializeSpotSelectTelop
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaSpotSelectTelop::InitializeSpotSelectTelop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaSpotSelectTelop", "InitializeSpotSelectTelop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaSpotSelectTelop.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaSpotSelectTelop::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaSpotSelectTelop", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTarget.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTarget::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTarget", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTarget.FinishSelect
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTarget::FinishSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTarget", "FinishSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTarget.GetWidgetRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCReUiChousaTarget::GetWidgetRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTarget", "GetWidgetRadius");

	Params::RCReUiChousaTarget_GetWidgetRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiChousaTarget.InitializeChousaTarget
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTarget::InitializeChousaTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTarget", "InitializeChousaTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTarget.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsInvestigated                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaTarget::Open(bool bInIsInvestigated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTarget", "Open");

	Params::RCReUiChousaTarget_Open Parms{};

	Parms.bInIsInvestigated = bInIsInvestigated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTarget.StartSelect
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTarget::StartSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTarget", "StartSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.ApplyTargetNamePosition
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTargetName::ApplyTargetNamePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "ApplyTargetNamePosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.GetTargetNameSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D URCReUiChousaTargetName::GetTargetNameSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "GetTargetNameSize");

	Params::RCReUiChousaTargetName_GetTargetNameSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiChousaTargetName.InitializeChousaTargetName
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTargetName::InitializeChousaTargetName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "InitializeChousaTargetName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.InitializeChousaTargetName2
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InTargetNameDefaultPosition                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTargetNameMoveSpeed                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaTargetName::InitializeChousaTargetName2(const struct FVector2D& InTargetNameDefaultPosition, float InTargetNameMoveSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "InitializeChousaTargetName2");

	Params::RCReUiChousaTargetName_InitializeChousaTargetName2 Parms{};

	Parms.InTargetNameDefaultPosition = std::move(InTargetNameDefaultPosition);
	Parms.InTargetNameMoveSpeed = InTargetNameMoveSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.SetTargetName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InTargetName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaTargetName::SetTargetName(const class FString& InTargetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "SetTargetName");

	Params::RCReUiChousaTargetName_SetTargetName Parms{};

	Parms.InTargetName = std::move(InTargetName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.SetTargetNameDefaultPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InTargetNameDefaultPosition                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaTargetName::SetTargetNameDefaultPosition(const struct FVector2D& InTargetNameDefaultPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "SetTargetNameDefaultPosition");

	Params::RCReUiChousaTargetName_SetTargetNameDefaultPosition Parms{};

	Parms.InTargetNameDefaultPosition = std::move(InTargetNameDefaultPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.SetTargetNameMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTargetNameMoveSpeed                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaTargetName::SetTargetNameMoveSpeed(float InTargetNameMoveSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "SetTargetNameMoveSpeed");

	Params::RCReUiChousaTargetName_SetTargetNameMoveSpeed Parms{};

	Parms.InTargetNameMoveSpeed = InTargetNameMoveSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.SetTargetNamePosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InTargetNamePosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiChousaTargetName::SetTargetNamePosition(const struct FVector2D& InTargetNamePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "SetTargetNamePosition");

	Params::RCReUiChousaTargetName_SetTargetNamePosition Parms{};

	Parms.InTargetNamePosition = std::move(InTargetNamePosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.SetTargetNamePositionDefault
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTargetName::SetTargetNamePositionDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "SetTargetNamePositionDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.TargetOff
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTargetName::TargetOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "TargetOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTargetName.TargetOn
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTargetName::TargetOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTargetName", "TargetOn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTelop.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTelop::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTelop", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTelop.InitializeChousaTelop
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTelop::InitializeChousaTelop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTelop", "InitializeChousaTelop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTelop.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTelop::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTelop", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTelopSpotJudge.OpenCorrect
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTelopSpotJudge::OpenCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTelopSpotJudge", "OpenCorrect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiChousaTelopSpotJudge.OpenMistake
// (Final, Native, Public, BlueprintCallable)

void URCReUiChousaTelopSpotJudge::OpenMistake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiChousaTelopSpotJudge", "OpenMistake");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiLocation.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiLocation::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiLocation", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiLocation.InitializeLocation
// (Final, Native, Public, BlueprintCallable)

void URCReUiLocation::InitializeLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiLocation", "InitializeLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiLocation.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiLocation::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiLocation", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiLocation.SetLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAreaNameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCReUiLocation::SetLocation(class FName InMapID, class FName InAreaNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiLocation", "SetLocation");

	Params::RCReUiLocation_SetLocation Parms{};

	Parms.InMapID = InMapID;
	Parms.InAreaNameID = InAreaNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiLocation.Wait
// (Final, Native, Public, BlueprintCallable)

void URCReUiLocation::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiLocation", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiLocation.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCReUiLocation::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiLocation", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageCursor.OnPushStarted
// (Event, Public, BlueprintEvent)

void URCReUiMessageCursor::OnPushStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageCursor", "OnPushStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RC.RCReUiMessageFace.LoadAheadRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharaFaceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFacialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageFace::LoadAheadRequest(int32 InCharaFaceID, int32 InFacialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageFace", "LoadAheadRequest");

	Params::RCReUiMessageFace_LoadAheadRequest Parms{};

	Parms.InCharaFaceID = InCharaFaceID;
	Parms.InFacialID = InFacialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageFace.SetFace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharaFaceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFacialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPlayEffect                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageFace::SetFace(int32 InCharaFaceID, int32 InFacialID, bool bInPlayEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageFace", "SetFace");

	Params::RCReUiMessageFace_SetFace Parms{};

	Parms.InCharaFaceID = InCharaFaceID;
	Parms.InFacialID = InFacialID;
	Parms.bInPlayEffect = bInPlayEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiButtonGuide.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiButtonGuide::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiButtonGuide", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiButtonGuide.InitializeButtonGuide
// (Final, Native, Public, BlueprintCallable)

void URCUiButtonGuide::InitializeButtonGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiButtonGuide", "InitializeButtonGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiButtonGuide.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InModeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowSingleLine                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiButtonGuide::Open(class FName InModeID, bool bInShowSingleLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiButtonGuide", "Open");

	Params::RCUiButtonGuide_Open Parms{};

	Parms.InModeID = InModeID;
	Parms.bInShowSingleLine = bInShowSingleLine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiButtonGuide.SetGuideText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InModeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowSingleLine                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiButtonGuide::SetGuideText(class FName InModeID, bool bInShowSingleLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiButtonGuide", "SetGuideText");

	Params::RCUiButtonGuide_SetGuideText Parms{};

	Parms.InModeID = InModeID;
	Parms.bInShowSingleLine = bInShowSingleLine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiButtonGuide.SetInputFromButtonGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiButtonGuide::SetInputFromButtonGuide(ERCInputKeyType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiButtonGuide", "SetInputFromButtonGuide");

	Params::RCUiButtonGuide_SetInputFromButtonGuide Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiButtonGuide.StartRun
// (Final, Native, Public, BlueprintCallable)

void URCUiButtonGuide::StartRun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiButtonGuide", "StartRun");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageNameplate.LoadAheadRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharaNameID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNameSubID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageNameplate::LoadAheadRequest(int32 InCharaNameID, int32 InNameSubID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageNameplate", "LoadAheadRequest");

	Params::RCReUiMessageNameplate_LoadAheadRequest Parms{};

	Parms.InCharaNameID = InCharaNameID;
	Parms.InNameSubID = InNameSubID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageNameplate.SetNameplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharaNameID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNameSubID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageNameplate::SetNameplate(int32 InCharaNameID, int32 InNameSubID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageNameplate", "SetNameplate");

	Params::RCReUiMessageNameplate_SetNameplate Parms{};

	Parms.InCharaNameID = InCharaNameID;
	Parms.InNameSubID = InNameSubID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.ClearMessage
// (Final, Native, Public, BlueprintCallable)

void URCReUiMessageWindow::ClearMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "ClearMessage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiMessageWindow::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.GetMessStatusInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCReUiMessageWindow::GetMessStatusInt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "GetMessStatusInt");

	Params::RCReUiMessageWindow_GetMessStatusInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiMessageWindow.GetSkipTyping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCReUiMessageWindow::GetSkipTyping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "GetSkipTyping");

	Params::RCReUiMessageWindow_GetSkipTyping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiMessageWindow.InitializeMessageWindow
// (Final, Native, Public, BlueprintCallable)

void URCReUiMessageWindow::InitializeMessageWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "InitializeMessageWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharaNameID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNameSubID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharaFaceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFacialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageWindow::Open(int32 InCharaNameID, int32 InNameSubID, int32 InCharaFaceID, int32 InFacialID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "Open");

	Params::RCReUiMessageWindow_Open Parms{};

	Parms.InCharaNameID = InCharaNameID;
	Parms.InNameSubID = InNameSubID;
	Parms.InCharaFaceID = InCharaFaceID;
	Parms.InFacialID = InFacialID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.SetForceAutoFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceAuto                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowAutoIcon                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageWindow::SetForceAutoFlag(bool bForceAuto, bool bShowAutoIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "SetForceAutoFlag");

	Params::RCReUiMessageWindow_SetForceAutoFlag Parms{};

	Parms.bForceAuto = bForceAuto;
	Parms.bShowAutoIcon = bShowAutoIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.SetForceTextSpeedSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsForceTextSpeed                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InForceTextSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageWindow::SetForceTextSpeedSettings(bool bInIsForceTextSpeed, int32 InForceTextSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "SetForceTextSpeedSettings");

	Params::RCReUiMessageWindow_SetForceTextSpeedSettings Parms{};

	Parms.bInIsForceTextSpeed = bInIsForceTextSpeed;
	Parms.InForceTextSpeed = InForceTextSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.SetMessageSpeed
// (Final, Native, Public, BlueprintCallable)

void URCReUiMessageWindow::SetMessageSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "SetMessageSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.SetShakeData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWidthX                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWidthY                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InInterval                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageWindow::SetShakeData(float InWidthX, float InWidthY, float InInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "SetShakeData");

	Params::RCReUiMessageWindow_SetShakeData Parms{};

	Parms.InWidthX = InWidthX;
	Parms.InWidthY = InWidthY;
	Parms.InInterval = InInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharaNameID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNameSubID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharaFaceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFacialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageWindow::SetText(int32 InCharaNameID, int32 InNameSubID, int32 InCharaFaceID, int32 InFacialID, const class FString& inString, float InDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "SetText");

	Params::RCReUiMessageWindow_SetText Parms{};

	Parms.InCharaNameID = InCharaNameID;
	Parms.InNameSubID = InNameSubID;
	Parms.InCharaFaceID = InCharaFaceID;
	Parms.InFacialID = InFacialID;
	Parms.inString = std::move(inString);
	Parms.InDelay = InDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMessageWindow.SetTextData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCharaNameID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNameSubID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharaFaceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFacialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSpeakerID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMessageWindow::SetTextData(int32 InCharaNameID, int32 InNameSubID, int32 InCharaFaceID, int32 InFacialID, class FName InSpeakerID, const class FString& inString, float InDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMessageWindow", "SetTextData");

	Params::RCReUiMessageWindow_SetTextData Parms{};

	Parms.InCharaNameID = InCharaNameID;
	Parms.InNameSubID = InNameSubID;
	Parms.InCharaFaceID = InCharaFaceID;
	Parms.InFacialID = InFacialID;
	Parms.InSpeakerID = InSpeakerID;
	Parms.inString = std::move(inString);
	Parms.InDelay = InDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMiniMap.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiMiniMap::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMiniMap.CreateIcon
// (Final, Native, Protected, BlueprintCallable)

void URCReUiMiniMap::CreateIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "CreateIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMiniMap.InitializeMiniMap
// (Final, Native, Public, BlueprintCallable)

void URCReUiMiniMap::InitializeMiniMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "InitializeMiniMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMiniMap.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiMiniMap::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMiniMap.SetLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAreaNameID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCReUiMiniMap::SetLocation(class FName InMapID, class FName InAreaNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "SetLocation");

	Params::RCReUiMiniMap_SetLocation Parms{};

	Parms.InMapID = InMapID;
	Parms.InAreaNameID = InAreaNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCReUiMiniMap.SetMapMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsFixNorth                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMiniMap::SetMapMode(bool bInIsFixNorth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "SetMapMode");

	Params::RCReUiMiniMap_SetMapMode Parms{};

	Parms.bInIsFixNorth = bInIsFixNorth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMiniMap.SetMapScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiMiniMap::SetMapScale(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "SetMapScale");

	Params::RCReUiMiniMap_SetMapScale Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMiniMap.Wait
// (Final, Native, Public, BlueprintCallable)

void URCReUiMiniMap::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiMiniMap.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCReUiMiniMap::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiMiniMap", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInText.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiCutInText::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInText", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInText.InitializeCutIn
// (Final, Native, Public, BlueprintCallable)

void URCUiCutInText::InitializeCutIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInText", "InitializeCutIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInText.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiCutInText::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInText", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutInText.SetCutInText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiCutInText::SetCutInText(class FName InCutInID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutInText", "SetCutInText");

	Params::RCUiCutInText_SetCutInText Parms{};

	Parms.InCutInID = InCutInID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiSelectWindow.InitializeSelectBar
// (Final, Native, Public, BlueprintCallable)

void URCReUiSelectWindow::InitializeSelectBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiSelectWindow", "InitializeSelectBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiSelectWindow.NativeTick
// (Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiSelectWindow::NativeTick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiSelectWindow", "NativeTick");

	Params::RCReUiSelectWindow_NativeTick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiSelectWindow.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SelectNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiSelectWindow::Open(int32 SelectNum, class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiSelectWindow", "Open");

	Params::RCReUiSelectWindow_Open Parms{};

	Parms.SelectNum = SelectNum;
	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiSelectWindow.SelectWindowCustomNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiSelectWindow::SelectWindowCustomNavigation(EUINavigation InNavigation, class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiSelectWindow", "SelectWindowCustomNavigation");

	Params::RCReUiSelectWindow_SelectWindowCustomNavigation Parms{};

	Parms.InNavigation = InNavigation;
	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiSelectWindow.StartPush
// (Final, Native, Protected)

void URCReUiSelectWindow::StartPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiSelectWindow", "StartPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiShinigamiBalloon.ClearText
// (Final, Native, Public, BlueprintCallable)

void URCReUiShinigamiBalloon::ClearText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiShinigamiBalloon", "ClearText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiShinigamiBalloon.Close
// (Final, Native, Public, BlueprintCallable)

void URCReUiShinigamiBalloon::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiShinigamiBalloon", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiShinigamiBalloon.InitializeShinigamiBalloon
// (Final, Native, Public, BlueprintCallable)

void URCReUiShinigamiBalloon::InitializeShinigamiBalloon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiShinigamiBalloon", "InitializeShinigamiBalloon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiShinigamiBalloon.Open
// (Final, Native, Public, BlueprintCallable)

void URCReUiShinigamiBalloon::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiShinigamiBalloon", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiShinigamiBalloon.SetAuto
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsAutoPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiShinigamiBalloon::SetAuto(bool bInIsAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiShinigamiBalloon", "SetAuto");

	Params::RCReUiShinigamiBalloon_SetAuto Parms{};

	Parms.bInIsAutoPlay = bInIsAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiShinigamiBalloon.SetBalloonData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiShinigamiBalloon::SetBalloonData(const class FString& inString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiShinigamiBalloon", "SetBalloonData");

	Params::RCReUiShinigamiBalloon_SetBalloonData Parms{};

	Parms.inString = std::move(inString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiShinigamiBalloon.SetShakeData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWidthX                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWidthY                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InInterval                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCReUiShinigamiBalloon::SetShakeData(float InWidthX, float InWidthY, float InInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiShinigamiBalloon", "SetShakeData");

	Params::RCReUiShinigamiBalloon_SetShakeData Parms{};

	Parms.InWidthX = InWidthX;
	Parms.InWidthY = InWidthY;
	Parms.InInterval = InInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCReUiShinigamiBalloon.WaitOutside
// (Final, Native, Public, BlueprintCallable)

void URCReUiShinigamiBalloon::WaitOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCReUiShinigamiBalloon", "WaitOutside");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiGenericButtonParts.DecidedProc
// (Final, Native, Public)

void URCUiGenericButtonParts::DecidedProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiGenericButtonParts", "DecidedProc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveGameBFL.Check_SaveGameData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::Check_SaveGameData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "Check_SaveGameData");

	Params::RCSaveGameBFL_Check_SaveGameData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.Check_SaveGameDataStoryMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCStoryMode                            InStoryMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::Check_SaveGameDataStoryMode(ERCStoryMode InStoryMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "Check_SaveGameDataStoryMode");

	Params::RCSaveGameBFL_Check_SaveGameDataStoryMode Parms{};

	Parms.InStoryMode = InStoryMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.Get_SaveGameDataList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRCSaveSlotInfo>          OutSlotList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCSaveGameBFL::Get_SaveGameDataList(TArray<struct FRCSaveSlotInfo>* OutSlotList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "Get_SaveGameDataList");

	Params::RCSaveGameBFL_Get_SaveGameDataList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSlotList != nullptr)
		*OutSlotList = std::move(Parms.OutSlotList);

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.GetErrorText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCSaveGameBFL::GetErrorText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "GetErrorText");

	Params::RCSaveGameBFL_GetErrorText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.GetOptionCharacterDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCOptionCharacterDraw                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCOptionCharacterDraw URCSaveGameBFL::GetOptionCharacterDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "GetOptionCharacterDraw");

	Params::RCSaveGameBFL_GetOptionCharacterDraw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.GetOptionFinaleSkipEnable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::GetOptionFinaleSkipEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "GetOptionFinaleSkipEnable");

	Params::RCSaveGameBFL_GetOptionFinaleSkipEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.GetOptionMobQuality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCOptionMobQuality                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCOptionMobQuality URCSaveGameBFL::GetOptionMobQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "GetOptionMobQuality");

	Params::RCSaveGameBFL_GetOptionMobQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.GetOptionMovieQuality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCMovieQuality                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCMovieQuality URCSaveGameBFL::GetOptionMovieQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "GetOptionMovieQuality");

	Params::RCSaveGameBFL_GetOptionMovieQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.GetOptionSubLevelQuality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCOptionSubLevel                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCOptionSubLevel URCSaveGameBFL::GetOptionSubLevelQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "GetOptionSubLevelQuality");

	Params::RCSaveGameBFL_GetOptionSubLevelQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.GetOptionUiQuality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCOptionUiQuality                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCOptionUiQuality URCSaveGameBFL::GetOptionUiQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "GetOptionUiQuality");

	Params::RCSaveGameBFL_GetOptionUiQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.GetOptionVoiceLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCVoiceLanguage                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCVoiceLanguage URCSaveGameBFL::GetOptionVoiceLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "GetOptionVoiceLanguage");

	Params::RCSaveGameBFL_GetOptionVoiceLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.IsError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::IsError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "IsError");

	Params::RCSaveGameBFL_IsError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.IsFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "IsFinished");

	Params::RCSaveGameBFL_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.IsPlayerMove
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::IsPlayerMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "IsPlayerMove");

	Params::RCSaveGameBFL_IsPlayerMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.RestartPlayerMove
// (Final, Native, Static, Public, BlueprintCallable)

void URCSaveGameBFL::RestartPlayerMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "RestartPlayerMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveGameBFL.SetOptionCharacterDraw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCOptionCharacterDraw                  InOptionCharacterDraw                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSaveGameBFL::SetOptionCharacterDraw(ERCOptionCharacterDraw InOptionCharacterDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "SetOptionCharacterDraw");

	Params::RCSaveGameBFL_SetOptionCharacterDraw Parms{};

	Parms.InOptionCharacterDraw = InOptionCharacterDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveGameBFL.SetOptionMobQuality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCOptionMobQuality                     InMobQuality                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSaveGameBFL::SetOptionMobQuality(ERCOptionMobQuality InMobQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "SetOptionMobQuality");

	Params::RCSaveGameBFL_SetOptionMobQuality Parms{};

	Parms.InMobQuality = InMobQuality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveGameBFL.SetOptionMovieQuality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCMovieQuality                         InMovieQuality                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSaveGameBFL::SetOptionMovieQuality(ERCMovieQuality InMovieQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "SetOptionMovieQuality");

	Params::RCSaveGameBFL_SetOptionMovieQuality Parms{};

	Parms.InMovieQuality = InMovieQuality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveGameBFL.SetOptionSubLevelQuality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCOptionSubLevel                       InOptionSubLevel                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSaveGameBFL::SetOptionSubLevelQuality(ERCOptionSubLevel InOptionSubLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "SetOptionSubLevelQuality");

	Params::RCSaveGameBFL_SetOptionSubLevelQuality Parms{};

	Parms.InOptionSubLevel = InOptionSubLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveGameBFL.SetPlayerControllerInfo
// (Final, Native, Static, Public, BlueprintCallable)

void URCSaveGameBFL::SetPlayerControllerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "SetPlayerControllerInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveGameBFL.StartLoad_DevelopmentData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartLoad_DevelopmentData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartLoad_DevelopmentData");

	Params::RCSaveGameBFL_StartLoad_DevelopmentData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartLoad_LastSaveGameData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCStoryMode                            InStoryMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartLoad_LastSaveGameData(ERCStoryMode InStoryMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartLoad_LastSaveGameData");

	Params::RCSaveGameBFL_StartLoad_LastSaveGameData Parms{};

	Parms.InStoryMode = InStoryMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartLoad_SaveGameData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSaveDataType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartLoad_SaveGameData(ERCSaveDataType InType, int32 InSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartLoad_SaveGameData");

	Params::RCSaveGameBFL_StartLoad_SaveGameData Parms{};

	Parms.InType = InType;
	Parms.InSlot = InSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartLoad_SaveGameDataMemory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartLoad_SaveGameDataMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartLoad_SaveGameDataMemory");

	Params::RCSaveGameBFL_StartLoad_SaveGameDataMemory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartLoad_SaveGameDataStoryMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCStoryMode                            InStoryMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSaveDataType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartLoad_SaveGameDataStoryMode(ERCStoryMode InStoryMode, ERCSaveDataType InType, int32 InSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartLoad_SaveGameDataStoryMode");

	Params::RCSaveGameBFL_StartLoad_SaveGameDataStoryMode Parms{};

	Parms.InStoryMode = InStoryMode;
	Parms.InType = InType;
	Parms.InSlot = InSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartLoad_SystemeData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartLoad_SystemeData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartLoad_SystemeData");

	Params::RCSaveGameBFL_StartLoad_SystemeData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartSave_AutoSaveGameData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartSave_AutoSaveGameData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartSave_AutoSaveGameData");

	Params::RCSaveGameBFL_StartSave_AutoSaveGameData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartSave_AutoSaveGameDataStoryMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCStoryMode                            InStoryMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartSave_AutoSaveGameDataStoryMode(ERCStoryMode InStoryMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartSave_AutoSaveGameDataStoryMode");

	Params::RCSaveGameBFL_StartSave_AutoSaveGameDataStoryMode Parms{};

	Parms.InStoryMode = InStoryMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartSave_DevelopmentData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartSave_DevelopmentData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartSave_DevelopmentData");

	Params::RCSaveGameBFL_StartSave_DevelopmentData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartSave_SaveGameData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSaveDataType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartSave_SaveGameData(ERCSaveDataType InType, int32 InSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartSave_SaveGameData");

	Params::RCSaveGameBFL_StartSave_SaveGameData Parms{};

	Parms.InType = InType;
	Parms.InSlot = InSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartSave_SaveGameDataMemory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartSave_SaveGameDataMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartSave_SaveGameDataMemory");

	Params::RCSaveGameBFL_StartSave_SaveGameDataMemory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartSave_SaveGameDataNazoManualSave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSaveDataType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartSave_SaveGameDataNazoManualSave(ERCSaveDataType InType, int32 InSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartSave_SaveGameDataNazoManualSave");

	Params::RCSaveGameBFL_StartSave_SaveGameDataNazoManualSave Parms{};

	Parms.InType = InType;
	Parms.InSlot = InSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartSave_SaveGameDataStoryMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCStoryMode                            InStoryMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSaveDataType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartSave_SaveGameDataStoryMode(ERCStoryMode InStoryMode, ERCSaveDataType InType, int32 InSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartSave_SaveGameDataStoryMode");

	Params::RCSaveGameBFL_StartSave_SaveGameDataStoryMode Parms{};

	Parms.InStoryMode = InStoryMode;
	Parms.InType = InType;
	Parms.InSlot = InSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveGameBFL.StartSave_SystemData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveGameBFL::StartSave_SystemData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveGameBFL", "StartSave_SystemData");

	Params::RCSaveGameBFL_StartSave_SystemData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveLoadBFL.IsFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSaveLoadBFL::IsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveLoadBFL", "IsFinished");

	Params::RCSaveLoadBFL_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveLoadBFL.OpenLoad
// (Final, Native, Static, Public, BlueprintCallable)

void URCSaveLoadBFL::OpenLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveLoadBFL", "OpenLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadBFL.OpenSave
// (Final, Native, Static, Public, BlueprintCallable)

void URCSaveLoadBFL::OpenSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSaveLoadBFL", "OpenSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleGalleryBGMListBar.DecidedProc
// (Final, Native, Public)

void URCTitleGalleryBGMListBar::DecidedProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryBGMListBar", "DecidedProc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleGalleryMovieList.MovieNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleGalleryMovieList::MovieNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryMovieList", "MovieNavigation");

	Params::RCTitleGalleryMovieList_MovieNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleGalleryMovieList.SelectMovie
// (Final, Native, Public, BlueprintCallable)

void URCTitleGalleryMovieList::SelectMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryMovieList", "SelectMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadSelect.PushCancel
// (Final, Native, Protected, BlueprintCallable)

void URCSaveLoadSelect::PushCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadSelect", "PushCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadSelect.PushCancelWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSaveLoadSelect::PushCancelWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadSelect", "PushCancelWrap");

	Params::RCSaveLoadSelect_PushCancelWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadSelect.PushDecide
// (Final, Native, Protected, BlueprintCallable)

void URCSaveLoadSelect::PushDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadSelect", "PushDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadSelect.PushDecideWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSaveLoadSelect::PushDecideWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadSelect", "PushDecideWrap");

	Params::RCSaveLoadSelect_PushDecideWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadSelect.SaveLoadSelectNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCSaveLoadSelect::SaveLoadSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadSelect", "SaveLoadSelectNavigation");

	Params::RCSaveLoadSelect_SaveLoadSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSaveLoadWidget.PushCancel
// (Final, Native, Protected, BlueprintCallable)

void URCSaveLoadWidget::PushCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadWidget", "PushCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadWidget.PushCancelWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSaveLoadWidget::PushCancelWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadWidget", "PushCancelWrap");

	Params::RCSaveLoadWidget_PushCancelWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadWidget.PushDecide
// (Final, Native, Protected, BlueprintCallable)

void URCSaveLoadWidget::PushDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadWidget", "PushDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadWidget.PushDecideWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSaveLoadWidget::PushDecideWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadWidget", "PushDecideWrap");

	Params::RCSaveLoadWidget_PushDecideWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSaveLoadWidget.SaveLoadWidgetNavigation
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCSaveLoadWidget::SaveLoadWidgetNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSaveLoadWidget", "SaveLoadWidgetNavigation");

	Params::RCSaveLoadWidget_SaveLoadWidgetNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSelectText3DActor.GetSelectStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSelectTextSelectStatus               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCSelectTextSelectStatus ARCSelectText3DActor::GetSelectStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSelectText3DActor", "GetSelectStatus");

	Params::RCSelectText3DActor_GetSelectStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSelectText3DActor.SetSelectStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCSelectTextSelectStatus               InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSelectText3DActor::SetSelectStatus(ERCSelectTextSelectStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSelectText3DActor", "SetSelectStatus");

	Params::RCSelectText3DActor_SetSelectStatus Parms{};

	Parms.InStatus = InStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSelectText3DActor.SetTextColor
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InTextColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCSelectText3DActor::SetTextColor(const struct FLinearColor& InTextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSelectText3DActor", "SetTextColor");

	Params::RCSelectText3DActor_SetTextColor Parms{};

	Parms.InTextColor = std::move(InTextColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSequenceManager.ShinigamiSequencer_Finished
// (Final, Native, Protected)

void URCSequenceManager::ShinigamiSequencer_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSequenceManager", "ShinigamiSequencer_Finished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCShinigamiEffectComponent.EffectSpawn
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCShinigamiEffectComponent::EffectSpawn(struct FRCEffectComponentData& InEffectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCShinigamiEffectComponent", "EffectSpawn");

	Params::RCShinigamiEffectComponent_EffectSpawn Parms{};

	Parms.InEffectData = std::move(InEffectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCShinigamiEffectComponent.EffectStart
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRCEffectComponentData           InEffectData                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCShinigamiEffectComponent::EffectStart(struct FRCEffectComponentData& InEffectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCShinigamiEffectComponent", "EffectStart");

	Params::RCShinigamiEffectComponent_EffectStart Parms{};

	Parms.InEffectData = std::move(InEffectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEffectData = std::move(Parms.InEffectData);

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.ActionSequencerSound
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FRCParamSequencerSoundTemplateTableRowSoundData                                              (Parm, NativeAccessSpecifierPublic)
// bool                                    bMovie                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::ActionSequencerSound(const struct FRCParamSequencerSoundTemplateTableRow& SoundData, bool bMovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ActionSequencerSound");

	Params::RCSoundManagerBFL_ActionSequencerSound Parms{};

	Parms.SoundData = std::move(SoundData);
	Parms.bMovie = bMovie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ChangeMapEnvSoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::ChangeMapEnvSoundVolume(float Volume, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ChangeMapEnvSoundVolume");

	Params::RCSoundManagerBFL_ChangeMapEnvSoundVolume Parms{};

	Parms.Volume = Volume;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.CrossFade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::CrossFade(ERCSoundType SoundType, int32 Index_0, float fadeOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "CrossFade");

	Params::RCSoundManagerBFL_CrossFade Parms{};

	Parms.SoundType = SoundType;
	Parms.Index_0 = Index_0;
	Parms.fadeOutTime = fadeOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.CrossFadeForParamSoundID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::CrossFadeForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, float fadeOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "CrossFadeForParamSoundID");

	Params::RCSoundManagerBFL_CrossFadeForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.fadeOutTime = fadeOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.FadeIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeInTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   finishVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::FadeIn(ERCSoundType SoundType, int32 Index_0, float fadeInTime, float StartTime, float finishVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "FadeIn");

	Params::RCSoundManagerBFL_FadeIn Parms{};

	Parms.SoundType = SoundType;
	Parms.Index_0 = Index_0;
	Parms.fadeInTime = fadeInTime;
	Parms.StartTime = StartTime;
	Parms.finishVolume = finishVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.FadeInForParamSoundID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeInTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   finishVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::FadeInForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, float fadeInTime, float StartTime, float finishVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "FadeInForParamSoundID");

	Params::RCSoundManagerBFL_FadeInForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.fadeInTime = fadeInTime;
	Parms.StartTime = StartTime;
	Parms.finishVolume = finishVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.FadeOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   finishVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::FadeOut(ERCSoundType SoundType, int32 Index_0, float fadeOutTime, float finishVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "FadeOut");

	Params::RCSoundManagerBFL_FadeOut Parms{};

	Parms.SoundType = SoundType;
	Parms.Index_0 = Index_0;
	Parms.fadeOutTime = fadeOutTime;
	Parms.finishVolume = finishVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.FadeOutForParamSoundID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   finishVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::FadeOutForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, float fadeOutTime, float finishVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "FadeOutForParamSoundID");

	Params::RCSoundManagerBFL_FadeOutForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.fadeOutTime = fadeOutTime;
	Parms.finishVolume = finishVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.GetPlayingBgmIDArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> URCSoundManagerBFL::GetPlayingBgmIDArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "GetPlayingBgmIDArray");

	Params::RCSoundManagerBFL_GetPlayingBgmIDArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.GetPlayingEnvIDArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> URCSoundManagerBFL::GetPlayingEnvIDArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "GetPlayingEnvIDArray");

	Params::RCSoundManagerBFL_GetPlayingEnvIDArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.GetPlayingSeIDArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> URCSoundManagerBFL::GetPlayingSeIDArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "GetPlayingSeIDArray");

	Params::RCSoundManagerBFL_GetPlayingSeIDArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.GetSoundManager
// (Final, Native, Static, Private)
// Parameters:
// class ARCSoundManager*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCSoundManager* URCSoundManagerBFL::GetSoundManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "GetSoundManager");

	Params::RCSoundManagerBFL_GetSoundManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.GetSoundParameter
// (Final, Native, Static, Private, HasOutParams)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SoundId                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OptionType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::GetSoundParameter(ERCSoundType SoundType, const class FString& ParamSoundID, int32* soundIndex, class FString* SoundId, class FString* CharaID, int32* OptionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "GetSoundParameter");

	Params::RCSoundManagerBFL_GetSoundParameter Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (soundIndex != nullptr)
		*soundIndex = Parms.soundIndex;

	if (SoundId != nullptr)
		*SoundId = std::move(Parms.SoundId);

	if (CharaID != nullptr)
		*CharaID = std::move(Parms.CharaID);

	if (OptionType != nullptr)
		*OptionType = Parms.OptionType;
}


// Function RC.RCSoundManagerBFL.GetSoundType
// (Final, Native, Static, Private)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OptionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSoundType                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCSoundType URCSoundManagerBFL::GetSoundType(ERCSoundType SoundType, int32 OptionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "GetSoundType");

	Params::RCSoundManagerBFL_GetSoundType Parms{};

	Parms.SoundType = SoundType;
	Parms.OptionType = OptionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.GetVoiceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TextID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Chapter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCSoundManagerBFL::GetVoiceID(class FName TextID, int32 Chapter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "GetVoiceID");

	Params::RCSoundManagerBFL_GetVoiceID Parms{};

	Parms.TextID = TextID;
	Parms.Chapter = Chapter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.IsDeathMatchBattle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSoundManagerBFL::IsDeathMatchBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "IsDeathMatchBattle");

	Params::RCSoundManagerBFL_IsDeathMatchBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.IsLoadCompleteNonResidentSheet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSoundManagerBFL::IsLoadCompleteNonResidentSheet(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "IsLoadCompleteNonResidentSheet");

	Params::RCSoundManagerBFL_IsLoadCompleteNonResidentSheet Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.IsPlaying
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCSoundManagerBFL::IsPlaying(ERCSoundType SoundType, const class FString& ParamSoundID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "IsPlaying");

	Params::RCSoundManagerBFL_IsPlaying Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSoundManagerBFL.LoadNonResidentSheet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           SheetID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::LoadNonResidentSheet(const class FString& SheetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "LoadNonResidentSheet");

	Params::RCSoundManagerBFL_LoadNonResidentSheet Parms{};

	Parms.SheetID = std::move(SheetID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.Pause
// (Final, Native, Static, Public, BlueprintCallable)

void URCSoundManagerBFL::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "Pause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.PauseForSoundType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::PauseForSoundType(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "PauseForSoundType");

	Params::RCSoundManagerBFL_PauseForSoundType Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.PauseSingle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::PauseSingle(ERCSoundType SoundType, int32 soundIndex, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "PauseSingle");

	Params::RCSoundManagerBFL_PauseSingle Parms{};

	Parms.SoundType = SoundType;
	Parms.soundIndex = soundIndex;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.PauseSingleForParamSoundID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::PauseSingleForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "PauseSingleForParamSoundID");

	Params::RCSoundManagerBFL_PauseSingleForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ReloadVoiceSheet
// (Final, Native, Static, Public)

void URCSoundManagerBFL::ReloadVoiceSheet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ReloadVoiceSheet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ResetAreaChange
// (Final, Native, Static, Public, BlueprintCallable)

void URCSoundManagerBFL::ResetAreaChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ResetAreaChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ResetDisableLipSyncCharaID
// (Final, Native, Static, Public, BlueprintCallable)

void URCSoundManagerBFL::ResetDisableLipSyncCharaID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ResetDisableLipSyncCharaID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ResetVoiceCharaFacial
// (Final, Native, Static, Public, BlueprintCallable)

void URCSoundManagerBFL::ResetVoiceCharaFacial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ResetVoiceCharaFacial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ResetVoiceCharaFacialOfActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::ResetVoiceCharaFacialOfActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ResetVoiceCharaFacialOfActor");

	Params::RCSoundManagerBFL_ResetVoiceCharaFacialOfActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.Resume
// (Final, Native, Static, Public, BlueprintCallable)

void URCSoundManagerBFL::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "Resume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ResumeFieldSound
// (Final, Native, Static, Public, BlueprintCallable)

void URCSoundManagerBFL::ResumeFieldSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ResumeFieldSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ResumeForSoundType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::ResumeForSoundType(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ResumeForSoundType");

	Params::RCSoundManagerBFL_ResumeForSoundType Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ResumeSingle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::ResumeSingle(ERCSoundType SoundType, int32 soundIndex, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ResumeSingle");

	Params::RCSoundManagerBFL_ResumeSingle Parms{};

	Parms.SoundType = SoundType;
	Parms.soundIndex = soundIndex;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.ResumeSingleForParamSoundID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::ResumeSingleForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "ResumeSingleForParamSoundID");

	Params::RCSoundManagerBFL_ResumeSingleForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.Set3DSoundPlayFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ActorName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPause_0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::Set3DSoundPlayFlag(const class FString& ActorName, bool IsPause_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "Set3DSoundPlayFlag");

	Params::RCSoundManagerBFL_Set3DSoundPlayFlag Parms{};

	Parms.ActorName = std::move(ActorName);
	Parms.IsPause_0 = IsPause_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetBackLogFlag
// (Final, Native, Static, Public)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetBackLogFlag(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetBackLogFlag");

	Params::RCSoundManagerBFL_SetBackLogFlag Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetDisableLipSyncCharaID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetDisableLipSyncCharaID(class FName CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetDisableLipSyncCharaID");

	Params::RCSoundManagerBFL_SetDisableLipSyncCharaID Parms{};

	Parms.CharaID = CharaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetEnableLipSync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetEnableLipSync(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetEnableLipSync");

	Params::RCSoundManagerBFL_SetEnableLipSync Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetFadeSoundForPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            soundType1                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex1                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           actor1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSoundType                            soundType2                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex2                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           actor2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetFadeSoundForPosition(ERCSoundType soundType1, int32 soundIndex1, class AActor* actor1, ERCSoundType soundType2, int32 soundIndex2, class AActor* actor2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetFadeSoundForPosition");

	Params::RCSoundManagerBFL_SetFadeSoundForPosition Parms{};

	Parms.soundType1 = soundType1;
	Parms.soundIndex1 = soundIndex1;
	Parms.actor1 = actor1;
	Parms.soundType2 = soundType2;
	Parms.soundIndex2 = soundIndex2;
	Parms.actor2 = actor2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetFadeSoundForSoundIDPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            soundType1                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           paramSoundID1                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           actor1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERCSoundType                            soundType2                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           paramSoundID2                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           actor2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetFadeSoundForSoundIDPosition(ERCSoundType soundType1, const class FString& paramSoundID1, class AActor* actor1, ERCSoundType soundType2, const class FString& paramSoundID2, class AActor* actor2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetFadeSoundForSoundIDPosition");

	Params::RCSoundManagerBFL_SetFadeSoundForSoundIDPosition Parms{};

	Parms.soundType1 = soundType1;
	Parms.paramSoundID1 = std::move(paramSoundID1);
	Parms.actor1 = actor1;
	Parms.soundType2 = soundType2;
	Parms.paramSoundID2 = std::move(paramSoundID2);
	Parms.actor2 = actor2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetLipSyncCharaArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ACharacter*>               charaArray                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetLipSyncCharaArray(const TArray<class ACharacter*>& charaArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetLipSyncCharaArray");

	Params::RCSoundManagerBFL_SetLipSyncCharaArray Parms{};

	Parms.charaArray = std::move(charaArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetPlayAmatanVoice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetPlayAmatanVoice(class FName VoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetPlayAmatanVoice");

	Params::RCSoundManagerBFL_SetPlayAmatanVoice Parms{};

	Parms.VoiceID = VoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetPlaySound
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isFadeIn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetPlaySound(ERCSoundType SoundType, int32 soundIndex, bool IsLoop, const class FString& CharaID, bool isFadeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetPlaySound");

	Params::RCSoundManagerBFL_SetPlaySound Parms{};

	Parms.SoundType = SoundType;
	Parms.soundIndex = soundIndex;
	Parms.IsLoop = IsLoop;
	Parms.CharaID = std::move(CharaID);
	Parms.isFadeIn = isFadeIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetPlaySoundForParamSoundID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isFadeIn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetPlaySoundForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, bool IsLoop, const class FString& CharaID, bool isFadeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetPlaySoundForParamSoundID");

	Params::RCSoundManagerBFL_SetPlaySoundForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.IsLoop = IsLoop;
	Parms.CharaID = std::move(CharaID);
	Parms.isFadeIn = isFadeIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetPlaySoundForParamSoundIDVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isFadeIn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   volumeRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetPlaySoundForParamSoundIDVolume(ERCSoundType SoundType, const class FString& ParamSoundID, bool IsLoop, const class FString& CharaID, bool isFadeIn, float volumeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetPlaySoundForParamSoundIDVolume");

	Params::RCSoundManagerBFL_SetPlaySoundForParamSoundIDVolume Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.IsLoop = IsLoop;
	Parms.CharaID = std::move(CharaID);
	Parms.isFadeIn = isFadeIn;
	Parms.volumeRate = volumeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetPlaySoundForVoiceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             voiceCharaID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FacialName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             useMorph                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowfacialFlowLiquid                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   volumeRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetPlaySoundForVoiceID(class FName VoiceID, class FName voiceCharaID, class FName FacialName, class FName useMorph, bool bAllowfacialFlowLiquid, float volumeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetPlaySoundForVoiceID");

	Params::RCSoundManagerBFL_SetPlaySoundForVoiceID Parms{};

	Parms.VoiceID = VoiceID;
	Parms.voiceCharaID = voiceCharaID;
	Parms.FacialName = FacialName;
	Parms.useMorph = useMorph;
	Parms.bAllowfacialFlowLiquid = bAllowfacialFlowLiquid;
	Parms.volumeRate = volumeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetRunningSQC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    isFlag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetRunningSQC(bool isFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetRunningSQC");

	Params::RCSoundManagerBFL_SetRunningSQC Parms{};

	Parms.isFlag = isFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SetSQCTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SetSQCTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SetSQCTime");

	Params::RCSoundManagerBFL_SetSQCTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SpawnSound
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                SoundAttenuation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SpawnSound(ERCSoundType SoundType, int32 soundIndex, const class FString& CharaID, const struct FVector& Location, float RangeMin, float RangeMax, bool IsLoop, class AActor* Actor, class USoundAttenuation* SoundAttenuation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SpawnSound");

	Params::RCSoundManagerBFL_SpawnSound Parms{};

	Parms.SoundType = SoundType;
	Parms.soundIndex = soundIndex;
	Parms.CharaID = std::move(CharaID);
	Parms.Location = std::move(Location);
	Parms.RangeMin = RangeMin;
	Parms.RangeMax = RangeMax;
	Parms.IsLoop = IsLoop;
	Parms.Actor = Actor;
	Parms.SoundAttenuation = SoundAttenuation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SpawnSoundForMovingActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SpawnSoundForMovingActor(ERCSoundType SoundType, int32 soundIndex, class AActor* Actor, float RangeMin, float RangeMax, bool IsLoop, const class FString& CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SpawnSoundForMovingActor");

	Params::RCSoundManagerBFL_SpawnSoundForMovingActor Parms{};

	Parms.SoundType = SoundType;
	Parms.soundIndex = soundIndex;
	Parms.Actor = Actor;
	Parms.RangeMin = RangeMin;
	Parms.RangeMax = RangeMax;
	Parms.IsLoop = IsLoop;
	Parms.CharaID = std::move(CharaID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SpawnSoundForParamSoundID
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                SoundAttenuation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SpawnSoundForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, const class FString& CharaID, const struct FVector& Location, float RangeMin, float RangeMax, bool IsLoop, class AActor* Actor, class USoundAttenuation* SoundAttenuation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SpawnSoundForParamSoundID");

	Params::RCSoundManagerBFL_SpawnSoundForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.CharaID = std::move(CharaID);
	Parms.Location = std::move(Location);
	Parms.RangeMin = RangeMin;
	Parms.RangeMax = RangeMax;
	Parms.IsLoop = IsLoop;
	Parms.Actor = Actor;
	Parms.SoundAttenuation = SoundAttenuation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.SpawnSoundForSoundIDMovingActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharaID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::SpawnSoundForSoundIDMovingActor(ERCSoundType SoundType, const class FString& ParamSoundID, class AActor* Actor, float RangeMin, float RangeMax, bool IsLoop, const class FString& CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "SpawnSoundForSoundIDMovingActor");

	Params::RCSoundManagerBFL_SpawnSoundForSoundIDMovingActor Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.Actor = Actor;
	Parms.RangeMin = RangeMin;
	Parms.RangeMax = RangeMax;
	Parms.IsLoop = IsLoop;
	Parms.CharaID = std::move(CharaID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.Stop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::Stop(ERCSoundType SoundType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "Stop");

	Params::RCSoundManagerBFL_Stop Parms{};

	Parms.SoundType = SoundType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.StopSingle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::StopSingle(ERCSoundType SoundType, int32 soundIndex, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "StopSingle");

	Params::RCSoundManagerBFL_StopSingle Parms{};

	Parms.SoundType = SoundType;
	Parms.soundIndex = soundIndex;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.StopSingleForParamSoundID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    is3DSound                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::StopSingleForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, class AActor* Actor, bool is3DSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "StopSingleForParamSoundID");

	Params::RCSoundManagerBFL_StopSingleForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.Actor = Actor;
	Parms.is3DSound = is3DSound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.StopSoundBeforeLoading
// (Final, Native, Static, Public, BlueprintCallable)

void URCSoundManagerBFL::StopSoundBeforeLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "StopSoundBeforeLoading");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.UpdataSingleVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   soundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   volumeRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::UpdataSingleVolume(ERCSoundType SoundType, int32 soundIndex, float volumeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "UpdataSingleVolume");

	Params::RCSoundManagerBFL_UpdataSingleVolume Parms{};

	Parms.SoundType = SoundType;
	Parms.soundIndex = soundIndex;
	Parms.volumeRate = volumeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.UpdataSingleVolumeForParamSoundID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamSoundID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   volumeRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::UpdataSingleVolumeForParamSoundID(ERCSoundType SoundType, const class FString& ParamSoundID, float volumeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "UpdataSingleVolumeForParamSoundID");

	Params::RCSoundManagerBFL_UpdataSingleVolumeForParamSoundID Parms{};

	Parms.SoundType = SoundType;
	Parms.ParamSoundID = std::move(ParamSoundID);
	Parms.volumeRate = volumeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSoundManagerBFL.UpdataVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCSoundType                            SoundType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSoundManagerBFL::UpdataVolume(ERCSoundType SoundType, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCSoundManagerBFL", "UpdataVolume");

	Params::RCSoundManagerBFL_UpdataVolume Parms{};

	Parms.SoundType = SoundType;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSplineActor.GetSplineDistanceMax
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARCSplineActor::GetSplineDistanceMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSplineActor", "GetSplineDistanceMax");

	Params::RCSplineActor_GetSplineDistanceMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCSplineActor.GetSplineLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOutDistance                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCSplineActor::GetSplineLocation(struct FVector* OutLocation, float* InOutDistance, float InSpeed, bool bInLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSplineActor", "GetSplineLocation");

	Params::RCSplineActor_GetSplineLocation Parms{};

	Parms.InSpeed = InSpeed;
	Parms.bInLoop = bInLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (InOutDistance != nullptr)
		*InOutDistance = Parms.InOutDistance;

	return Parms.ReturnValue;
}


// Function RC.RCSplineActor.GetSplineLocationAndRotate
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutRotate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InOutDistance                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCSplineActor::GetSplineLocationAndRotate(struct FVector* OutLocation, struct FRotator* OutRotate, float* InOutDistance, float InSpeed, bool bInLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSplineActor", "GetSplineLocationAndRotate");

	Params::RCSplineActor_GetSplineLocationAndRotate Parms{};

	Parms.InSpeed = InSpeed;
	Parms.bInLoop = bInLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotate != nullptr)
		*OutRotate = std::move(Parms.OutRotate);

	if (InOutDistance != nullptr)
		*InOutDistance = Parms.InOutDistance;

	return Parms.ReturnValue;
}


// Function RC.RCSplineActor.GetSplineTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InOutDistance                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCSplineActor::GetSplineTransform(struct FTransform* OutTransform, float* InOutDistance, float InSpeed, bool bInLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSplineActor", "GetSplineTransform");

	Params::RCSplineActor_GetSplineTransform Parms{};

	Parms.InSpeed = InSpeed;
	Parms.bInLoop = bInLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);

	if (InOutDistance != nullptr)
		*InOutDistance = Parms.InOutDistance;

	return Parms.ReturnValue;
}


// Function RC.RCSubStoryStartupAutoSave.SaveIconFinish
// (Final, Native, Private, BlueprintCallable)

void URCSubStoryStartupAutoSave::SaveIconFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSubStoryStartupAutoSave", "SaveIconFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCSubStoryStartupAutoSave.SetText
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCSubStoryStartupAutoSave::SetText(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCSubStoryStartupAutoSave", "SetText");

	Params::RCSubStoryStartupAutoSave_SetText Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTextBFL.GetText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCTextBFL::GetText(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTextBFL", "GetText");

	Params::RCTextBFL_GetText Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTextBFL.GetTextLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCTextLanguage                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERCTextLanguage URCTextBFL::GetTextLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTextBFL", "GetTextLanguage");

	Params::RCTextBFL_GetTextLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTextBFL.IsText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCTextBFL::IsText(class FName InTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTextBFL", "IsText");

	Params::RCTextBFL_IsText Parms{};

	Parms.InTextID = InTextID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTextBFL.LoadDlcTextLanguage
// (Final, Native, Static, Public, BlueprintCallable)

void URCTextBFL::LoadDlcTextLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTextBFL", "LoadDlcTextLanguage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTextBFL.SetTextLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERCTextLanguage                         Language                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTextBFL::SetTextLanguage(ERCTextLanguage Language)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTextBFL", "SetTextLanguage");

	Params::RCTextBFL_SetTextLanguage Parms{};

	Parms.Language = Language;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTimeBFL.GetGameSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCTimeBFL::GetGameSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTimeBFL", "GetGameSpeed");

	Params::RCTimeBFL_GetGameSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTimeBFL.GetNowSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCTimeBFL::GetNowSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTimeBFL", "GetNowSpeed");

	Params::RCTimeBFL_GetNowSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTimeBFL.GetSkipSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCTimeBFL::GetSkipSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTimeBFL", "GetSkipSpeed");

	Params::RCTimeBFL_GetSkipSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTimeBFL.IsMenuPause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCTimeBFL::IsMenuPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTimeBFL", "IsMenuPause");

	Params::RCTimeBFL_IsMenuPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTimeBFL.SetGameSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTimeBFL::SetGameSpeed(float InSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTimeBFL", "SetGameSpeed");

	Params::RCTimeBFL_SetGameSpeed Parms{};

	Parms.InSpeed = InSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTimeBFL.SetMenuPause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTimeBFL::SetMenuPause(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTimeBFL", "SetMenuPause");

	Params::RCTimeBFL_SetMenuPause Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTimeBFL.SetSkipSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTimeBFL::SetSkipSpeed(float InSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTimeBFL", "SetSkipSpeed");

	Params::RCTimeBFL_SetSkipSpeed Parms{};

	Parms.InSpeed = InSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleChapterSelectWindow.ChapterSelectWindowSelectNavigation
// (Final, Native, Protected)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleChapterSelectWindow::ChapterSelectWindowSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleChapterSelectWindow", "ChapterSelectWindowSelectNavigation");

	Params::RCTitleChapterSelectWindow_ChapterSelectWindowSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleChapterSelectWindow.SelectListItem
// (Final, Native, Public, BlueprintCallable)

void URCTitleChapterSelectWindow::SelectListItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleChapterSelectWindow", "SelectListItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleGalleryBase.InitializeGallery
// (Final, Native, Public, BlueprintCallable)

void URCTitleGalleryBase::InitializeGallery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryBase", "InitializeGallery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleGalleryBase.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBackFromGalleryMovie                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleGalleryBase::Open(bool bBackFromGalleryMovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryBase", "Open");

	Params::RCTitleGalleryBase_Open Parms{};

	Parms.bBackFromGalleryMovie = bBackFromGalleryMovie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleGalleryMovieListBar.DecidedProc
// (Final, Native, Public)

void URCTitleGalleryMovieListBar::DecidedProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryMovieListBar", "DecidedProc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleGalleryName.Close
// (Final, Native, Public, BlueprintCallable)

void URCTitleGalleryName::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryName", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleGalleryName.InitializeGalleryName
// (Final, Native, Public, BlueprintCallable)

void URCTitleGalleryName::InitializeGalleryName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryName", "InitializeGalleryName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleGalleryName.Open
// (Final, Native, Public, BlueprintCallable)

void URCTitleGalleryName::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleGalleryName", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleHUDBFL.EndGalleryMovie
// (Final, Native, Static, Public, BlueprintCallable)

void URCTitleHUDBFL::EndGalleryMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTitleHUDBFL", "EndGalleryMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleHUDBFL.GetGalleryMovieSoundTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* URCTitleHUDBFL::GetGalleryMovieSoundTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTitleHUDBFL", "GetGalleryMovieSoundTable");

	Params::RCTitleHUDBFL_GetGalleryMovieSoundTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUDBFL.GetGalleryPlayMovieID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName URCTitleHUDBFL::GetGalleryPlayMovieID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTitleHUDBFL", "GetGalleryPlayMovieID");

	Params::RCTitleHUDBFL_GetGalleryPlayMovieID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUDBFL.GetTitleGalleryMovieEvent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCTitleHUDBFL::GetTitleGalleryMovieEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTitleHUDBFL", "GetTitleGalleryMovieEvent");

	Params::RCTitleHUDBFL_GetTitleGalleryMovieEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUDBFL.GetTitleHUD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARCTitleHUD*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCTitleHUD* URCTitleHUDBFL::GetTitleHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTitleHUDBFL", "GetTitleHUD");

	Params::RCTitleHUDBFL_GetTitleHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUDBFL.IsStartGalleryMovie
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCTitleHUDBFL::IsStartGalleryMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTitleHUDBFL", "IsStartGalleryMovie");

	Params::RCTitleHUDBFL_IsStartGalleryMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCTitleHUDBFL.SetTitleGalleryMovieEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMovieEvent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleHUDBFL::SetTitleGalleryMovieEvent(bool bInMovieEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCTitleHUDBFL", "SetTitleGalleryMovieEvent");

	Params::RCTitleHUDBFL_SetTitleGalleryMovieEvent Parms{};

	Parms.bInMovieEvent = bInMovieEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleLicense.Close
// (Final, Native, Public, BlueprintCallable)

void URCTitleLicense::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleLicense", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleLicense.InitializeLicense
// (Final, Native, Public, BlueprintCallable)

void URCTitleLicense::InitializeLicense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleLicense", "InitializeLicense");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleLicense.Open
// (Final, Native, Public, BlueprintCallable)

void URCTitleLicense::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleLicense", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleMenu.CancelWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleMenu::CancelWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleMenu", "CancelWrap");

	Params::RCTitleMenu_CancelWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleMenu.DecideWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleMenu::DecideWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleMenu", "DecideWrap");

	Params::RCTitleMenu_DecideWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleSubStory.CancelWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleSubStory::CancelWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleSubStory", "CancelWrap");

	Params::RCTitleSubStory_CancelWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleSubStory.DecideWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCTitleSubStory::DecideWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleSubStory", "DecideWrap");

	Params::RCTitleSubStory_DecideWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleSubStoryWindow.SelectListItem
// (Final, Native, Public, BlueprintCallable)

void URCTitleSubStoryWindow::SelectListItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleSubStoryWindow", "SelectListItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCTitleSubStoryWindow.SubStoryWindowSelectNavigation
// (Final, Native, Protected)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCTitleSubStoryWindow::SubStoryWindowSelectNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCTitleSubStoryWindow", "SubStoryWindowSelectNavigation");

	Params::RCTitleSubStoryWindow_SubStoryWindowSelectNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiBackLog.FinishBackLog
// (Final, Native, Public, BlueprintCallable)

void URCUiBackLog::FinishBackLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiBackLog", "FinishBackLog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiBackLog.OnButtonGuideCloseClick
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiBackLog::OnButtonGuideCloseClick(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiBackLog", "OnButtonGuideCloseClick");

	Params::RCUiBackLog_OnButtonGuideCloseClick Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiBackLog.OnButtonGuidePlayVoiceClick
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiBackLog::OnButtonGuidePlayVoiceClick(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiBackLog", "OnButtonGuidePlayVoiceClick");

	Params::RCUiBackLog_OnButtonGuidePlayVoiceClick Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiBackLog.StartBackLog
// (Final, Native, Public, BlueprintCallable)

void URCUiBackLog::StartBackLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiBackLog", "StartBackLog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutIn.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiCutIn::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutIn", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutIn.InitializeCutIn
// (Final, Native, Public, BlueprintCallable)

void URCUiCutIn::InitializeCutIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutIn", "InitializeCutIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutIn.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiCutIn::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutIn", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiCutIn.SetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCutInImage                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiCutIn::SetData(class FName InCutInImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiCutIn", "SetData");

	Params::RCUiCutIn_SetData Parms{};

	Parms.InCutInImage = InCutInImage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiFaderHUDBFL.IsAllWidgetsHidden
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiFaderHUDBFL::IsAllWidgetsHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUiFaderHUDBFL", "IsAllWidgetsHidden");

	Params::RCUiFaderHUDBFL_IsAllWidgetsHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUDBFL.IsAllWidgetsHiddenEnable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiFaderHUDBFL::IsAllWidgetsHiddenEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUiFaderHUDBFL", "IsAllWidgetsHiddenEnable");

	Params::RCUiFaderHUDBFL_IsAllWidgetsHiddenEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUDBFL.SetAllWidgetsHidden
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllWidgetsHidden                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiFaderHUDBFL::SetAllWidgetsHidden(bool bAllWidgetsHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUiFaderHUDBFL", "SetAllWidgetsHidden");

	Params::RCUiFaderHUDBFL_SetAllWidgetsHidden Parms{};

	Parms.bAllWidgetsHidden = bAllWidgetsHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiFaderHUDBFL.SetAllWidgetsHiddenEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiFaderHUDBFL::SetAllWidgetsHiddenEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUiFaderHUDBFL", "SetAllWidgetsHiddenEnable");

	Params::RCUiFaderHUDBFL_SetAllWidgetsHiddenEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.Close
// (Native, Public, BlueprintCallable)

void URCUiWidgetInteractive::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.CloseSelectable
// (Native, Public, BlueprintCallable)

void URCUiWidgetInteractive::CloseSelectable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "CloseSelectable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.FinishSelectable
// (Native, Public, BlueprintCallable)

void URCUiWidgetInteractive::FinishSelectable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "FinishSelectable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.GetInteractStatusInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCUiWidgetInteractive::GetInteractStatusInt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "GetInteractStatusInt");

	Params::RCUiWidgetInteractive_GetInteractStatusInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiWidgetInteractive.InitAnimKey
// (Native, Public, BlueprintCallable)

void URCUiWidgetInteractive::InitAnimKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "InitAnimKey");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.InitializeInteractIcon
// (Native, Public, BlueprintCallable)

void URCUiWidgetInteractive::InitializeInteractIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "InitializeInteractIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.Open
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMoveable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiWidgetInteractive::Open(bool bInMoveable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "Open");

	Params::RCUiWidgetInteractive_Open Parms{};

	Parms.bInMoveable = bInMoveable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.OpenSelectable
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInMoveable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiWidgetInteractive::OpenSelectable(bool bInMoveable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "OpenSelectable");

	Params::RCUiWidgetInteractive_OpenSelectable Parms{};

	Parms.bInMoveable = bInMoveable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.StartSelectable
// (Native, Public, BlueprintCallable)

void URCUiWidgetInteractive::StartSelectable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "StartSelectable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiWidgetInteractive.WaitOutside
// (Native, Public, BlueprintCallable)

void URCUiWidgetInteractive::WaitOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiWidgetInteractive", "WaitOutside");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractJoint.SetBusIcon
// (Final, Native, Public, BlueprintCallable)

void URCUiInteractJoint::SetBusIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractJoint", "SetBusIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractJoint.SetDoorIcon
// (Final, Native, Public, BlueprintCallable)

void URCUiInteractJoint::SetDoorIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractJoint", "SetDoorIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractTalk.SetTalkImg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsNzWorld                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiInteractTalk::SetTalkImg(bool bInIsNzWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractTalk", "SetTalkImg");

	Params::RCUiInteractTalk_SetTalkImg Parms{};

	Parms.bInIsNzWorld = bInIsNzWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiInteractTarget.SetTargetImg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsNzWorld                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiInteractTarget::SetTargetImg(bool bInIsNzWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiInteractTarget", "SetTargetImg");

	Params::RCUiInteractTarget_SetTargetImg Parms{};

	Parms.bInIsNzWorld = bInIsNzWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiIntTalk.SetTalkImg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsNzWorld                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiIntTalk::SetTalkImg(bool bInIsNzWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiIntTalk", "SetTalkImg");

	Params::RCUiIntTalk_SetTalkImg Parms{};

	Parms.bInIsNzWorld = bInIsNzWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMap.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMap::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMap", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMap.InitializeAreaMap
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMap::InitializeAreaMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMap", "InitializeAreaMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMap.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuAreaMap::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMap", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMap.SetLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMapID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuAreaMap::SetLocation(class FName InMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMap", "SetLocation");

	Params::RCUiMenuAreaMap_SetLocation Parms{};

	Parms.InMapID = InMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMap.StartCloseProcWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuAreaMap::StartCloseProcWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMap", "StartCloseProcWrap");

	Params::RCUiMenuAreaMap_StartCloseProcWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMap.StartFastTravelProcWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuAreaMap::StartFastTravelProcWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMap", "StartFastTravelProcWrap");

	Params::RCUiMenuAreaMap_StartFastTravelProcWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPager.SetInputFromButtonGuide
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuAreaMapPager::SetInputFromButtonGuide(ERCInputKeyType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPager", "SetInputFromButtonGuide");

	Params::RCUiMenuAreaMapPager_SetInputFromButtonGuide Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuAreaMapPager.SetPagerItemActive
// (Final, Native, Public)
// Parameters:
// int32                                   InActiveIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuAreaMapPager::SetPagerItemActive(int32 InActiveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuAreaMapPager", "SetPagerItemActive");

	Params::RCUiMenuAreaMapPager_SetPagerItemActive Parms{};

	Parms.InActiveIndex = InActiveIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuBackground.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuBackground::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuBackground", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuBackground.InitializeMenuBackground
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuBackground::InitializeMenuBackground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuBackground", "InitializeMenuBackground");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuBackground.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuBackground::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuBackground", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCharacter.MenuCharacterSelectStartPushWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuCharacter::MenuCharacterSelectStartPushWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCharacter", "MenuCharacterSelectStartPushWrap");

	Params::RCUiMenuCharacter_MenuCharacterSelectStartPushWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCharacterTop.FinishedCharacterViewer
// (Final, Native, Public)

void URCUiMenuCharacterTop::FinishedCharacterViewer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCharacterTop", "FinishedCharacterViewer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCharacterTop.NotifyCloseCharacterMenuWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuCharacterTop::NotifyCloseCharacterMenuWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCharacterTop", "NotifyCloseCharacterMenuWrap");

	Params::RCUiMenuCharacterTop_NotifyCloseCharacterMenuWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuCharacterTop.NotifyCloseCharacterViewerWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuCharacterTop::NotifyCloseCharacterViewerWrap(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuCharacterTop", "NotifyCloseCharacterViewerWrap");

	Params::RCUiMenuCharacterTop_NotifyCloseCharacterViewerWrap Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuContents.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuContents::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuContents", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuContents.ContentsButtonCustomNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuContents::ContentsButtonCustomNavigation(EUINavigation InNavigation, class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuContents", "ContentsButtonCustomNavigation");

	Params::RCUiMenuContents_ContentsButtonCustomNavigation Parms{};

	Parms.InNavigation = InNavigation;
	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuContents.InitializeMenuContents
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuContents::InitializeMenuContents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuContents", "InitializeMenuContents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuContents.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSelectDefault                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuContents::Open(bool bInSelectDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuContents", "Open");

	Params::RCUiMenuContents_Open Parms{};

	Parms.bInSelectDefault = bInSelectDefault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuContents.StartPush
// (Final, Native, Protected, BlueprintCallable)

void URCUiMenuContents::StartPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuContents", "StartPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectivePoint.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectivePoint::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectivePoint", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectivePoint.InitializeMenuDetectivePoint
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectivePoint::InitializeMenuDetectivePoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectivePoint", "InitializeMenuDetectivePoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectivePoint.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectivePoint::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectivePoint", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectivePoint.Wait
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectivePoint::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectivePoint", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectivePoint.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectivePoint::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectivePoint", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectiveRank.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectiveRank::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectiveRank", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectiveRank.InitializeMenuDetectiveRank
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectiveRank::InitializeMenuDetectiveRank()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectiveRank", "InitializeMenuDetectiveRank");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectiveRank.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectiveRank::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectiveRank", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectiveRank.Wait
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectiveRank::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectiveRank", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuDetectiveRank.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuDetectiveRank::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuDetectiveRank", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuGlossaryList.GlossaryNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCUiMenuGlossaryList::GlossaryNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuGlossaryList", "GlossaryNavigation");

	Params::RCUiMenuGlossaryList_GlossaryNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuHelp.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuHelp::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuHelp", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuHelp.InitializeMenuHelp
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuHelp::InitializeMenuHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuHelp", "InitializeMenuHelp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuHelp.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuHelp::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuHelp", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuHelp.StartRun
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuHelp::StartRun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuHelp", "StartRun");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuKagiList.DecideKagi
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuKagiList::DecideKagi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuKagiList", "DecideKagi");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuKagiList.KagiMenuCustomNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                InPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuKagiList::KagiMenuCustomNavigation(EUINavigation InNavigation, class APlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuKagiList", "KagiMenuCustomNavigation");

	Params::RCUiMenuKagiList_KagiMenuCustomNavigation Parms{};

	Parms.InNavigation = InNavigation;
	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuKagiList.KagiNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCUiMenuKagiList::KagiNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuKagiList", "KagiNavigation");

	Params::RCUiMenuKagiList_KagiNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuNextTarget.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuNextTarget::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuNextTarget", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuNextTarget.InitializeMenuNextTarget
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuNextTarget::InitializeMenuNextTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuNextTarget", "InitializeMenuNextTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuNextTarget.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuNextTarget::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuNextTarget", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuNextTarget.SetNextTargetID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTargetID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuNextTarget::SetNextTargetID(class FName InTargetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuNextTarget", "SetNextTargetID");

	Params::RCUiMenuNextTarget_SetNextTargetID Parms{};

	Parms.InTargetID = InTargetID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillTree.CloseSkillTreeWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuSkillTree::CloseSkillTreeWrap(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillTree", "CloseSkillTreeWrap");

	Params::RCUiMenuSkillTree_CloseSkillTreeWrap Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillTree.DecideSkill
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuSkillTree::DecideSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillTree", "DecideSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillTree.DecideSkillWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuSkillTree::DecideSkillWrap(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillTree", "DecideSkillWrap");

	Params::RCUiMenuSkillTree_DecideSkillWrap Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillTree.RemoveAllSkillsWrap
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuSkillTree::RemoveAllSkillsWrap(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillTree", "RemoveAllSkillsWrap");

	Params::RCUiMenuSkillTree_RemoveAllSkillsWrap Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuSkillTree.SkillNavigation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* URCUiMenuSkillTree::SkillNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuSkillTree", "SkillNavigation");

	Params::RCUiMenuSkillTree_SkillNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiMenuTitleName.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuTitleName::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuTitleName", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuTitleName.InitializeMenuTitleName
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuTitleName::InitializeMenuTitleName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuTitleName", "InitializeMenuTitleName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuTitleName.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCGameMenuSelectType                   InMenuType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuTitleName::Open(ERCGameMenuSelectType InMenuType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuTitleName", "Open");

	Params::RCUiMenuTitleName_Open Parms{};

	Parms.InMenuType = InMenuType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMap::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.CloseAreaSelect
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMap::CloseAreaSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "CloseAreaSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.FinishTutorial
// (Final, Native, Private, BlueprintCallable)

void URCUiMenuWorldMap::FinishTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "FinishTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.InitializeMenuWorldMap
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMap::InitializeMenuWorldMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "InitializeMenuWorldMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.OnButtonGuideBackButtonClick
// (Final, Native, Private)
// Parameters:
// ERCInputKeyType                         InKeyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuWorldMap::OnButtonGuideBackButtonClick(ERCInputKeyType InKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "OnButtonGuideBackButtonClick");

	Params::RCUiMenuWorldMap_OnButtonGuideBackButtonClick Parms{};

	Parms.InKeyType = InKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.OnChangeInputPlatform
// (Final, Native, Private)
// Parameters:
// ERCInputPlatform                        InInputPlatform                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuWorldMap::OnChangeInputPlatform(ERCInputPlatform InInputPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "OnChangeInputPlatform");

	Params::RCUiMenuWorldMap_OnChangeInputPlatform Parms{};

	Parms.InInputPlatform = InInputPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.OnFinishGenericWindow
// (Final, Native, Private)
// Parameters:
// bool                                    bResult                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuWorldMap::OnFinishGenericWindow(bool bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "OnFinishGenericWindow");

	Params::RCUiMenuWorldMap_OnFinishGenericWindow Parms{};

	Parms.bResult = bResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.OnFinishOnCursorAnim
// (Final, Native, Private)

void URCUiMenuWorldMap::OnFinishOnCursorAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "OnFinishOnCursorAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.OnFinishSelectStartAnim
// (Final, Native, Private)

void URCUiMenuWorldMap::OnFinishSelectStartAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "OnFinishSelectStartAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMap::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.OpenAreaSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsBusMenu                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiMenuWorldMap::OpenAreaSelect(bool bInIsBusMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "OpenAreaSelect");

	Params::RCUiMenuWorldMap_OpenAreaSelect Parms{};

	Parms.bInIsBusMenu = bInIsBusMenu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.StartPush
// (Final, Native, Protected, BlueprintCallable)

void URCUiMenuWorldMap::StartPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "StartPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMap.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMap::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMap", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.InitializeMenuWorldMapArea
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::InitializeMenuWorldMapArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "InitializeMenuWorldMapArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.NotSelect
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::NotSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "NotSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.NotSelectShadow
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::NotSelectShadow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "NotSelectShadow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.OnCursor
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::OnCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "OnCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.OutCursor
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::OutCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "OutCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.Push
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::Push()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "Push");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.ShowDefault
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::ShowDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "ShowDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.ShowNewArea
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::ShowNewArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "ShowNewArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapArea.ShowOff
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapArea::ShowOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapArea", "ShowOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapPointer.FinishCursor
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapPointer::FinishCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapPointer", "FinishCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapPointer.FinishDefault
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapPointer::FinishDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapPointer", "FinishDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapPointer.FinishOverlap
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapPointer::FinishOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapPointer", "FinishOverlap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapPointer.InitializeWorldMapPointer
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapPointer::InitializeWorldMapPointer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapPointer", "InitializeWorldMapPointer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapPointer.OffMark
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapPointer::OffMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapPointer", "OffMark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapPointer.OnMark
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapPointer::OnMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapPointer", "OnMark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiMenuWorldMapPointer.StartDefault
// (Final, Native, Public, BlueprintCallable)

void URCUiMenuWorldMapPointer::StartDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiMenuWorldMapPointer", "StartDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionBar_Choice.OnComboBoxValueChangedEvent
// (Final, Native, Public)
// Parameters:
// int32                                   ind                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionBar_Choice::OnComboBoxValueChangedEvent(int32 ind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBar_Choice", "OnComboBoxValueChangedEvent");

	Params::RCUiOptionBar_Choice_OnComboBoxValueChangedEvent Parms{};

	Parms.ind = ind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionBar_Choice.OnWindowModeChangeEvent
// (Final, Native, Public)
// Parameters:
// ERCOptionWindowMode                     Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   dispNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionBar_Choice::OnWindowModeChangeEvent(ERCOptionWindowMode Mode, int32 dispNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBar_Choice", "OnWindowModeChangeEvent");

	Params::RCUiOptionBar_Choice_OnWindowModeChangeEvent Parms{};

	Parms.Mode = Mode;
	Parms.dispNum = dispNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionBar_Volume.SynchronizeToSlider
// (Final, Native, Public)
// Parameters:
// int32                                   ind                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCUiOptionBar_Volume::SynchronizeToSlider(int32 ind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBar_Volume", "SynchronizeToSlider");

	Params::RCUiOptionBar_Volume_SynchronizeToSlider Parms{};

	Parms.ind = ind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiOptionBarComboBox.GetComboBoxListWidget
// (Final, Native, Public)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* URCUiOptionBarComboBox::GetComboBoxListWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBarComboBox", "GetComboBoxListWidget");

	Params::RCUiOptionBarComboBox_GetComboBoxListWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiOptionBarComboBox.OnButtonClickEvent
// (Final, Native, Public)

void URCUiOptionBarComboBox::OnButtonClickEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBarComboBox", "OnButtonClickEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionBarComboBox.OnClickItemEvent
// (Final, Native, Public)
// Parameters:
// int32                                   ind                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionBarComboBox::OnClickItemEvent(int32 ind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBarComboBox", "OnClickItemEvent");

	Params::RCUiOptionBarComboBox_OnClickItemEvent Parms{};

	Parms.ind = ind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionBarComboBox.OnMenuOpenChangedEvent
// (Final, Native, Public)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionBarComboBox::OnMenuOpenChangedEvent(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBarComboBox", "OnMenuOpenChangedEvent");

	Params::RCUiOptionBarComboBox_OnMenuOpenChangedEvent Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionBarComboBoxItem.OnButtonClickEvent
// (Final, Native, Public)

void URCUiOptionBarComboBoxItem::OnButtonClickEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBarComboBoxItem", "OnButtonClickEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionBarComboBoxItemList.OnItemEnterEvent
// (Final, Native, Public)
// Parameters:
// int32                                   ind                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionBarComboBoxItemList::OnItemEnterEvent(int32 ind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBarComboBoxItemList", "OnItemEnterEvent");

	Params::RCUiOptionBarComboBoxItemList_OnItemEnterEvent Parms{};

	Parms.ind = ind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionBarComboBoxItemList.SyncListSize
// (Final, Native, Public)

void URCUiOptionBarComboBoxItemList::SyncListSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionBarComboBoxItemList", "SyncListSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionLayout.OnButtonGuideClose
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionLayout::OnButtonGuideClose(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionLayout", "OnButtonGuideClose");

	Params::RCUiOptionLayout_OnButtonGuideClose Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionLayout.OnButtonGuideInitializeBar
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionLayout::OnButtonGuideInitializeBar(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionLayout", "OnButtonGuideInitializeBar");

	Params::RCUiOptionLayout_OnButtonGuideInitializeBar Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionLayout.OnButtonGuideInitializeKey
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionLayout::OnButtonGuideInitializeKey(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionLayout", "OnButtonGuideInitializeKey");

	Params::RCUiOptionLayout_OnButtonGuideInitializeKey Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionLayout.OnButtonGuideOptionEnter
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionLayout::OnButtonGuideOptionEnter(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionLayout", "OnButtonGuideOptionEnter");

	Params::RCUiOptionLayout_OnButtonGuideOptionEnter Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionLayout.OnButtonGuideSelectKey
// (Final, Native, Public)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiOptionLayout::OnButtonGuideSelectKey(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionLayout", "OnButtonGuideSelectKey");

	Params::RCUiOptionLayout_OnButtonGuideSelectKey Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiOptionListBar.BarArrowButtonDownEvent
// (Final, Native, Public)

void URCUiOptionListBar::BarArrowButtonDownEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiOptionListBar", "BarArrowButtonDownEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSavingIcon.EndSave
// (Final, Native, Public, BlueprintCallable)

void URCUiSavingIcon::EndSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSavingIcon", "EndSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSavingIcon.SetAutoCloseFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSavingIcon::SetAutoCloseFlag(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSavingIcon", "SetAutoCloseFlag");

	Params::RCUiSavingIcon_SetAutoCloseFlag Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSavingIcon.StartSave
// (Final, Native, Public, BlueprintCallable)

void URCUiSavingIcon::StartSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSavingIcon", "StartSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSavingIcon.IsSaving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiSavingIcon::IsSaving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSavingIcon", "IsSaving");

	Params::RCUiSavingIcon_IsSaving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiSoundNovel.AddSpace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSpaceNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSoundNovel::AddSpace(int32 InSpaceNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "AddSpace");

	Params::RCUiSoundNovel_AddSpace Parms{};

	Parms.InSpaceNum = InSpaceNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.AddText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSoundNovel::AddText(const class FString& inString, float InDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "AddText");

	Params::RCUiSoundNovel_AddText Parms{};

	Parms.inString = std::move(inString);
	Parms.InDelay = InDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.ClearText
// (Final, Native, Public, BlueprintCallable)

void URCUiSoundNovel::ClearText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "ClearText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiSoundNovel::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.GetMessStatusInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCUiSoundNovel::GetMessStatusInt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "GetMessStatusInt");

	Params::RCUiSoundNovel_GetMessStatusInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiSoundNovel.GetSkipTyping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiSoundNovel::GetSkipTyping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "GetSkipTyping");

	Params::RCUiSoundNovel_GetSkipTyping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiSoundNovel.GetSoundNovelStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESoundNovelStatus                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESoundNovelStatus URCUiSoundNovel::GetSoundNovelStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "GetSoundNovelStatus");

	Params::RCUiSoundNovel_GetSoundNovelStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiSoundNovel.HideBackgroundFade
// (Final, Native, Public, BlueprintCallable)

void URCUiSoundNovel::HideBackgroundFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "HideBackgroundFade");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.InitializeSoundNovel
// (Final, Native, Public, BlueprintCallable)

void URCUiSoundNovel::InitializeSoundNovel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "InitializeSoundNovel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiSoundNovel::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.SetForceAutoFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceAuto                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowAutoIcon                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSoundNovel::SetForceAutoFlag(bool bForceAuto, bool bShowAutoIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "SetForceAutoFlag");

	Params::RCUiSoundNovel_SetForceAutoFlag Parms{};

	Parms.bForceAuto = bForceAuto;
	Parms.bShowAutoIcon = bShowAutoIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.SetForceTextSpeedSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsForceTextSpeed                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InForceTextSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSoundNovel::SetForceTextSpeedSettings(bool bInIsForceTextSpeed, int32 InForceTextSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "SetForceTextSpeedSettings");

	Params::RCUiSoundNovel_SetForceTextSpeedSettings Parms{};

	Parms.bInIsForceTextSpeed = bInIsForceTextSpeed;
	Parms.InForceTextSpeed = InForceTextSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.SetMessageSpeed
// (Final, Native, Public, BlueprintCallable)

void URCUiSoundNovel::SetMessageSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "SetMessageSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.SetShakeData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWidthX                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWidthY                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InInterval                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSoundNovel::SetShakeData(float InWidthX, float InWidthY, float InInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "SetShakeData");

	Params::RCUiSoundNovel_SetShakeData Parms{};

	Parms.InWidthX = InWidthX;
	Parms.InWidthY = InWidthY;
	Parms.InInterval = InInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.ShowBackgroundFade
// (Final, Native, Public, BlueprintCallable)

void URCUiSoundNovel::ShowBackgroundFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "ShowBackgroundFade");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSoundNovel.WaitingOpenBackgroundFade
// (Final, Native, Public, BlueprintCallable)

void URCUiSoundNovel::WaitingOpenBackgroundFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSoundNovel", "WaitingOpenBackgroundFade");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiStaffRoll.FinishStaffRoll
// (Final, Native, Public, BlueprintCallable)

void URCUiStaffRoll::FinishStaffRoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "FinishStaffRoll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiStaffRoll.InitStaffRoll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpaceSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiStaffRoll::InitStaffRoll(float StartTime, float EndTime, float SpaceSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "InitStaffRoll");

	Params::RCUiStaffRoll_InitStaffRoll Parms{};

	Parms.StartTime = StartTime;
	Parms.EndTime = EndTime;
	Parms.SpaceSize = SpaceSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiStaffRoll.MovieFinishEvent
// (Final, Native, Protected)

void URCUiStaffRoll::MovieFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "MovieFinishEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiStaffRoll.SetStaffRollDataAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URCStaffRollDataAsset*            Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiStaffRoll::SetStaffRollDataAsset(class URCStaffRollDataAsset* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "SetStaffRollDataAsset");

	Params::RCUiStaffRoll_SetStaffRollDataAsset Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiStaffRoll.StartMovie
// (Final, Native, Public, BlueprintCallable)

void URCUiStaffRoll::StartMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "StartMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiStaffRoll.StartStaffRoll
// (Final, Native, Public, BlueprintCallable)

void URCUiStaffRoll::StartStaffRoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "StartStaffRoll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiStaffRoll.GetFinishTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCUiStaffRoll::GetFinishTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "GetFinishTime");

	Params::RCUiStaffRoll_GetFinishTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiStaffRoll.GetMovieStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URCUiStaffRoll::GetMovieStartTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "GetMovieStartTime");

	Params::RCUiStaffRoll_GetMovieStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiStaffRoll.IsEndScroll
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiStaffRoll::IsEndScroll() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "IsEndScroll");

	Params::RCUiStaffRoll_IsEndScroll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiStaffRoll.IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiStaffRoll::IsFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "IsFinished");

	Params::RCUiStaffRoll_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiStaffRoll.IsInitializedStaffRoll
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiStaffRoll::IsInitializedStaffRoll() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiStaffRoll", "IsInitializedStaffRoll");

	Params::RCUiStaffRoll_IsInitializedStaffRoll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiSubtitle.CallDelay
// (Final, Native, Public, BlueprintCallable)

void URCUiSubtitle::CallDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "CallDelay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.CallEndVoice
// (Final, Native, Public, BlueprintCallable)

void URCUiSubtitle::CallEndVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "CallEndVoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.Close
// (Final, Native, Public, BlueprintCallable)

void URCUiSubtitle::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.DisplaceSubtitle
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InVector                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSubtitle::DisplaceSubtitle(const struct FVector2D& InVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "DisplaceSubtitle");

	Params::RCUiSubtitle_DisplaceSubtitle Parms{};

	Parms.InVector = std::move(InVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.GetSkipVoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUiSubtitle::GetSkipVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "GetSkipVoice");

	Params::RCUiSubtitle_GetSkipVoice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiSubtitle.GetSubtitleStatusNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCUiSubtitle::GetSubtitleStatusNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "GetSubtitleStatusNum");

	Params::RCUiSubtitle_GetSubtitleStatusNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUiSubtitle.InitializeSubtitle
// (Final, Native, Public, BlueprintCallable)

void URCUiSubtitle::InitializeSubtitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "InitializeSubtitle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.Open
// (Final, Native, Public, BlueprintCallable)

void URCUiSubtitle::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.Open_WaitPush
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnableSkipVoice                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSubtitle::Open_WaitPush(bool bInEnableSkipVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "Open_WaitPush");

	Params::RCUiSubtitle_Open_WaitPush Parms{};

	Parms.bInEnableSkipVoice = bInEnableSkipVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInOnlyCursor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiSubtitle::SetText(const class FString& InName, const class FString& inString, float InDelay, bool bInOnlyCursor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "SetText");

	Params::RCUiSubtitle_SetText Parms{};

	Parms.InName = std::move(InName);
	Parms.inString = std::move(inString);
	Parms.InDelay = InDelay;
	Parms.bInOnlyCursor = bInOnlyCursor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.StartDelay
// (Final, Native, Protected, BlueprintCallable)

void URCUiSubtitle::StartDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "StartDelay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.StartShow
// (Native, Protected, BlueprintCallable)

void URCUiSubtitle::StartShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "StartShow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.UndoDisplaceSubtitle
// (Final, Native, Public, BlueprintCallable)

void URCUiSubtitle::UndoDisplaceSubtitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "UndoDisplaceSubtitle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.Wait
// (Final, Native, Public, BlueprintCallable)

void URCUiSubtitle::Wait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "Wait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiSubtitle.WaitingOpen
// (Final, Native, Public, BlueprintCallable)

void URCUiSubtitle::WaitingOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiSubtitle", "WaitingOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiTutorialWindow.OnButtonGuideCloseClick
// (Final, Native, Protected)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiTutorialWindow::OnButtonGuideCloseClick(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiTutorialWindow", "OnButtonGuideCloseClick");

	Params::RCUiTutorialWindow_OnButtonGuideCloseClick Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUiTutorialWindow.OnPagerButtonGuideClick
// (Final, Native, Protected)
// Parameters:
// ERCInputKeyType                         KeyType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUiTutorialWindow::OnPagerButtonGuideClick(ERCInputKeyType KeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCUiTutorialWindow", "OnPagerButtonGuideClick");

	Params::RCUiTutorialWindow_OnPagerButtonGuideClick Parms{};

	Parms.KeyType = KeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUtilityFunctionLibrary.GeRCCameraManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCCameraManager*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCCameraManager* URCUtilityFunctionLibrary::GeRCCameraManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "GeRCCameraManager");

	Params::RCUtilityFunctionLibrary_GeRCCameraManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.GeRCPlayerCameraManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCPlayerCameraManager*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCPlayerCameraManager* URCUtilityFunctionLibrary::GeRCPlayerCameraManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "GeRCPlayerCameraManager");

	Params::RCUtilityFunctionLibrary_GeRCPlayerCameraManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.GetCurrentArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCUtilityFunctionLibrary::GetCurrentArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "GetCurrentArea");

	Params::RCUtilityFunctionLibrary_GetCurrentArea Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.GetGameVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URCUtilityFunctionLibrary::GetGameVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "GetGameVersion");

	Params::RCUtilityFunctionLibrary_GetGameVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.GetRCPlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ARCPlayerController*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCPlayerController* URCUtilityFunctionLibrary::GetRCPlayerController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "GetRCPlayerController");

	Params::RCUtilityFunctionLibrary_GetRCPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.GetToonDirectionalLightRotatorOffset
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FRotator URCUtilityFunctionLibrary::GetToonDirectionalLightRotatorOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "GetToonDirectionalLightRotatorOffset");

	Params::RCUtilityFunctionLibrary_GetToonDirectionalLightRotatorOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.IsCameraACtor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           act                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUtilityFunctionLibrary::IsCameraACtor(class AActor* act)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "IsCameraACtor");

	Params::RCUtilityFunctionLibrary_IsCameraACtor Parms{};

	Parms.act = act;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.ResetToonDirectionalLightInfo
// (Final, Native, Static, Public, BlueprintCallable)

void URCUtilityFunctionLibrary::ResetToonDirectionalLightInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "ResetToonDirectionalLightInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUtilityFunctionLibrary.SetCascadeRainColor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Map                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUtilityFunctionLibrary::SetCascadeRainColor(class FName Map, class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "SetCascadeRainColor");

	Params::RCUtilityFunctionLibrary_SetCascadeRainColor Parms{};

	Parms.Map = Map;
	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.SetCascadeRainColorIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUtilityFunctionLibrary::SetCascadeRainColorIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "SetCascadeRainColorIndex");

	Params::RCUtilityFunctionLibrary_SetCascadeRainColorIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.SetDrawRain
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCUtilityFunctionLibrary::SetDrawRain(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "SetDrawRain");

	Params::RCUtilityFunctionLibrary_SetDrawRain Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUtilityFunctionLibrary.SetRainColorTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUtilityFunctionLibrary::SetRainColorTable(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "SetRainColorTable");

	Params::RCUtilityFunctionLibrary_SetRainColorTable Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.SetRainForce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUtilityFunctionLibrary::SetRainForce(int32 Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "SetRainForce");

	Params::RCUtilityFunctionLibrary_SetRainForce Parms{};

	Parms.Force = Force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.SetRainRot
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rot                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCUtilityFunctionLibrary::SetRainRot(const struct FRotator& Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "SetRainRot");

	Params::RCUtilityFunctionLibrary_SetRainRot Parms{};

	Parms.Rot = std::move(Rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCUtilityFunctionLibrary.SetToonDirectionalLightInfo
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InCameraActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotatorOffset                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void URCUtilityFunctionLibrary::SetToonDirectionalLightInfo(class AActor* InCameraActor, const struct FRotator& InRotatorOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "SetToonDirectionalLightInfo");

	Params::RCUtilityFunctionLibrary_SetToonDirectionalLightInfo Parms{};

	Parms.InCameraActor = InCameraActor;
	Parms.InRotatorOffset = std::move(InRotatorOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCUtilityFunctionLibrary.SetToonDirectionalLightRotatorOffset
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         InRotatorOffset                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void URCUtilityFunctionLibrary::SetToonDirectionalLightRotatorOffset(const struct FRotator& InRotatorOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCUtilityFunctionLibrary", "SetToonDirectionalLightRotatorOffset");

	Params::RCUtilityFunctionLibrary_SetToonDirectionalLightRotatorOffset Parms{};

	Parms.InRotatorOffset = std::move(InRotatorOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVariableFigureBFL.GetFigureNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InPersonID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URCVariableFigureBFL::GetFigureNum(class FName InPersonID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableFigureBFL", "GetFigureNum");

	Params::RCVariableFigureBFL_GetFigureNum Parms{};

	Parms.InPersonID = InPersonID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableFigureBFL.IsFigure
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InPersonID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFigureNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCVariableFigureBFL::IsFigure(class FName InPersonID, int32 InFigureNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableFigureBFL", "IsFigure");

	Params::RCVariableFigureBFL_IsFigure Parms{};

	Parms.InPersonID = InPersonID;
	Parms.InFigureNum = InFigureNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVariableFigureBFL.SetFigure
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InPersonID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFigureNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVariableFigureBFL::SetFigure(class FName InPersonID, int32 InFigureNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVariableFigureBFL", "SetFigure");

	Params::RCVariableFigureBFL_SetFigure Parms{};

	Parms.InPersonID = InPersonID;
	Parms.InFigureNum = InFigureNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleBPFunctionLibrary.GetCrossWalkSignal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ECrossWalkSignalType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECrossWalkSignalType URCVehicleBPFunctionLibrary::GetCrossWalkSignal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVehicleBPFunctionLibrary", "GetCrossWalkSignal");

	Params::RCVehicleBPFunctionLibrary_GetCrossWalkSignal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleBPFunctionLibrary.GetCrossWalkTriggerBox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCVehicleBPFunctionLibrary::GetCrossWalkTriggerBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVehicleBPFunctionLibrary", "GetCrossWalkTriggerBox");

	Params::RCVehicleBPFunctionLibrary_GetCrossWalkTriggerBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleBPFunctionLibrary.GetPlayerActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCVehicleBPFunctionLibrary::GetPlayerActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVehicleBPFunctionLibrary", "GetPlayerActor");

	Params::RCVehicleBPFunctionLibrary_GetPlayerActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleBPFunctionLibrary.SetCrossWalkSignal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ECrossWalkSignalType                    signalType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVehicleBPFunctionLibrary::SetCrossWalkSignal(ECrossWalkSignalType signalType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVehicleBPFunctionLibrary", "SetCrossWalkSignal");

	Params::RCVehicleBPFunctionLibrary_SetCrossWalkSignal Parms{};

	Parms.signalType = signalType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleBPFunctionLibrary.SetCrossWalkTriggerBox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           crossWalkTrigger                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVehicleBPFunctionLibrary::SetCrossWalkTriggerBox(class AActor* crossWalkTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RCVehicleBPFunctionLibrary", "SetCrossWalkTriggerBox");

	Params::RCVehicleBPFunctionLibrary_SetCrossWalkTriggerBox Parms{};

	Parms.crossWalkTrigger = crossWalkTrigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.Accelerator
// (Final, Native, Public, BlueprintCallable)

void URCVehicleControlComponent::Accelerator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "Accelerator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.Brake
// (Final, Native, Public, BlueprintCallable)

void URCVehicleControlComponent::Brake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "Brake");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.ChangeState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   mstate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVehicleControlComponent::ChangeState(int32 mstate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "ChangeState");

	Params::RCVehicleControlComponent_ChangeState Parms{};

	Parms.mstate = mstate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.CheckNearTarget
// (Final, Native, Public, BlueprintCallable)

void URCVehicleControlComponent::CheckNearTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "CheckNearTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.GetCurrentState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVehicleState                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EVehicleState URCVehicleControlComponent::GetCurrentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "GetCurrentState");

	Params::RCVehicleControlComponent_GetCurrentState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleControlComponent.GetCurrentTarget
// (Final, Native, Public)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCVehicleControlComponent::GetCurrentTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "GetCurrentTarget");

	Params::RCVehicleControlComponent_GetCurrentTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleControlComponent.GetNextTarget
// (Final, Native, Public)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* URCVehicleControlComponent::GetNextTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "GetNextTarget");

	Params::RCVehicleControlComponent_GetNextTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleControlComponent.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           controlActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCVehicleTarget*                 startTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCVehicleTarget*                 endTarget                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ARCVehicleTarget*>         rootTargetArray                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URCVehicleControlComponent::Initialize(class AActor* controlActor, class ARCVehicleTarget* startTarget, class ARCVehicleTarget* endTarget, const TArray<class ARCVehicleTarget*>& rootTargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "Initialize");

	Params::RCVehicleControlComponent_Initialize Parms{};

	Parms.controlActor = controlActor;
	Parms.startTarget = startTarget;
	Parms.endTarget = endTarget;
	Parms.rootTargetArray = std::move(rootTargetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.Move
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVehicleControlComponent::Move(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "Move");

	Params::RCVehicleControlComponent_Move Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.RollTiresForPitch
// (Final, Native, Public)

void URCVehicleControlComponent::RollTiresForPitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "RollTiresForPitch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.SetBodyMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*             pBodyMesh                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVehicleControlComponent::SetBodyMesh(class UStaticMeshComponent* pBodyMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "SetBodyMesh");

	Params::RCVehicleControlComponent_SetBodyMesh Parms{};

	Parms.pBodyMesh = pBodyMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.SetControlActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           pControlActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVehicleControlComponent::SetControlActor(class AActor* pControlActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "SetControlActor");

	Params::RCVehicleControlComponent_SetControlActor Parms{};

	Parms.pControlActor = pControlActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.SetStartTargetPos
// (Final, Native, Public, BlueprintCallable)

void URCVehicleControlComponent::SetStartTargetPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "SetStartTargetPos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.SetTiresMeshArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UStaticMeshComponent*>     bpTiresMeshArray                                       (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void URCVehicleControlComponent::SetTiresMeshArray(const TArray<class UStaticMeshComponent*>& bpTiresMeshArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "SetTiresMeshArray");

	Params::RCVehicleControlComponent_SetTiresMeshArray Parms{};

	Parms.bpTiresMeshArray = std::move(bpTiresMeshArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.Slow
// (Final, Native, Public, BlueprintCallable)

void URCVehicleControlComponent::Slow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "Slow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleControlComponent.SpeedControl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCVehicleControlComponent::SpeedControl(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleControlComponent", "SpeedControl");

	Params::RCVehicleControlComponent_SpeedControl Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleController.CheckCrossWalkLength
// (Final, Native, Public, BlueprintCallable)

void ARCVehicleController::CheckCrossWalkLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleController", "CheckCrossWalkLength");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleController.CheckFinishVehicle
// (Final, Native, Public, BlueprintCallable)

void ARCVehicleController::CheckFinishVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleController", "CheckFinishVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleController.CheckPopUpCount
// (Final, Native, Public, BlueprintCallable)

void ARCVehicleController::CheckPopUpCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleController", "CheckPopUpCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleController.GerNearCrossWalk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           pCheckActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVehicleCrossWalkState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EVehicleCrossWalkState ARCVehicleController::GerNearCrossWalk(class AActor* pCheckActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleController", "GerNearCrossWalk");

	Params::RCVehicleController_GerNearCrossWalk Parms{};

	Parms.pCheckActor = pCheckActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleController.GetVehicleRateIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           rateArray                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCVehicleController::GetVehicleRateIndex(const TArray<int32>& rateArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleController", "GetVehicleRateIndex");

	Params::RCVehicleController_GetVehicleRateIndex Parms{};

	Parms.rateArray = std::move(rateArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleController.Initialize
// (Final, Native, Public, BlueprintCallable)

void ARCVehicleController::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleController", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleController.isOpenCrossWalk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCVehicleController::isOpenCrossWalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleController", "isOpenCrossWalk");

	Params::RCVehicleController_isOpenCrossWalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleController.PopUpVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ARCVehicleTarget*                 pInitStartTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVehicleLaneType                        laneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARCVehicleController::PopUpVehicle(class ARCVehicleTarget* pInitStartTarget, EVehicleLaneType laneType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleController", "PopUpVehicle");

	Params::RCVehicleController_PopUpVehicle Parms{};

	Parms.pInitStartTarget = pInitStartTarget;
	Parms.laneType = laneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleManager.AddRunningVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           pVehicle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVehicleLaneType                        laneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCVehicleManager::AddRunningVehicle(class AActor* pVehicle, EVehicleLaneType laneType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "AddRunningVehicle");

	Params::RCVehicleManager_AddRunningVehicle Parms{};

	Parms.pVehicle = pVehicle;
	Parms.laneType = laneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleManager.CheckFinishedVehicle
// (Final, Native, Public, BlueprintCallable)

void ARCVehicleManager::CheckFinishedVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "CheckFinishedVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleManager.GetEnabledVehicleArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ARCVehicleManager::GetEnabledVehicleArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "GetEnabledVehicleArray");

	Params::RCVehicleManager_GetEnabledVehicleArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleManager.GetLaneEndTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVehicleLaneType                        laneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCVehicleTarget*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCVehicleTarget* ARCVehicleManager::GetLaneEndTarget(EVehicleLaneType laneType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "GetLaneEndTarget");

	Params::RCVehicleManager_GetLaneEndTarget Parms{};

	Parms.laneType = laneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleManager.GetLaneRootTargetArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVehicleLaneType                        laneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ARCVehicleTarget*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ARCVehicleTarget*> ARCVehicleManager::GetLaneRootTargetArray(EVehicleLaneType laneType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "GetLaneRootTargetArray");

	Params::RCVehicleManager_GetLaneRootTargetArray Parms{};

	Parms.laneType = laneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleManager.GetLaneStartTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVehicleLaneType                        laneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARCVehicleTarget*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARCVehicleTarget* ARCVehicleManager::GetLaneStartTarget(EVehicleLaneType laneType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "GetLaneStartTarget");

	Params::RCVehicleManager_GetLaneStartTarget Parms{};

	Parms.laneType = laneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleManager.GetRunningVehicleArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRCRunningVehicleData>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRCRunningVehicleData> ARCVehicleManager::GetRunningVehicleArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "GetRunningVehicleArray");

	Params::RCVehicleManager_GetRunningVehicleArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleManager.GetRunningVehicleForLane
// (Final, Native, Public)
// Parameters:
// EVehicleLaneType                        laneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ARCVehicleManager::GetRunningVehicleForLane(EVehicleLaneType laneType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "GetRunningVehicleForLane");

	Params::RCVehicleManager_GetRunningVehicleForLane Parms{};

	Parms.laneType = laneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCVehicleManager.SetEnableEngineSound
// (Final, Native, Public)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCVehicleManager::SetEnableEngineSound(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "SetEnableEngineSound");

	Params::RCVehicleManager_SetEnableEngineSound Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleManager.SetEnableVehicleArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   enableVehicleArray                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCVehicleManager::SetEnableVehicleArray(const TArray<class AActor*>& enableVehicleArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "SetEnableVehicleArray");

	Params::RCVehicleManager_SetEnableVehicleArray Parms{};

	Parms.enableVehicleArray = std::move(enableVehicleArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleManager.SetLaneTargetArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVehicleLaneType                        laneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   laneTargetArray                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void ARCVehicleManager::SetLaneTargetArray(EVehicleLaneType laneType, const TArray<class AActor*>& laneTargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "SetLaneTargetArray");

	Params::RCVehicleManager_SetLaneTargetArray Parms{};

	Parms.laneType = laneType;
	Parms.laneTargetArray = std::move(laneTargetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleManager.SetVisible
// (Final, Native, Public)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARCVehicleManager::SetVisible(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleManager", "SetVisible");

	Params::RCVehicleManager_SetVisible Parms{};

	Parms.IsVisible = IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCVehicleTarget.GetRootIndex
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARCVehicleTarget::GetRootIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCVehicleTarget", "GetRootIndex");

	Params::RCVehicleTarget_GetRootIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCWanderingSpiritAnimInstance.SetLoopFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCWanderingSpiritAnimInstance::SetLoopFlag(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWanderingSpiritAnimInstance", "SetLoopFlag");

	Params::RCWanderingSpiritAnimInstance_SetLoopFlag Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCWanderingSpiritAnimInstance.SetMotionPart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERCWanderingSpiritMotionPart            part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCWanderingSpiritAnimInstance::SetMotionPart(ERCWanderingSpiritMotionPart part)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWanderingSpiritAnimInstance", "SetMotionPart");

	Params::RCWanderingSpiritAnimInstance_SetMotionPart Parms{};

	Parms.part = part;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RC.RCWanderingSpiritAnimInstance.StartInPart
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCWanderingSpiritAnimInstance::StartInPart(bool bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWanderingSpiritAnimInstance", "StartInPart");

	Params::RCWanderingSpiritAnimInstance_StartInPart Parms{};

	Parms.bStart = bStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCWanderingSpiritAnimInstance.StartLoopPart
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCWanderingSpiritAnimInstance::StartLoopPart(bool bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWanderingSpiritAnimInstance", "StartLoopPart");

	Params::RCWanderingSpiritAnimInstance_StartLoopPart Parms{};

	Parms.bStart = bStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCWanderingSpiritAnimInstance.StartOutPart
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCWanderingSpiritAnimInstance::StartOutPart(bool bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWanderingSpiritAnimInstance", "StartOutPart");

	Params::RCWanderingSpiritAnimInstance_StartOutPart Parms{};

	Parms.bStart = bStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RC.RCWanderingSpiritAnimInstance.GetLoopFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCWanderingSpiritAnimInstance::GetLoopFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCWanderingSpiritAnimInstance", "GetLoopFlag");

	Params::RCWanderingSpiritAnimInstance_GetLoopFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

