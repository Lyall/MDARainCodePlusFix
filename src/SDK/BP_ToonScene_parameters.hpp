#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ToonScene

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ToonScene.BP_ToonScene_C.ExecuteUbergraph_BP_ToonScene
// 0x0008 (0x0008 - 0x0000)
struct BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene) == 0x000004, "Wrong alignment on BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene");
static_assert(sizeof(BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene) == 0x000008, "Wrong size on BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene");
static_assert(offsetof(BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene, EntryPoint) == 0x000000, "Member 'BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_ToonScene_C_ExecuteUbergraph_BP_ToonScene::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_ToonScene.BP_ToonScene_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ToonScene_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ToonScene_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ToonScene_C_ReceiveTick");
static_assert(sizeof(BP_ToonScene_C_ReceiveTick) == 0x000004, "Wrong size on BP_ToonScene_C_ReceiveTick");
static_assert(offsetof(BP_ToonScene_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ToonScene_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ToonScene.BP_ToonScene_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_ToonScene_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ToonPointLight_C*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToonScene_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ToonScene_C_UserConstructionScript");
static_assert(sizeof(BP_ToonScene_C_UserConstructionScript) == 0x000020, "Wrong size on BP_ToonScene_C_UserConstructionScript");
static_assert(offsetof(BP_ToonScene_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ToonScene_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ToonScene_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ToonScene_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ToonScene_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ToonScene_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ToonScene_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ToonScene.BP_ToonScene_C.UpdateAllMeshesLighting
// 0x0040 (0x0040 - 0x0000)
struct BP_ToonScene_C_UpdateAllMeshesLighting final
{
public:
	bool                                          Constrution;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_ToonShading_C>     K2Node_DynamicCast_AsBI_Toon_Shading;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToonScene_C_UpdateAllMeshesLighting) == 0x000008, "Wrong alignment on BP_ToonScene_C_UpdateAllMeshesLighting");
static_assert(sizeof(BP_ToonScene_C_UpdateAllMeshesLighting) == 0x000040, "Wrong size on BP_ToonScene_C_UpdateAllMeshesLighting");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, Constrution) == 0x000000, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::Constrution' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, K2Node_DynamicCast_AsBI_Toon_Shading) == 0x000028, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::K2Node_DynamicCast_AsBI_Toon_Shading' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_UpdateAllMeshesLighting, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_ToonScene_C_UpdateAllMeshesLighting::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ToonScene.BP_ToonScene_C.ApplyMeshLighting
// 0x0160 (0x0160 - 0x0000)
struct BP_ToonScene_C_ApplyMeshLighting final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MeshLocation;                                      // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumShadowScale;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumAdditiveScale;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SumDirection;                                      // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SumShadow;                                         // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SumColor;                                          // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fallof;                                            // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ToonPointLight_C*                   InputLight;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         InputMesh;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumFallof;                                         // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ToonPointLight_C*                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ToonScene_C_ApplyMeshLighting) == 0x000008, "Wrong alignment on BP_ToonScene_C_ApplyMeshLighting");
static_assert(sizeof(BP_ToonScene_C_ApplyMeshLighting) == 0x000160, "Wrong size on BP_ToonScene_C_ApplyMeshLighting");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, Mesh) == 0x000000, "Member 'BP_ToonScene_C_ApplyMeshLighting::Mesh' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, MeshLocation) == 0x000008, "Member 'BP_ToonScene_C_ApplyMeshLighting::MeshLocation' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, SumShadowScale) == 0x000014, "Member 'BP_ToonScene_C_ApplyMeshLighting::SumShadowScale' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, SumAdditiveScale) == 0x000018, "Member 'BP_ToonScene_C_ApplyMeshLighting::SumAdditiveScale' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, SumDirection) == 0x00001C, "Member 'BP_ToonScene_C_ApplyMeshLighting::SumDirection' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, SumShadow) == 0x000028, "Member 'BP_ToonScene_C_ApplyMeshLighting::SumShadow' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, SumColor) == 0x000034, "Member 'BP_ToonScene_C_ApplyMeshLighting::SumColor' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, Fallof) == 0x000040, "Member 'BP_ToonScene_C_ApplyMeshLighting::Fallof' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, InputLight) == 0x000048, "Member 'BP_ToonScene_C_ApplyMeshLighting::InputLight' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, InputMesh) == 0x000050, "Member 'BP_ToonScene_C_ApplyMeshLighting::InputMesh' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, SumFallof) == 0x000058, "Member 'BP_ToonScene_C_ApplyMeshLighting::SumFallof' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_ToonScene_C_ApplyMeshLighting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_ToonScene_C_ApplyMeshLighting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Less_IntInt_ReturnValue) == 0x000075, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x00008C, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x0000B0, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000BC, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C8, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D4, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D8, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_GetActorScale3D_ReturnValue) == 0x0000E4, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_BreakVector_X) == 0x0000FC, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_BreakVector_Y) == 0x000100, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_BreakVector_Z) == 0x000104, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Normal_ReturnValue_1) == 0x000108, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_VSize_ReturnValue) == 0x000114, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000118, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000124, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000128, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_FClamp_ReturnValue) == 0x000134, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000138, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000144, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Lerp_ReturnValue) == 0x00014C, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_FMin_ReturnValue) == 0x000150, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_Lerp_ReturnValue_1) == 0x000154, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToonScene_C_ApplyMeshLighting, CallFunc_FMin_ReturnValue_1) == 0x000158, "Member 'BP_ToonScene_C_ApplyMeshLighting::CallFunc_FMin_ReturnValue_1' has a wrong offset!");

}

