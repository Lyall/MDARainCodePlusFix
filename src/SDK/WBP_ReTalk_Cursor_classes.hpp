#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ReTalk_Cursor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RC_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ReTalk_Cursor.WBP_ReTalk_Cursor_C
// 0x0030 (0x0358 - 0x0328)
class UWBP_ReTalk_Cursor_C final : public URCReUiMessageCursor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_ReTalk_Cursor_Auto_C*              Cursor_Auto;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ReTalk_Cursor_Circle_C*            Cursor_Circle;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ReTalk_Cursor_Key_C*               Cursor_Key;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cursor_Key_Ef;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpUIParticle*                          SpUIParticle_Push;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ReTalk_Cursor(int32 EntryPoint);
	void OnShowFinished();
	void OnShowStarted();
	void OnHideStarted();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ReTalk_Cursor_C">();
	}
	static class UWBP_ReTalk_Cursor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ReTalk_Cursor_C>();
	}
};
static_assert(alignof(UWBP_ReTalk_Cursor_C) == 0x000008, "Wrong alignment on UWBP_ReTalk_Cursor_C");
static_assert(sizeof(UWBP_ReTalk_Cursor_C) == 0x000358, "Wrong size on UWBP_ReTalk_Cursor_C");
static_assert(offsetof(UWBP_ReTalk_Cursor_C, UberGraphFrame) == 0x000328, "Member 'UWBP_ReTalk_Cursor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ReTalk_Cursor_C, Cursor_Auto) == 0x000330, "Member 'UWBP_ReTalk_Cursor_C::Cursor_Auto' has a wrong offset!");
static_assert(offsetof(UWBP_ReTalk_Cursor_C, Cursor_Circle) == 0x000338, "Member 'UWBP_ReTalk_Cursor_C::Cursor_Circle' has a wrong offset!");
static_assert(offsetof(UWBP_ReTalk_Cursor_C, Cursor_Key) == 0x000340, "Member 'UWBP_ReTalk_Cursor_C::Cursor_Key' has a wrong offset!");
static_assert(offsetof(UWBP_ReTalk_Cursor_C, Cursor_Key_Ef) == 0x000348, "Member 'UWBP_ReTalk_Cursor_C::Cursor_Key_Ef' has a wrong offset!");
static_assert(offsetof(UWBP_ReTalk_Cursor_C, SpUIParticle_Push) == 0x000350, "Member 'UWBP_ReTalk_Cursor_C::SpUIParticle_Push' has a wrong offset!");

}

