#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Sky_RC1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ultra_Dynamic_Sky_RC1.Ultra_Dynamic_Sky_RC1_C
// 0x01F0 (0x0410 - 0x0220)
class AUltra_Dynamic_Sky_RC1_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Sun_Root;                                          // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ultra_Dynamic_Sky_Sphere;                          // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      Direction_Light__Sun_;                             // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               UDM_mat;                                           // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Refresh_Settings;                                  // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Cloud_Speed;                                       // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Density;                                     // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Wisps_Opacity;                               // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UCurveLinearColor*>              Horizon_Base_Color_Curve;                          // 0x0260(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UCurveLinearColor*>              Zenith_Base_Color_Curve;                           // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UCurveLinearColor*>              Cloud_Light_Color_Curve;                           // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UCurveLinearColor*>              Cloud_Dark_Color_Curve;                            // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Time_of_Day;                                       // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCurveLinearColor*>              Sun_Color_Curve;                                   // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UCurveFloat*                            Shine_Intensity_Curve;                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Saturation;                                        // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      Sun_Cloudy_Color_Curve;                            // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExponentialHeightFog*                  Exponential_Height_Fog;                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Stars_Intensity_Curve;                             // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Phase;                                       // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Automatically_Set_Advanced_Settings_using_Time_of_Day; // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Sun_Angle;                                         // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Horizon_Base_Color;                                // 0x02EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Zenith_Base_Color;                                 // 0x02FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Light_Color;                                 // 0x030C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Dark_Color;                                  // 0x031C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sun_Color;                                         // 0x032C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Shine_Intensity;                             // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sun_Light_Color;                                   // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Moon_Position_Curve;                               // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Simulate_Cloud_Density_Changes;                    // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Cloud_Density_Shift_Frequency__min_;               // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Density_Shift_Frequency__max_;               // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Density_target;                              // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Density_Change__Smoothing_;                  // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Opacity;                                     // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Overall_Intensity;                                 // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sun_Brightness;                                    // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shine_Variation;                                   // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sun_Lighting_Intensity;                            // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Sun_Highlight_Radius_curve;                        // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sun_Highlight_Radius;                              // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Sun_Rotation;                                      // 0x038C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Sun_Radius;                                        // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Cloud_Shadows_MID;                                 // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Manually_Select_Sun_Color;                         // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Automatically_Set_Sun_Light_Rotation;              // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA[0x2];                                      // 0x03AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Sun_Inclination;                                   // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sun_Yaw;                                           // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyLight*                              SkyLight;                                          // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Night_Filter_Curve;                                // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Directional_Intensity_Curve;                       // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sun_Light_Intensity;                               // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Clouds_Base_Texture;                               // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Tiling;                                      // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Direction;                                   // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Height_1;                                    // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cloud_Height_2;                                    // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         color_scheme;                                      // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      SourseMaterial;                                    // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SkySphere;                                         // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoFogColor;                                      // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void Set_Material_Variables();
	void Set_Solar_Angle();
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_Ultra_Dynamic_Sky_RC1(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ultra_Dynamic_Sky_RC1_C">();
	}
	static class AUltra_Dynamic_Sky_RC1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUltra_Dynamic_Sky_RC1_C>();
	}
};
static_assert(alignof(AUltra_Dynamic_Sky_RC1_C) == 0x000008, "Wrong alignment on AUltra_Dynamic_Sky_RC1_C");
static_assert(sizeof(AUltra_Dynamic_Sky_RC1_C) == 0x000410, "Wrong size on AUltra_Dynamic_Sky_RC1_C");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, UberGraphFrame) == 0x000220, "Member 'AUltra_Dynamic_Sky_RC1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Root) == 0x000228, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Root' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Ultra_Dynamic_Sky_Sphere) == 0x000230, "Member 'AUltra_Dynamic_Sky_RC1_C::Ultra_Dynamic_Sky_Sphere' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, DefaultSceneRoot) == 0x000238, "Member 'AUltra_Dynamic_Sky_RC1_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Direction_Light__Sun_) == 0x000240, "Member 'AUltra_Dynamic_Sky_RC1_C::Direction_Light__Sun_' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, UDM_mat) == 0x000248, "Member 'AUltra_Dynamic_Sky_RC1_C::UDM_mat' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Refresh_Settings) == 0x000250, "Member 'AUltra_Dynamic_Sky_RC1_C::Refresh_Settings' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Speed) == 0x000254, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Speed' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Density) == 0x000258, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Density' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Wisps_Opacity) == 0x00025C, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Wisps_Opacity' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Horizon_Base_Color_Curve) == 0x000260, "Member 'AUltra_Dynamic_Sky_RC1_C::Horizon_Base_Color_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Zenith_Base_Color_Curve) == 0x000270, "Member 'AUltra_Dynamic_Sky_RC1_C::Zenith_Base_Color_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Light_Color_Curve) == 0x000280, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Light_Color_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Dark_Color_Curve) == 0x000290, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Dark_Color_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Time_of_Day) == 0x0002A0, "Member 'AUltra_Dynamic_Sky_RC1_C::Time_of_Day' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Color_Curve) == 0x0002A8, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Color_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Shine_Intensity_Curve) == 0x0002B8, "Member 'AUltra_Dynamic_Sky_RC1_C::Shine_Intensity_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Saturation) == 0x0002C0, "Member 'AUltra_Dynamic_Sky_RC1_C::Saturation' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Cloudy_Color_Curve) == 0x0002C8, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Cloudy_Color_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Exponential_Height_Fog) == 0x0002D0, "Member 'AUltra_Dynamic_Sky_RC1_C::Exponential_Height_Fog' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Stars_Intensity_Curve) == 0x0002D8, "Member 'AUltra_Dynamic_Sky_RC1_C::Stars_Intensity_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Phase) == 0x0002E0, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Phase' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Automatically_Set_Advanced_Settings_using_Time_of_Day) == 0x0002E4, "Member 'AUltra_Dynamic_Sky_RC1_C::Automatically_Set_Advanced_Settings_using_Time_of_Day' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Angle) == 0x0002E8, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Angle' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Horizon_Base_Color) == 0x0002EC, "Member 'AUltra_Dynamic_Sky_RC1_C::Horizon_Base_Color' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Zenith_Base_Color) == 0x0002FC, "Member 'AUltra_Dynamic_Sky_RC1_C::Zenith_Base_Color' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Light_Color) == 0x00030C, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Light_Color' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Dark_Color) == 0x00031C, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Dark_Color' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Color) == 0x00032C, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Color' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Shine_Intensity) == 0x00033C, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Shine_Intensity' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Light_Color) == 0x000340, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Light_Color' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Moon_Position_Curve) == 0x000350, "Member 'AUltra_Dynamic_Sky_RC1_C::Moon_Position_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Simulate_Cloud_Density_Changes) == 0x000358, "Member 'AUltra_Dynamic_Sky_RC1_C::Simulate_Cloud_Density_Changes' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Density_Shift_Frequency__min_) == 0x00035C, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Density_Shift_Frequency__min_' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Density_Shift_Frequency__max_) == 0x000360, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Density_Shift_Frequency__max_' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Density_target) == 0x000364, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Density_target' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Density_Change__Smoothing_) == 0x000368, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Density_Change__Smoothing_' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Opacity) == 0x00036C, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Opacity' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Overall_Intensity) == 0x000370, "Member 'AUltra_Dynamic_Sky_RC1_C::Overall_Intensity' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Brightness) == 0x000374, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Brightness' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Shine_Variation) == 0x000378, "Member 'AUltra_Dynamic_Sky_RC1_C::Shine_Variation' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Lighting_Intensity) == 0x00037C, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Lighting_Intensity' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Highlight_Radius_curve) == 0x000380, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Highlight_Radius_curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Highlight_Radius) == 0x000388, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Highlight_Radius' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Rotation) == 0x00038C, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Rotation' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Radius) == 0x000398, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Radius' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Shadows_MID) == 0x0003A0, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Shadows_MID' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Manually_Select_Sun_Color) == 0x0003A8, "Member 'AUltra_Dynamic_Sky_RC1_C::Manually_Select_Sun_Color' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Automatically_Set_Sun_Light_Rotation) == 0x0003A9, "Member 'AUltra_Dynamic_Sky_RC1_C::Automatically_Set_Sun_Light_Rotation' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Inclination) == 0x0003AC, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Inclination' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Yaw) == 0x0003B0, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Yaw' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, SkyLight) == 0x0003B8, "Member 'AUltra_Dynamic_Sky_RC1_C::SkyLight' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Night_Filter_Curve) == 0x0003C0, "Member 'AUltra_Dynamic_Sky_RC1_C::Night_Filter_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Directional_Intensity_Curve) == 0x0003C8, "Member 'AUltra_Dynamic_Sky_RC1_C::Directional_Intensity_Curve' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Sun_Light_Intensity) == 0x0003D0, "Member 'AUltra_Dynamic_Sky_RC1_C::Sun_Light_Intensity' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Clouds_Base_Texture) == 0x0003D8, "Member 'AUltra_Dynamic_Sky_RC1_C::Clouds_Base_Texture' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Tiling) == 0x0003E0, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Tiling' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Direction) == 0x0003E4, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Direction' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Height_1) == 0x0003E8, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Height_1' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, Cloud_Height_2) == 0x0003EC, "Member 'AUltra_Dynamic_Sky_RC1_C::Cloud_Height_2' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, color_scheme) == 0x0003F0, "Member 'AUltra_Dynamic_Sky_RC1_C::color_scheme' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, SourseMaterial) == 0x0003F8, "Member 'AUltra_Dynamic_Sky_RC1_C::SourseMaterial' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, SkySphere) == 0x000400, "Member 'AUltra_Dynamic_Sky_RC1_C::SkySphere' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_RC1_C, AutoFogColor) == 0x000408, "Member 'AUltra_Dynamic_Sky_RC1_C::AutoFogColor' has a wrong offset!");

}

