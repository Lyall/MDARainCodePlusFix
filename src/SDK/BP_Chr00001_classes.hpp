#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Chr00001

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RC_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Chr00001.BP_Chr00001_C
// 0x0080 (0x0A00 - 0x0980)
class ABP_Chr00001_C final : public ARCPlayerCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0980(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAtomListenerFocusPoint*                AtomListenerFocusPoint;                            // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URCCharacterAttachmentCtrl*             RCCharacterAttachmentCtrl;                         // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Chr00001_Noline;                                // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BG_InteractWithGrass_C*             BP_BG_InteractWithGrass;                           // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URCCharacterLookCtrl*                   RCCharacterLookCtrl;                               // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URCCharacterFacialCtrl*                 RCCharacterFacialCtrl;                             // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URCCharacterAnimCtrl*                   RCCharacterAnimCtrl;                               // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Chr00001_Facial;                                // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ToonComponent_C*                    BP_ToonComponent;                                  // 0x09D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BaseTurnRate;                                      // 0x09D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseLookUpRate;                                    // 0x09DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ToonScene_C*                        Scene;                                             // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShellColor;                                        // 0x09E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Chr00001(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void IToonShading(bool Construction, class ABP_ToonScene_C* Scane);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Chr00001_C">();
	}
	static class ABP_Chr00001_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Chr00001_C>();
	}
};
static_assert(alignof(ABP_Chr00001_C) == 0x000010, "Wrong alignment on ABP_Chr00001_C");
static_assert(sizeof(ABP_Chr00001_C) == 0x000A00, "Wrong size on ABP_Chr00001_C");
static_assert(offsetof(ABP_Chr00001_C, UberGraphFrame) == 0x000980, "Member 'ABP_Chr00001_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, AtomListenerFocusPoint) == 0x000988, "Member 'ABP_Chr00001_C::AtomListenerFocusPoint' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, Decal) == 0x000990, "Member 'ABP_Chr00001_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, RCCharacterAttachmentCtrl) == 0x000998, "Member 'ABP_Chr00001_C::RCCharacterAttachmentCtrl' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, SK_Chr00001_Noline) == 0x0009A0, "Member 'ABP_Chr00001_C::SK_Chr00001_Noline' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, BP_BG_InteractWithGrass) == 0x0009A8, "Member 'ABP_Chr00001_C::BP_BG_InteractWithGrass' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, RCCharacterLookCtrl) == 0x0009B0, "Member 'ABP_Chr00001_C::RCCharacterLookCtrl' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, RCCharacterFacialCtrl) == 0x0009B8, "Member 'ABP_Chr00001_C::RCCharacterFacialCtrl' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, RCCharacterAnimCtrl) == 0x0009C0, "Member 'ABP_Chr00001_C::RCCharacterAnimCtrl' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, SK_Chr00001_Facial) == 0x0009C8, "Member 'ABP_Chr00001_C::SK_Chr00001_Facial' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, BP_ToonComponent) == 0x0009D0, "Member 'ABP_Chr00001_C::BP_ToonComponent' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, BaseTurnRate) == 0x0009D8, "Member 'ABP_Chr00001_C::BaseTurnRate' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, BaseLookUpRate) == 0x0009DC, "Member 'ABP_Chr00001_C::BaseLookUpRate' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, Scene) == 0x0009E0, "Member 'ABP_Chr00001_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Chr00001_C, ShellColor) == 0x0009E8, "Member 'ABP_Chr00001_C::ShellColor' has a wrong offset!");

}

