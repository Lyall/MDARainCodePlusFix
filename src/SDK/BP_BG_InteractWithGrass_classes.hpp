#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BG_InteractWithGrass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GrassInteractionType_structs.hpp"
#include "RC_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BG_InteractWithGrass.BP_BG_InteractWithGrass_C
// 0x01E0 (0x03E0 - 0x0200)
class UBP_BG_InteractWithGrass_C final : public USceneComponent
{
public:
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0200(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          useDisplacementInteraction;                        // 0x0208(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGrassInteractionType                         howToInteract;                                     // 0x0209(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         checkRadius;                                       // 0x020C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         checkInterval;                                     // 0x0210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         interactionCullDistance;                           // 0x0214(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          alwaysSimulate;                                    // 0x0218(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         trample_BendAngle;                                 // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         trample_Z_Scale;                                   // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         trample_BendDuration;                              // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_228[0x8];                                      // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             StartTransform;                                    // 0x0230(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FTransform                             TargetTransform;                                   // 0x0260(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	float                                         transformAlpha;                                    // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         InstanceIndex;                                     // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class ABP_BG_InteractiveGrassManager_C*       grassManager;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UINTERACTIVE_FoliageComp_BP_C*          InteractiveFoliageComp;                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          hasAssignedInteractionChannel;                     // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         takenInteractionChannel;                           // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   interactionLocationChannelName;                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   interactionRadiusChannelName;                      // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   interactionStrengthChannelName;                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          useMaterialInteraction;                            // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         materialEffectRadius;                              // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         materialEffectStrength;                            // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         matInteractionCullDistance;                        // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           timer_UpdateMatInterParam;                         // 0x02D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          isForPrioritizedActor;                             // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          trample_IgnoreFoliageTypeWeights;                  // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           timer_CheckNearbyGrass;                            // 0x02E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         BendAway_BendAngle;                                // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BendAway_Z_Scale;                                  // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BendAway_BendDuration;                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BendAway_IgnoreFoliageTypeWeights;                 // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         calculatedBendAwayAngle;                           // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         calculatedBendAway_Z_Scale;                        // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         calculatedBendAwayDuration;                        // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         calculatedTrampleBendAngle;                        // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         calculatedTrample_Z_Scale;                         // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         calculatedTrampleBendDuration;                     // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          isUsingDispInteraction;                            // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AInteractiveFoliageChunk_BP_C*>  nearInterFoliageChunks;                            // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, AdvancedDisplay)
	struct FVector                                previousCheckedLocation;                           // 0x0330(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AInteractiveFoliageChunk_BP_C*>  chunksToDeactivate;                                // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, AdvancedDisplay)
	bool                                          skipVelocityCheck;                                 // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 detectedInstances;                                 // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, AdvancedDisplay)
	struct FTimerHandle                           timer_UpdateMatInterParam_MainActor;               // 0x0368(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTimerHandle                           timer_DetectNearbyComponents;                      // 0x0370(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTimerHandle                           timer_CheckIfComponentsStillNear;                  // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          componentTurnedOFF;                                // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          startTurnedOFF;                                    // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FRCGrassTransformParameter> instancesToTransform;                              // 0x0388(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          useMaxDistanceFromInstance;                        // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         maxDistanceFromInstance;                           // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BG_InteractWithGrass(int32 EntryPoint);
	void StopChangingTransformIfNeeded();
	void TurnON();
	void TurnOFF();
	void DetectNearbyComponents();
	void CheckIfComponentsStillNear();
	void CheckIfShouldTurn_OFF_DispInteraction();
	void CheckIfShouldTurn_ON_DispInteraction();
	void UpdateMatInterParamForMainActor();
	void UpdateMatInteractionParam();
	void CheckIfShould_DISABLE_MatInteraction();
	void CheckIfShould_ENABLE_MatInteraction();
	void OnOwnerDestroyed(class AActor* DestroyedActor);
	void FreeUpInteractionChannel();
	void CheckNearbyGrass();
	void ReceiveBeginPlay();
	void IsInDistanceToViewTarget(float InDistance, bool* isInDistance, float* currentDistance);
	void SetGrassManager();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BG_InteractWithGrass_C">();
	}
	static class UBP_BG_InteractWithGrass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BG_InteractWithGrass_C>();
	}
};
static_assert(alignof(UBP_BG_InteractWithGrass_C) == 0x000010, "Wrong alignment on UBP_BG_InteractWithGrass_C");
static_assert(sizeof(UBP_BG_InteractWithGrass_C) == 0x0003E0, "Wrong size on UBP_BG_InteractWithGrass_C");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, UberGraphFrame) == 0x000200, "Member 'UBP_BG_InteractWithGrass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, useDisplacementInteraction) == 0x000208, "Member 'UBP_BG_InteractWithGrass_C::useDisplacementInteraction' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, howToInteract) == 0x000209, "Member 'UBP_BG_InteractWithGrass_C::howToInteract' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, checkRadius) == 0x00020C, "Member 'UBP_BG_InteractWithGrass_C::checkRadius' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, checkInterval) == 0x000210, "Member 'UBP_BG_InteractWithGrass_C::checkInterval' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, interactionCullDistance) == 0x000214, "Member 'UBP_BG_InteractWithGrass_C::interactionCullDistance' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, alwaysSimulate) == 0x000218, "Member 'UBP_BG_InteractWithGrass_C::alwaysSimulate' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, trample_BendAngle) == 0x00021C, "Member 'UBP_BG_InteractWithGrass_C::trample_BendAngle' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, trample_Z_Scale) == 0x000220, "Member 'UBP_BG_InteractWithGrass_C::trample_Z_Scale' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, trample_BendDuration) == 0x000224, "Member 'UBP_BG_InteractWithGrass_C::trample_BendDuration' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, StartTransform) == 0x000230, "Member 'UBP_BG_InteractWithGrass_C::StartTransform' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, TargetTransform) == 0x000260, "Member 'UBP_BG_InteractWithGrass_C::TargetTransform' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, transformAlpha) == 0x000290, "Member 'UBP_BG_InteractWithGrass_C::transformAlpha' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, InstanceIndex) == 0x000294, "Member 'UBP_BG_InteractWithGrass_C::InstanceIndex' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, grassManager) == 0x000298, "Member 'UBP_BG_InteractWithGrass_C::grassManager' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, InteractiveFoliageComp) == 0x0002A0, "Member 'UBP_BG_InteractWithGrass_C::InteractiveFoliageComp' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, hasAssignedInteractionChannel) == 0x0002A8, "Member 'UBP_BG_InteractWithGrass_C::hasAssignedInteractionChannel' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, takenInteractionChannel) == 0x0002AC, "Member 'UBP_BG_InteractWithGrass_C::takenInteractionChannel' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, interactionLocationChannelName) == 0x0002B0, "Member 'UBP_BG_InteractWithGrass_C::interactionLocationChannelName' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, interactionRadiusChannelName) == 0x0002B8, "Member 'UBP_BG_InteractWithGrass_C::interactionRadiusChannelName' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, interactionStrengthChannelName) == 0x0002C0, "Member 'UBP_BG_InteractWithGrass_C::interactionStrengthChannelName' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, useMaterialInteraction) == 0x0002C8, "Member 'UBP_BG_InteractWithGrass_C::useMaterialInteraction' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, materialEffectRadius) == 0x0002CC, "Member 'UBP_BG_InteractWithGrass_C::materialEffectRadius' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, materialEffectStrength) == 0x0002D0, "Member 'UBP_BG_InteractWithGrass_C::materialEffectStrength' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, matInteractionCullDistance) == 0x0002D4, "Member 'UBP_BG_InteractWithGrass_C::matInteractionCullDistance' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, timer_UpdateMatInterParam) == 0x0002D8, "Member 'UBP_BG_InteractWithGrass_C::timer_UpdateMatInterParam' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, isForPrioritizedActor) == 0x0002E0, "Member 'UBP_BG_InteractWithGrass_C::isForPrioritizedActor' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, trample_IgnoreFoliageTypeWeights) == 0x0002E1, "Member 'UBP_BG_InteractWithGrass_C::trample_IgnoreFoliageTypeWeights' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, timer_CheckNearbyGrass) == 0x0002E8, "Member 'UBP_BG_InteractWithGrass_C::timer_CheckNearbyGrass' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, BendAway_BendAngle) == 0x0002F0, "Member 'UBP_BG_InteractWithGrass_C::BendAway_BendAngle' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, BendAway_Z_Scale) == 0x0002F4, "Member 'UBP_BG_InteractWithGrass_C::BendAway_Z_Scale' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, BendAway_BendDuration) == 0x0002F8, "Member 'UBP_BG_InteractWithGrass_C::BendAway_BendDuration' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, BendAway_IgnoreFoliageTypeWeights) == 0x0002FC, "Member 'UBP_BG_InteractWithGrass_C::BendAway_IgnoreFoliageTypeWeights' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, calculatedBendAwayAngle) == 0x000300, "Member 'UBP_BG_InteractWithGrass_C::calculatedBendAwayAngle' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, calculatedBendAway_Z_Scale) == 0x000304, "Member 'UBP_BG_InteractWithGrass_C::calculatedBendAway_Z_Scale' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, calculatedBendAwayDuration) == 0x000308, "Member 'UBP_BG_InteractWithGrass_C::calculatedBendAwayDuration' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, calculatedTrampleBendAngle) == 0x00030C, "Member 'UBP_BG_InteractWithGrass_C::calculatedTrampleBendAngle' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, calculatedTrample_Z_Scale) == 0x000310, "Member 'UBP_BG_InteractWithGrass_C::calculatedTrample_Z_Scale' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, calculatedTrampleBendDuration) == 0x000314, "Member 'UBP_BG_InteractWithGrass_C::calculatedTrampleBendDuration' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, isUsingDispInteraction) == 0x000318, "Member 'UBP_BG_InteractWithGrass_C::isUsingDispInteraction' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, nearInterFoliageChunks) == 0x000320, "Member 'UBP_BG_InteractWithGrass_C::nearInterFoliageChunks' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, previousCheckedLocation) == 0x000330, "Member 'UBP_BG_InteractWithGrass_C::previousCheckedLocation' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, chunksToDeactivate) == 0x000340, "Member 'UBP_BG_InteractWithGrass_C::chunksToDeactivate' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, skipVelocityCheck) == 0x000350, "Member 'UBP_BG_InteractWithGrass_C::skipVelocityCheck' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, detectedInstances) == 0x000358, "Member 'UBP_BG_InteractWithGrass_C::detectedInstances' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, timer_UpdateMatInterParam_MainActor) == 0x000368, "Member 'UBP_BG_InteractWithGrass_C::timer_UpdateMatInterParam_MainActor' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, timer_DetectNearbyComponents) == 0x000370, "Member 'UBP_BG_InteractWithGrass_C::timer_DetectNearbyComponents' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, timer_CheckIfComponentsStillNear) == 0x000378, "Member 'UBP_BG_InteractWithGrass_C::timer_CheckIfComponentsStillNear' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, componentTurnedOFF) == 0x000380, "Member 'UBP_BG_InteractWithGrass_C::componentTurnedOFF' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, startTurnedOFF) == 0x000381, "Member 'UBP_BG_InteractWithGrass_C::startTurnedOFF' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, instancesToTransform) == 0x000388, "Member 'UBP_BG_InteractWithGrass_C::instancesToTransform' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, useMaxDistanceFromInstance) == 0x0003D8, "Member 'UBP_BG_InteractWithGrass_C::useMaxDistanceFromInstance' has a wrong offset!");
static_assert(offsetof(UBP_BG_InteractWithGrass_C, maxDistanceFromInstance) == 0x0003DC, "Member 'UBP_BG_InteractWithGrass_C::maxDistanceFromInstance' has a wrong offset!");

}

