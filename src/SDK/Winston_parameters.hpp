#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Winston

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Winston.WinstonBPLibrary.WinstonGetRotation
// 0x000C (0x000C - 0x0000)
struct WinstonBPLibrary_WinstonGetRotation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WinstonBPLibrary_WinstonGetRotation) == 0x000004, "Wrong alignment on WinstonBPLibrary_WinstonGetRotation");
static_assert(sizeof(WinstonBPLibrary_WinstonGetRotation) == 0x00000C, "Wrong size on WinstonBPLibrary_WinstonGetRotation");
static_assert(offsetof(WinstonBPLibrary_WinstonGetRotation, ReturnValue) == 0x000000, "Member 'WinstonBPLibrary_WinstonGetRotation::ReturnValue' has a wrong offset!");

// Function Winston.WinstonBPLibrary.WinstonSetRotation
// 0x0010 (0x0010 - 0x0000)
struct WinstonBPLibrary_WinstonSetRotation final
{
public:
	struct FVector                                Vec;                                               // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WinstonBPLibrary_WinstonSetRotation) == 0x000004, "Wrong alignment on WinstonBPLibrary_WinstonSetRotation");
static_assert(sizeof(WinstonBPLibrary_WinstonSetRotation) == 0x000010, "Wrong size on WinstonBPLibrary_WinstonSetRotation");
static_assert(offsetof(WinstonBPLibrary_WinstonSetRotation, Vec) == 0x000000, "Member 'WinstonBPLibrary_WinstonSetRotation::Vec' has a wrong offset!");
static_assert(offsetof(WinstonBPLibrary_WinstonSetRotation, ReturnValue) == 0x00000C, "Member 'WinstonBPLibrary_WinstonSetRotation::ReturnValue' has a wrong offset!");

}

