#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelSnapshots

#include "Basic.hpp"

#include "LevelSnapshots_classes.hpp"
#include "LevelSnapshots_parameters.hpp"


namespace SDK
{

// Function LevelSnapshots.LevelSnapshot.SetSnapshotDescription
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InSnapshotDescription                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelSnapshot::SetSnapshotDescription(const class FString& InSnapshotDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelSnapshot", "SetSnapshotDescription");

	Params::LevelSnapshot_SetSnapshotDescription Parms{};

	Parms.InSnapshotDescription = std::move(InSnapshotDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LevelSnapshots.LevelSnapshot.SetSnapshotName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InSnapshotName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelSnapshot::SetSnapshotName(const class FName& InSnapshotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelSnapshot", "SetSnapshotName");

	Params::LevelSnapshot_SetSnapshotName Parms{};

	Parms.InSnapshotName = InSnapshotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LevelSnapshots.LevelSnapshot.GetCaptureTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime ULevelSnapshot::GetCaptureTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelSnapshot", "GetCaptureTime");

	Params::LevelSnapshot_GetCaptureTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelSnapshots.LevelSnapshot.GetMapPath
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSoftObjectPath                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftObjectPath ULevelSnapshot::GetMapPath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelSnapshot", "GetMapPath");

	Params::LevelSnapshot_GetMapPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelSnapshots.LevelSnapshot.GetSnapshotDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULevelSnapshot::GetSnapshotDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelSnapshot", "GetSnapshotDescription");

	Params::LevelSnapshot_GetSnapshotDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelSnapshots.LevelSnapshot.GetSnapshotName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ULevelSnapshot::GetSnapshotName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelSnapshot", "GetSnapshotName");

	Params::LevelSnapshot_GetSnapshotName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelSnapshots.LevelSnapshotsEditorDataManagementSettings.ParseLevelSnapshotsTokensInText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InTextToParse                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           InWorldName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ULevelSnapshotsEditorDataManagementSettings::ParseLevelSnapshotsTokensInText(const class FText& InTextToParse, const class FString& InWorldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelSnapshotsEditorDataManagementSettings", "ParseLevelSnapshotsTokensInText");

	Params::LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText Parms{};

	Parms.InTextToParse = std::move(InTextToParse);
	Parms.InWorldName = std::move(InWorldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelSnapshots.LevelSnapshotsFunctionLibrary.ApplySnapshotToWorld
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSnapshot*                   Snapshot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSnapshotFilter*             OptionalFilter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelSnapshotsFunctionLibrary::ApplySnapshotToWorld(const class UObject* WorldContextObject, class ULevelSnapshot* Snapshot, class ULevelSnapshotFilter* OptionalFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelSnapshotsFunctionLibrary", "ApplySnapshotToWorld");

	Params::LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Snapshot = Snapshot;
	Parms.OptionalFilter = OptionalFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LevelSnapshots.LevelSnapshotsFunctionLibrary.TakeLevelSnapshot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewSnapshotName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Description                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSnapshot*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSnapshot* ULevelSnapshotsFunctionLibrary::TakeLevelSnapshot(const class UObject* WorldContextObject, const class FName NewSnapshotName, const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelSnapshotsFunctionLibrary", "TakeLevelSnapshot");

	Params::LevelSnapshotsFunctionLibrary_TakeLevelSnapshot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewSnapshotName = NewSnapshotName;
	Parms.Description = std::move(Description);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

