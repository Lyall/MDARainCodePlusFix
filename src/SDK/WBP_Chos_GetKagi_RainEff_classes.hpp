#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Chos_GetKagi_RainEff

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Chos_GetKagi_RainEff.WBP_Chos_GetKagi_RainEff_C
// 0x0030 (0x02A0 - 0x0270)
class UWBP_Chos_GetKagi_RainEff_C final : public UUserWidget
{
public:
	class UWidgetAnimation*                       Rain_AN;                                           // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_UI_Chos_GetKagi_Rain;                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FBox2D                                 Area;                                              // 0x0288(0x0014)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	int32                                         Rain_Max;                                          // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Area_Set(const struct FBox2D& New_Area);
	void Start();
	void PositionSet();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Chos_GetKagi_RainEff_C">();
	}
	static class UWBP_Chos_GetKagi_RainEff_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Chos_GetKagi_RainEff_C>();
	}
};
static_assert(alignof(UWBP_Chos_GetKagi_RainEff_C) == 0x000008, "Wrong alignment on UWBP_Chos_GetKagi_RainEff_C");
static_assert(sizeof(UWBP_Chos_GetKagi_RainEff_C) == 0x0002A0, "Wrong size on UWBP_Chos_GetKagi_RainEff_C");
static_assert(offsetof(UWBP_Chos_GetKagi_RainEff_C, Rain_AN) == 0x000270, "Member 'UWBP_Chos_GetKagi_RainEff_C::Rain_AN' has a wrong offset!");
static_assert(offsetof(UWBP_Chos_GetKagi_RainEff_C, CanvasPanel_0) == 0x000278, "Member 'UWBP_Chos_GetKagi_RainEff_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWBP_Chos_GetKagi_RainEff_C, M_UI_Chos_GetKagi_Rain) == 0x000280, "Member 'UWBP_Chos_GetKagi_RainEff_C::M_UI_Chos_GetKagi_Rain' has a wrong offset!");
static_assert(offsetof(UWBP_Chos_GetKagi_RainEff_C, Area) == 0x000288, "Member 'UWBP_Chos_GetKagi_RainEff_C::Area' has a wrong offset!");
static_assert(offsetof(UWBP_Chos_GetKagi_RainEff_C, Rain_Max) == 0x00029C, "Member 'UWBP_Chos_GetKagi_RainEff_C::Rain_Max' has a wrong offset!");

}

