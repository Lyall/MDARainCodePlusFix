#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Skip

#include "Basic.hpp"

#include "WBP_Skip_classes.hpp"
#include "WBP_Skip_parameters.hpp"


namespace SDK
{

// Function WBP_Skip.WBP_Skip_C.ExecuteUbergraph_WBP_Skip
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Skip_C::ExecuteUbergraph_WBP_Skip(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Skip_C", "ExecuteUbergraph_WBP_Skip");

	Params::WBP_Skip_C_ExecuteUbergraph_WBP_Skip Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Skip.WBP_Skip_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Skip_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Skip_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Skip.WBP_Skip_C.Set Text ID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     TextID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UTextBlock*>               TextBlock                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_Skip_C::Set_Text_ID(TArray<class FName>& TextID, TArray<class UTextBlock*>& TextBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Skip_C", "Set Text ID");

	Params::WBP_Skip_C_Set_Text_ID Parms{};

	Parms.TextID = std::move(TextID);
	Parms.TextBlock = std::move(TextBlock);

	UObject::ProcessEvent(Func, &Parms);

	TextID = std::move(Parms.TextID);
	TextBlock = std::move(Parms.TextBlock);
}

}

