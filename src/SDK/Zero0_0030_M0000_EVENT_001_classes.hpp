#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zero0_0030_M0000_EVENT_001

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RC_structs.hpp"
#include "RC_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass 00_0030_M0000_EVENT_001.00_0030_M0000_EVENT_001_C
// 0x01E0 (0x0430 - 0x0250)
class AZero0_0030_M0000_EVENT_001_C final : public ARCRealEventSubLevelScriptActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<class FName, class AActor*>              AllCharaMap;                                       // 0x0258(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class AActor*, class FName>              InitTPMap;                                         // 0x02A8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         TextIndex;                                         // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TextEndIndex;                                      // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TalkSetIndex;                                      // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RCcinecamera_C*                     CurrentCamera;                                     // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CmnEventRoot_C*                     EventRoot;                                         // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>                SpkExIdle1;                                        // 0x0318(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                SpkExIdle2;                                        // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 TimelineList;                                      // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  TimelineStatelList;                                // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Count;                                             // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NowSelected;                                       // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRCReHUDSelectData>             m________;                                         // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Zero_1_X;                                          // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zero_1_Y;                                          // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zero_1_Z;                                          // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         One_0_X;                                           // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         One_0_Y;                                           // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         One_0_Z;                                           // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MovingEye;                                         // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Select_Index;                                      // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LookTarget_C*                       SelectLookTarget_19_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty; // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LookTarget_C*                       SelectLookTarget_0_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty; // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LookTarget_C*                       SelectLookTarget_20_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CmnEventRoot_C*                     EVENT_001_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty; // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_00_0030_M0000_EVENT_001(int32 EntryPoint);
	void EventSkip();
	void EventLoadEnd();
	void EVENT_001();
	void TalkEnd();
	void EventEnd();
	void EventStart();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void SelectCursorLook();
	void TalkSetAtoB();
	void TalkSetA1(int32 TalkIndex);
	void TalkSetBtoC();
	void TalkSetB1(int32 TalkIndex);
	void TalkSetCtoD();
	void TalkSetC1(int32 TalkIndex);
	void TalkSetDtoE();
	void TalkSetD1(int32 TalkIndex);
	void TalkSetEtoF();
	void TalkSetE3(int32 TalkIndex);
	void TalkSetE2(int32 TalkIndex);
	void TalkSetE1(int32 TalkIndex);
	void TalkSetToFinish();
	void AllTalkFinish();
	void TalkStart();
	void SE_OpenHingedDoor();
	void ENV_Soundchange();
	void m_____________________________();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"00_0030_M0000_EVENT_001_C">();
	}
	static class AZero0_0030_M0000_EVENT_001_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZero0_0030_M0000_EVENT_001_C>();
	}
};
static_assert(alignof(AZero0_0030_M0000_EVENT_001_C) == 0x000008, "Wrong alignment on AZero0_0030_M0000_EVENT_001_C");
static_assert(sizeof(AZero0_0030_M0000_EVENT_001_C) == 0x000430, "Wrong size on AZero0_0030_M0000_EVENT_001_C");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, UberGraphFrame) == 0x000250, "Member 'AZero0_0030_M0000_EVENT_001_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, AllCharaMap) == 0x000258, "Member 'AZero0_0030_M0000_EVENT_001_C::AllCharaMap' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, InitTPMap) == 0x0002A8, "Member 'AZero0_0030_M0000_EVENT_001_C::InitTPMap' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, TextIndex) == 0x0002F8, "Member 'AZero0_0030_M0000_EVENT_001_C::TextIndex' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, TextEndIndex) == 0x0002FC, "Member 'AZero0_0030_M0000_EVENT_001_C::TextEndIndex' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, TalkSetIndex) == 0x000300, "Member 'AZero0_0030_M0000_EVENT_001_C::TalkSetIndex' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, CurrentCamera) == 0x000308, "Member 'AZero0_0030_M0000_EVENT_001_C::CurrentCamera' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, EventRoot) == 0x000310, "Member 'AZero0_0030_M0000_EVENT_001_C::EventRoot' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, SpkExIdle1) == 0x000318, "Member 'AZero0_0030_M0000_EVENT_001_C::SpkExIdle1' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, SpkExIdle2) == 0x000368, "Member 'AZero0_0030_M0000_EVENT_001_C::SpkExIdle2' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, TimelineList) == 0x0003B8, "Member 'AZero0_0030_M0000_EVENT_001_C::TimelineList' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, TimelineStatelList) == 0x0003C8, "Member 'AZero0_0030_M0000_EVENT_001_C::TimelineStatelList' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, Count) == 0x0003D8, "Member 'AZero0_0030_M0000_EVENT_001_C::Count' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, NowSelected) == 0x0003DC, "Member 'AZero0_0030_M0000_EVENT_001_C::NowSelected' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, m________) == 0x0003E0, "Member 'AZero0_0030_M0000_EVENT_001_C::m________' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, Zero_1_X) == 0x0003F0, "Member 'AZero0_0030_M0000_EVENT_001_C::Zero_1_X' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, Zero_1_Y) == 0x0003F4, "Member 'AZero0_0030_M0000_EVENT_001_C::Zero_1_Y' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, Zero_1_Z) == 0x0003F8, "Member 'AZero0_0030_M0000_EVENT_001_C::Zero_1_Z' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, One_0_X) == 0x0003FC, "Member 'AZero0_0030_M0000_EVENT_001_C::One_0_X' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, One_0_Y) == 0x000400, "Member 'AZero0_0030_M0000_EVENT_001_C::One_0_Y' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, One_0_Z) == 0x000404, "Member 'AZero0_0030_M0000_EVENT_001_C::One_0_Z' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, MovingEye) == 0x000408, "Member 'AZero0_0030_M0000_EVENT_001_C::MovingEye' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, Select_Index) == 0x00040C, "Member 'AZero0_0030_M0000_EVENT_001_C::Select_Index' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, SelectLookTarget_19_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty) == 0x000410, "Member 'AZero0_0030_M0000_EVENT_001_C::SelectLookTarget_19_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, SelectLookTarget_0_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty) == 0x000418, "Member 'AZero0_0030_M0000_EVENT_001_C::SelectLookTarget_0_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, SelectLookTarget_20_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty) == 0x000420, "Member 'AZero0_0030_M0000_EVENT_001_C::SelectLookTarget_20_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty' has a wrong offset!");
static_assert(offsetof(AZero0_0030_M0000_EVENT_001_C, EVENT_001_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty) == 0x000428, "Member 'AZero0_0030_M0000_EVENT_001_C::EVENT_001_ExecuteUbergraph_00_0030_M0000_EVENT_001_RefProperty' has a wrong offset!");

}

