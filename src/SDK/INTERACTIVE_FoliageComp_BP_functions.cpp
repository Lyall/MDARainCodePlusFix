#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACTIVE_FoliageComp_BP

#include "Basic.hpp"

#include "INTERACTIVE_FoliageComp_BP_classes.hpp"
#include "INTERACTIVE_FoliageComp_BP_parameters.hpp"


namespace SDK
{

// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.ExecuteUbergraph_INTERACTIVE_FoliageComp_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::ExecuteUbergraph_INTERACTIVE_FoliageComp_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "ExecuteUbergraph_INTERACTIVE_FoliageComp_BP");

	Params::INTERACTIVE_FoliageComp_BP_C_ExecuteUbergraph_INTERACTIVE_FoliageComp_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.BackToOriginalTransform
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           instancesIndexes                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UINTERACTIVE_FoliageComp_BP_C::BackToOriginalTransform(const TArray<int32>& instancesIndexes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "BackToOriginalTransform");

	Params::INTERACTIVE_FoliageComp_BP_C_BackToOriginalTransform Parms{};

	Parms.instancesIndexes = std::move(instancesIndexes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.DestroyAfterDelay
// (BlueprintCallable, BlueprintEvent)

void UINTERACTIVE_FoliageComp_BP_C::DestroyAfterDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "DestroyAfterDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.DivideIntoChunks_InfLoopWorkaround
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ChunkSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::DivideIntoChunks_InfLoopWorkaround(float ChunkSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "DivideIntoChunks_InfLoopWorkaround");

	Params::INTERACTIVE_FoliageComp_BP_C_DivideIntoChunks_InfLoopWorkaround Parms{};

	Parms.ChunkSize = ChunkSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "ReceiveEndPlay");

	Params::INTERACTIVE_FoliageComp_BP_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UINTERACTIVE_FoliageComp_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.RemoveAnyActiveStatuses
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::RemoveAnyActiveStatuses(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "RemoveAnyActiveStatuses");

	Params::INTERACTIVE_FoliageComp_BP_C_RemoveAnyActiveStatuses Parms{};

	Parms.InstanceIndex = InstanceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.Copy&SetFoliageParameters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UINTERACTIVE_FoliageComp_BP_C*    CopyFrom                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::Copy_SetFoliageParameters(class UINTERACTIVE_FoliageComp_BP_C* CopyFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "Copy&SetFoliageParameters");

	Params::INTERACTIVE_FoliageComp_BP_C_Copy_SetFoliageParameters Parms{};

	Parms.CopyFrom = CopyFrom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.Copy&SetFoliageParameters_FromClass
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CopyFrom                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      meshToSet                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::Copy_SetFoliageParameters_FromClass(class UClass* CopyFrom, class UStaticMesh* meshToSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "Copy&SetFoliageParameters_FromClass");

	Params::INTERACTIVE_FoliageComp_BP_C_Copy_SetFoliageParameters_FromClass Parms{};

	Parms.CopyFrom = CopyFrom;
	Parms.meshToSet = meshToSet;

	UObject::ProcessEvent(Func, &Parms);
}

}

