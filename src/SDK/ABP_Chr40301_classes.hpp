#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Chr40301

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RC_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Chr40301.ABP_Chr40301_C
// 0x0670 (0x0BE0 - 0x0570)
class UABP_Chr40301_C final : public URCCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0578(0x0028)()
	struct FAnimNode_TransitionPoseEvaluator      AnimGraphNode_TransitionPoseEvaluator_1;           // 0x05A0(0x00F8)()
	struct FAnimNode_TransitionPoseEvaluator      AnimGraphNode_TransitionPoseEvaluator;             // 0x0698(0x00F8)()
	struct FAnimNode_StateResult                  AnimGraphNode_CustomTransitionResult;              // 0x0790(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x07C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x07E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0810(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0838(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x08B8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x08E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0968(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0998(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0A18(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0A48(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0AC8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0AF8(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0BA8(0x0030)()
	bool                                          ExtendArm;                                         // 0x0BD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HeldArm;                                           // 0x0BD9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WaitShrinking;                                     // 0x0BDA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Extendable;                                        // 0x0BDB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Chr40301(int32 EntryPoint);
	void AnimNotify_LeaveIdle();
	void AnimNotify_EndBlendHolding();
	void AnimNotify_EndBlendShrinkingArm();
	void AnimNotify_EnterIdle();
	void AnimNotify_LeaveHolding();
	void AnimNotify_EnterHolding();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr40301_AnimGraphNode_TransitionResult_972C537F4413749235407FB4B7365BB7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr40301_AnimGraphNode_TransitionResult_675ABA9947E164C4B2AE66A650F94849();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr40301_AnimGraphNode_TransitionResult_66F9C2CE43CE8254C4369F8034552992();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Chr40301_C">();
	}
	static class UABP_Chr40301_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Chr40301_C>();
	}
};
static_assert(alignof(UABP_Chr40301_C) == 0x000010, "Wrong alignment on UABP_Chr40301_C");
static_assert(sizeof(UABP_Chr40301_C) == 0x000BE0, "Wrong size on UABP_Chr40301_C");
static_assert(offsetof(UABP_Chr40301_C, UberGraphFrame) == 0x000570, "Member 'UABP_Chr40301_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_TransitionResult_3) == 0x000578, "Member 'UABP_Chr40301_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_TransitionPoseEvaluator_1) == 0x0005A0, "Member 'UABP_Chr40301_C::AnimGraphNode_TransitionPoseEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_TransitionPoseEvaluator) == 0x000698, "Member 'UABP_Chr40301_C::AnimGraphNode_TransitionPoseEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_CustomTransitionResult) == 0x000790, "Member 'UABP_Chr40301_C::AnimGraphNode_CustomTransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_TransitionResult_2) == 0x0007C0, "Member 'UABP_Chr40301_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_TransitionResult_1) == 0x0007E8, "Member 'UABP_Chr40301_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_TransitionResult) == 0x000810, "Member 'UABP_Chr40301_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_SequencePlayer_3) == 0x000838, "Member 'UABP_Chr40301_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_StateResult_3) == 0x0008B8, "Member 'UABP_Chr40301_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_SequencePlayer_2) == 0x0008E8, "Member 'UABP_Chr40301_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_StateResult_2) == 0x000968, "Member 'UABP_Chr40301_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_SequencePlayer_1) == 0x000998, "Member 'UABP_Chr40301_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_StateResult_1) == 0x000A18, "Member 'UABP_Chr40301_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_SequencePlayer) == 0x000A48, "Member 'UABP_Chr40301_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_StateResult) == 0x000AC8, "Member 'UABP_Chr40301_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_StateMachine) == 0x000AF8, "Member 'UABP_Chr40301_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, AnimGraphNode_Root) == 0x000BA8, "Member 'UABP_Chr40301_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, ExtendArm) == 0x000BD8, "Member 'UABP_Chr40301_C::ExtendArm' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, HeldArm) == 0x000BD9, "Member 'UABP_Chr40301_C::HeldArm' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, WaitShrinking) == 0x000BDA, "Member 'UABP_Chr40301_C::WaitShrinking' has a wrong offset!");
static_assert(offsetof(UABP_Chr40301_C, Extendable) == 0x000BDB, "Member 'UABP_Chr40301_C::Extendable' has a wrong offset!");

}

