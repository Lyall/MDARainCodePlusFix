#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Chr00000

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "RC_structs.hpp"
#include "RC_classes.hpp"
#include "KawaiiPhysics_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Chr00000.ABP_Chr00000_C
// 0x4C30 (0x51A0 - 0x0570)
class UABP_Chr00000_C final : public URCCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_55;                 // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_54;                 // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x0618(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x0640(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x0668(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x0690(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x06B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x06E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0708(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x0730(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x0758(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x0780(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x07A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x07D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x07F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x0820(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0848(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x0930(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x0960(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x09E0(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x0A10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x0A38(0x0028)()
	struct FRCAnimNode_SelectTurn                 RCAnimGraphNode_SelectTurn_1;                      // 0x0A60(0x0098)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x0AF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x0B78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x0BF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x0C78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x0CF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x0D78(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x0DF8(0x0030)()
	struct FRCAnimNode_SelectTurn                 RCAnimGraphNode_SelectTurn;                        // 0x0E28(0x0098)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x0EC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x0F40(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x0FC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x1040(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x10C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x1140(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x11C0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x11F0(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x12A0(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x12D0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x1370(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x13F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x1470(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x14F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x1520(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x15A0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x15D0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x16B8(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x16E8(0x00E8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x17D0(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1898(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1980(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x19B0(0x00B0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1A60(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1A88(0x0030)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x1AB8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1B80(0x0158)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x1CD8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1DA0(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x1DC8(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x1E90(0x00C8)()
	uint8                                         Pad_1F58[0x8];                                     // 0x1F58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_5;                     // 0x1F60(0x0210)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_4;                     // 0x2170(0x0210)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_3;                     // 0x2380(0x0210)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_2;                     // 0x2590(0x0210)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x27A0(0x0210)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x29B0(0x0210)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2BC0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2BE0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x2C00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x2C28(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x2C50(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x2CD0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x2D00(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x2D80(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x2DB0(0x00B0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x2E60(0x00C0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x2F20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x2F48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x2F70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x2F98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x2FC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x2FE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x3010(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x3038(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x3060(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x3088(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x30B0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x30D8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x3158(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x3188(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x3208(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x3238(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x32B8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x32E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x3368(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x3398(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x3418(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x3448(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x34F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x3520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x3548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x3570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x3598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x35C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x35E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x3610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x3638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x3660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x3688(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x36B0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x3730(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x3760(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x37E0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x3810(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x3890(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x38C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x3940(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x3970(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x39F0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x3A20(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x3AD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x3AF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x3B20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x3B48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x3B70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x3B98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x3BC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x3BE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x3C10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x3C38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x3C60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x3C88(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x3CB0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x3D30(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x3D60(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x3DE0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x3E10(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x3E90(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3EC0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3F40(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x3F70(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x3FF0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x4020(0x00B0)()
	struct FRCAnimNode_LookCtrl                   RCAnimGraphNode_LookCtrl;                          // 0x40D0(0x07A0)()
	struct FRCAnimNode_FootIK                     RCAnimGraphNode_FootIK;                            // 0x4870(0x07C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x5030(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x5078(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x5140(0x0028)()
	bool                                          IsInAir_;                                          // 0x5168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5169[0x3];                                     // 0x5169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x516C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationYaw;                                       // 0x5170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotationYaw_;                                    // 0x5174(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5175[0x3];                                     // 0x5175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DirectionAmount;                                   // 0x5178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreSpeed;                                          // 0x517C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedAlpha;                                        // 0x5180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeed;                                          // 0x5184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UseExtraIdleIndex;                                 // 0x5188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExtraIdleTransition;                             // 0x518C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_518D[0x3];                                     // 0x518D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeftRightCurve;                                    // 0x5190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotNumber;                                        // 0x5194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SqcAnimBlendAlpha;                                 // 0x5198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         FootIKBlendAlpha;                                  // 0x519C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_Chr00000(int32 EntryPoint);
	void AnimNotify_LipsyncIdle();
	void AnimNotify_OutMotion2();
	void AnimNotify_OutMotion1();
	void AnimNotify_OutMotion0();
	void AnimNotify_LoopMotionFinishToOut2();
	void AnimNotify_LoopMotionFinishToOut1();
	void AnimNotify_LoopMotionFinishToOut0();
	void AnimNotify_InMotionFinishToLoop2();
	void AnimNotify_InMotionFinishToLoop1();
	void AnimNotify_InMotionFinishToLoop0();
	void AnimNotify_Reset();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_712EA2884CD79C6B7FC8BB9D0EAF94B3();
	void AnimNotify_OnLeftIdle();
	void AnimNotify_OnStartTurn();
	void AnimNotify_OnStartTurnState();
	void AnimNotify_OnEndExtraIdle();
	void AnimNotify_OnStartExtraIdle();
	void AnimNotify_OnLeftTurn();
	void AnimNotify_IdleStateEvent();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_189ABD2743B708C0B757738A75509C3C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_85ABE7EB4D8FC6667D049E9E8028543B();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_68FFF04B4D94CB38B750A392C28DE749();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_D2BFED954CB0B3965CBDB098D0316BB4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_3036A4C646972A0071C0DA91AA10C265();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_DCF1A737472492A73B9FD5883F139465();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_78A3F0724332521DC299178B63B753CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_0B344D1246980DADBFCFAB9799A6B995();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_88D6C97446403DF9A6C6309BE152328E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_E4B80BE84DC6A9CB37D47CB15AC15EE5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_54E87D624AF44FAEAB02FE9EED10CFA6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_8883FD6F484C7D8426F5239BE314525D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_0D819B094FF79B62932D12A5874B3DF7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_1099CAE6477FBAF9F3D961BEBCB1F4BA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_24DC3E084304A8BAC5332183B7E208DB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_879115B740932F6E97B2F0A0868DFF89();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_D82915FD4D479651A0440DA0223A29EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_0C3471804670FD574BC85E848AAA9BC2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_0222E0C84EB89FD98653F4B5AA8C8522();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_EED7507F4AB3954EEB6288B29291C923();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_932C2D2548E7D9687E118A95F422FE7A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_C6B9752B4F4C0F6B73DEBFB53A043691();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_7ACA12C84F8D91F912CE4F8A2E6AA353();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_615152324C449F73D04AACA54BE851F8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_KawaiiPhysics_4280D00448E2B44889A813AE498B7922();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_KawaiiPhysics_ADE86AD74A496CF1F79F0086FAB1FE46();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_KawaiiPhysics_6FAB8A964FB79EAC4FFFA8B89781BC2A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_KawaiiPhysics_9DCA15F84CAD491D6222EB85BA8C654A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_KawaiiPhysics_3941BE004D3BF0B08C6C00A795621D68();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_KawaiiPhysics_00557A9F45B576A640B01E9750F19F4F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_9788D5374F251FABAF5E18916FB7D5A6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_1EF8806F4B571943516806BA00226079();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_F8314BBA4F7ACE69B8CF87B3B2372FF2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_2BDA42FA4BD0C6D5A1C9AAA2AE9D84EF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_1567BB904898EB9FF531AB8C37F8CB1F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Chr00000_AnimGraphNode_TransitionResult_5BE67FC7476D9BBC64184AB8098969A2();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Chr00000_C">();
	}
	static class UABP_Chr00000_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Chr00000_C>();
	}
};
static_assert(alignof(UABP_Chr00000_C) == 0x000010, "Wrong alignment on UABP_Chr00000_C");
static_assert(sizeof(UABP_Chr00000_C) == 0x0051A0, "Wrong size on UABP_Chr00000_C");
static_assert(offsetof(UABP_Chr00000_C, UberGraphFrame) == 0x000570, "Member 'UABP_Chr00000_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_55) == 0x000578, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_55' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_54) == 0x0005A0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_54' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_53) == 0x0005C8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_52) == 0x0005F0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_51) == 0x000618, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_50) == 0x000640, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_49) == 0x000668, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_48) == 0x000690, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_47) == 0x0006B8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_46) == 0x0006E0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_45) == 0x000708, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_44) == 0x000730, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_43) == 0x000758, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_42) == 0x000780, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_41) == 0x0007A8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_40) == 0x0007D0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_39) == 0x0007F8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_38) == 0x000820, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000848, "Member 'UABP_Chr00000_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_25) == 0x000930, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_33) == 0x000960, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_24) == 0x0009E0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_37) == 0x000A10, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_36) == 0x000A38, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, RCAnimGraphNode_SelectTurn_1) == 0x000A60, "Member 'UABP_Chr00000_C::RCAnimGraphNode_SelectTurn_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_32) == 0x000AF8, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_31) == 0x000B78, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_30) == 0x000BF8, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_29) == 0x000C78, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_28) == 0x000CF8, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_27) == 0x000D78, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_23) == 0x000DF8, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, RCAnimGraphNode_SelectTurn) == 0x000E28, "Member 'UABP_Chr00000_C::RCAnimGraphNode_SelectTurn' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_26) == 0x000EC0, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_25) == 0x000F40, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_24) == 0x000FC0, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_23) == 0x001040, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_22) == 0x0010C0, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_21) == 0x001140, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_22) == 0x0011C0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateMachine_5) == 0x0011F0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_21) == 0x0012A0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_BlendListByInt) == 0x0012D0, "Member 'UABP_Chr00000_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_20) == 0x001370, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_19) == 0x0013F0, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_18) == 0x001470, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_20) == 0x0014F0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_17) == 0x001520, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_19) == 0x0015A0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0015D0, "Member 'UABP_Chr00000_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_18) == 0x0016B8, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0016E8, "Member 'UABP_Chr00000_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TwoWayBlend_5) == 0x0017D0, "Member 'UABP_Chr00000_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_BlendSpacePlayer) == 0x001898, "Member 'UABP_Chr00000_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_17) == 0x001980, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateMachine_4) == 0x0019B0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_UseCachedPose_2) == 0x001A60, "Member 'UABP_Chr00000_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_Root) == 0x001A88, "Member 'UABP_Chr00000_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TwoWayBlend_4) == 0x001AB8, "Member 'UABP_Chr00000_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SaveCachedPose) == 0x001B80, "Member 'UABP_Chr00000_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TwoWayBlend_3) == 0x001CD8, "Member 'UABP_Chr00000_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_UseCachedPose_1) == 0x001DA0, "Member 'UABP_Chr00000_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TwoWayBlend_2) == 0x001DC8, "Member 'UABP_Chr00000_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TwoWayBlend_1) == 0x001E90, "Member 'UABP_Chr00000_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_KawaiiPhysics_5) == 0x001F60, "Member 'UABP_Chr00000_C::AnimGraphNode_KawaiiPhysics_5' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_KawaiiPhysics_4) == 0x002170, "Member 'UABP_Chr00000_C::AnimGraphNode_KawaiiPhysics_4' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_KawaiiPhysics_3) == 0x002380, "Member 'UABP_Chr00000_C::AnimGraphNode_KawaiiPhysics_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_KawaiiPhysics_2) == 0x002590, "Member 'UABP_Chr00000_C::AnimGraphNode_KawaiiPhysics_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_KawaiiPhysics_1) == 0x0027A0, "Member 'UABP_Chr00000_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_KawaiiPhysics) == 0x0029B0, "Member 'UABP_Chr00000_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_LocalToComponentSpace) == 0x002BC0, "Member 'UABP_Chr00000_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_ComponentToLocalSpace) == 0x002BE0, "Member 'UABP_Chr00000_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_35) == 0x002C00, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_34) == 0x002C28, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_16) == 0x002C50, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_16) == 0x002CD0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_15) == 0x002D00, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_15) == 0x002D80, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateMachine_3) == 0x002DB0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_LayeredBoneBlend) == 0x002E60, "Member 'UABP_Chr00000_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_33) == 0x002F20, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_32) == 0x002F48, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_31) == 0x002F70, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_30) == 0x002F98, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_29) == 0x002FC0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_28) == 0x002FE8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_27) == 0x003010, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_26) == 0x003038, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_25) == 0x003060, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_24) == 0x003088, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_23) == 0x0030B0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_14) == 0x0030D8, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_14) == 0x003158, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_13) == 0x003188, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_13) == 0x003208, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_12) == 0x003238, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_12) == 0x0032B8, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_11) == 0x0032E8, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_11) == 0x003368, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_10) == 0x003398, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_10) == 0x003418, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateMachine_2) == 0x003448, "Member 'UABP_Chr00000_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_22) == 0x0034F8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_21) == 0x003520, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_20) == 0x003548, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_19) == 0x003570, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_18) == 0x003598, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_17) == 0x0035C0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_16) == 0x0035E8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_15) == 0x003610, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_14) == 0x003638, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_13) == 0x003660, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_12) == 0x003688, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_9) == 0x0036B0, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_9) == 0x003730, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_8) == 0x003760, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_8) == 0x0037E0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_7) == 0x003810, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_7) == 0x003890, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_6) == 0x0038C0, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_6) == 0x003940, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_5) == 0x003970, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_5) == 0x0039F0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateMachine_1) == 0x003A20, "Member 'UABP_Chr00000_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_11) == 0x003AD0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_10) == 0x003AF8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_9) == 0x003B20, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_8) == 0x003B48, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_7) == 0x003B70, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_6) == 0x003B98, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_5) == 0x003BC0, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_4) == 0x003BE8, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_3) == 0x003C10, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_2) == 0x003C38, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult_1) == 0x003C60, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TransitionResult) == 0x003C88, "Member 'UABP_Chr00000_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_4) == 0x003CB0, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_4) == 0x003D30, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_3) == 0x003D60, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_3) == 0x003DE0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_2) == 0x003E10, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_2) == 0x003E90, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer_1) == 0x003EC0, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult_1) == 0x003F40, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_SequencePlayer) == 0x003F70, "Member 'UABP_Chr00000_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateResult) == 0x003FF0, "Member 'UABP_Chr00000_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_StateMachine) == 0x004020, "Member 'UABP_Chr00000_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, RCAnimGraphNode_LookCtrl) == 0x0040D0, "Member 'UABP_Chr00000_C::RCAnimGraphNode_LookCtrl' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, RCAnimGraphNode_FootIK) == 0x004870, "Member 'UABP_Chr00000_C::RCAnimGraphNode_FootIK' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_Slot) == 0x005030, "Member 'UABP_Chr00000_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_TwoWayBlend) == 0x005078, "Member 'UABP_Chr00000_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, AnimGraphNode_UseCachedPose) == 0x005140, "Member 'UABP_Chr00000_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, IsInAir_) == 0x005168, "Member 'UABP_Chr00000_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, Speed) == 0x00516C, "Member 'UABP_Chr00000_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, RotationYaw) == 0x005170, "Member 'UABP_Chr00000_C::RotationYaw' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, IsRotationYaw_) == 0x005174, "Member 'UABP_Chr00000_C::IsRotationYaw_' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, DirectionAmount) == 0x005178, "Member 'UABP_Chr00000_C::DirectionAmount' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, PreSpeed) == 0x00517C, "Member 'UABP_Chr00000_C::PreSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, SpeedAlpha) == 0x005180, "Member 'UABP_Chr00000_C::SpeedAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, MaxSpeed) == 0x005184, "Member 'UABP_Chr00000_C::MaxSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, UseExtraIdleIndex) == 0x005188, "Member 'UABP_Chr00000_C::UseExtraIdleIndex' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, IsExtraIdleTransition) == 0x00518C, "Member 'UABP_Chr00000_C::IsExtraIdleTransition' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, LeftRightCurve) == 0x005190, "Member 'UABP_Chr00000_C::LeftRightCurve' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, SlotNumber) == 0x005194, "Member 'UABP_Chr00000_C::SlotNumber' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, SqcAnimBlendAlpha) == 0x005198, "Member 'UABP_Chr00000_C::SqcAnimBlendAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Chr00000_C, FootIKBlendAlpha) == 0x00519C, "Member 'UABP_Chr00000_C::FootIKBlendAlpha' has a wrong offset!");

}

