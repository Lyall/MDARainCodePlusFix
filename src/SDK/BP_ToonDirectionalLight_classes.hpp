#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ToonDirectionalLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RC_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ToonDirectionalLight.BP_ToonDirectionalLight_C
// 0x0048 (0x0310 - 0x02C8)
class ABP_ToonDirectionalLight_C final : public ARCCharacterLigthActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Front;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColor;                                        // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           SkylightAmbient;                                   // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TickInterval;                                      // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplySettings();
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_ToonDirectionalLight(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ToonDirectionalLight_C">();
	}
	static class ABP_ToonDirectionalLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ToonDirectionalLight_C>();
	}
};
static_assert(alignof(ABP_ToonDirectionalLight_C) == 0x000008, "Wrong alignment on ABP_ToonDirectionalLight_C");
static_assert(sizeof(ABP_ToonDirectionalLight_C) == 0x000310, "Wrong size on ABP_ToonDirectionalLight_C");
static_assert(offsetof(ABP_ToonDirectionalLight_C, UberGraphFrame) == 0x0002C8, "Member 'ABP_ToonDirectionalLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ToonDirectionalLight_C, Billboard) == 0x0002D0, "Member 'ABP_ToonDirectionalLight_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_ToonDirectionalLight_C, Front) == 0x0002D8, "Member 'ABP_ToonDirectionalLight_C::Front' has a wrong offset!");
static_assert(offsetof(ABP_ToonDirectionalLight_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_ToonDirectionalLight_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ToonDirectionalLight_C, LightColor) == 0x0002E8, "Member 'ABP_ToonDirectionalLight_C::LightColor' has a wrong offset!");
static_assert(offsetof(ABP_ToonDirectionalLight_C, SkylightAmbient) == 0x0002F8, "Member 'ABP_ToonDirectionalLight_C::SkylightAmbient' has a wrong offset!");
static_assert(offsetof(ABP_ToonDirectionalLight_C, TickInterval) == 0x000308, "Member 'ABP_ToonDirectionalLight_C::TickInterval' has a wrong offset!");

}

