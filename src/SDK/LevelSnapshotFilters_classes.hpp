#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelSnapshotFilters

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "LevelSnapshotFilters_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class LevelSnapshotFilters.LevelSnapshotFilter
// 0x0000 (0x0028 - 0x0028)
class ULevelSnapshotFilter : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LevelSnapshotFilter">();
	}
	static class ULevelSnapshotFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelSnapshotFilter>();
	}
};
static_assert(alignof(ULevelSnapshotFilter) == 0x000008, "Wrong alignment on ULevelSnapshotFilter");
static_assert(sizeof(ULevelSnapshotFilter) == 0x000028, "Wrong size on ULevelSnapshotFilter");

// Class LevelSnapshotFilters.LevelSnapshotBlueprintFilter
// 0x0000 (0x0028 - 0x0028)
class ULevelSnapshotBlueprintFilter : public ULevelSnapshotFilter
{
public:
	EFilterResult IsActorValid(const struct FIsActorValidParams& Params_0) const;
	EFilterResult IsAddedActorValid(const struct FIsAddedActorValidParams& Params_0) const;
	EFilterResult IsDeletedActorValid(const struct FIsDeletedActorValidParams& Params_0) const;
	EFilterResult IsPropertyValid(const struct FIsPropertyValidParams& Params_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LevelSnapshotBlueprintFilter">();
	}
	static class ULevelSnapshotBlueprintFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelSnapshotBlueprintFilter>();
	}
};
static_assert(alignof(ULevelSnapshotBlueprintFilter) == 0x000008, "Wrong alignment on ULevelSnapshotBlueprintFilter");
static_assert(sizeof(ULevelSnapshotBlueprintFilter) == 0x000028, "Wrong size on ULevelSnapshotBlueprintFilter");

// Class LevelSnapshotFilters.ActorSelectorFilter
// 0x0008 (0x0030 - 0x0028)
class UActorSelectorFilter : public ULevelSnapshotBlueprintFilter
{
public:
	EFilterResult                                 DefaultResult;                                     // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActorSelectorFilter">();
	}
	static class UActorSelectorFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorSelectorFilter>();
	}
};
static_assert(alignof(UActorSelectorFilter) == 0x000008, "Wrong alignment on UActorSelectorFilter");
static_assert(sizeof(UActorSelectorFilter) == 0x000030, "Wrong size on UActorSelectorFilter");
static_assert(offsetof(UActorSelectorFilter, DefaultResult) == 0x000028, "Member 'UActorSelectorFilter::DefaultResult' has a wrong offset!");

// Class LevelSnapshotFilters.ActorChangedTransformFilter
// 0x0008 (0x0038 - 0x0030)
class UActorChangedTransformFilter final : public UActorSelectorFilter
{
public:
	ETransformReturnType                          TransformCheckRule;                                // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIgnoreLocation;                                   // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIgnoreRotation;                                   // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIgnoreScale;                                      // 0x0033(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActorChangedTransformFilter">();
	}
	static class UActorChangedTransformFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorChangedTransformFilter>();
	}
};
static_assert(alignof(UActorChangedTransformFilter) == 0x000008, "Wrong alignment on UActorChangedTransformFilter");
static_assert(sizeof(UActorChangedTransformFilter) == 0x000038, "Wrong size on UActorChangedTransformFilter");
static_assert(offsetof(UActorChangedTransformFilter, TransformCheckRule) == 0x000030, "Member 'UActorChangedTransformFilter::TransformCheckRule' has a wrong offset!");
static_assert(offsetof(UActorChangedTransformFilter, bIgnoreLocation) == 0x000031, "Member 'UActorChangedTransformFilter::bIgnoreLocation' has a wrong offset!");
static_assert(offsetof(UActorChangedTransformFilter, bIgnoreRotation) == 0x000032, "Member 'UActorChangedTransformFilter::bIgnoreRotation' has a wrong offset!");
static_assert(offsetof(UActorChangedTransformFilter, bIgnoreScale) == 0x000033, "Member 'UActorChangedTransformFilter::bIgnoreScale' has a wrong offset!");

// Class LevelSnapshotFilters.ActorDependentPropertyFilter
// 0x0028 (0x0050 - 0x0028)
class UActorDependentPropertyFilter final : public ULevelSnapshotFilter
{
public:
	class ULevelSnapshotFilter*                   ActorFilter;                                       // 0x0028(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSnapshotFilter*                   IncludePropertyFilter;                             // 0x0030(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSnapshotFilter*                   ExcludePropertyFilter;                             // 0x0038(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDoNotCareHandling                            DoNotCareHandling;                                 // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSnapshotFilter*                   DoNotCarePropertyFilter;                           // 0x0048(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActorDependentPropertyFilter">();
	}
	static class UActorDependentPropertyFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorDependentPropertyFilter>();
	}
};
static_assert(alignof(UActorDependentPropertyFilter) == 0x000008, "Wrong alignment on UActorDependentPropertyFilter");
static_assert(sizeof(UActorDependentPropertyFilter) == 0x000050, "Wrong size on UActorDependentPropertyFilter");
static_assert(offsetof(UActorDependentPropertyFilter, ActorFilter) == 0x000028, "Member 'UActorDependentPropertyFilter::ActorFilter' has a wrong offset!");
static_assert(offsetof(UActorDependentPropertyFilter, IncludePropertyFilter) == 0x000030, "Member 'UActorDependentPropertyFilter::IncludePropertyFilter' has a wrong offset!");
static_assert(offsetof(UActorDependentPropertyFilter, ExcludePropertyFilter) == 0x000038, "Member 'UActorDependentPropertyFilter::ExcludePropertyFilter' has a wrong offset!");
static_assert(offsetof(UActorDependentPropertyFilter, DoNotCareHandling) == 0x000040, "Member 'UActorDependentPropertyFilter::DoNotCareHandling' has a wrong offset!");
static_assert(offsetof(UActorDependentPropertyFilter, DoNotCarePropertyFilter) == 0x000048, "Member 'UActorDependentPropertyFilter::DoNotCarePropertyFilter' has a wrong offset!");

// Class LevelSnapshotFilters.ActorHasTagFilter
// 0x0060 (0x0090 - 0x0030)
class UActorHasTagFilter final : public UActorSelectorFilter
{
public:
	ETagCheckingBehavior                          TagCheckingBehavior;                               // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             AllowedTags;                                       // 0x0038(0x0050)(Edit, NativeAccessSpecifierPrivate)
	EActorToCheck                                 ActorToCheck;                                      // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActorHasTagFilter">();
	}
	static class UActorHasTagFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorHasTagFilter>();
	}
};
static_assert(alignof(UActorHasTagFilter) == 0x000008, "Wrong alignment on UActorHasTagFilter");
static_assert(sizeof(UActorHasTagFilter) == 0x000090, "Wrong size on UActorHasTagFilter");
static_assert(offsetof(UActorHasTagFilter, TagCheckingBehavior) == 0x000030, "Member 'UActorHasTagFilter::TagCheckingBehavior' has a wrong offset!");
static_assert(offsetof(UActorHasTagFilter, AllowedTags) == 0x000038, "Member 'UActorHasTagFilter::AllowedTags' has a wrong offset!");
static_assert(offsetof(UActorHasTagFilter, ActorToCheck) == 0x000088, "Member 'UActorHasTagFilter::ActorToCheck' has a wrong offset!");

// Class LevelSnapshotFilters.ParentFilter
// 0x0020 (0x0048 - 0x0028)
class UParentFilter : public ULevelSnapshotFilter
{
public:
	TArray<class ULevelSnapshotFilter*>           Children;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class ULevelSnapshotFilter*>           InstancedChildren;                                 // 0x0038(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	void AddChild(class ULevelSnapshotFilter* Filter);
	class ULevelSnapshotFilter* CreateChild(const TSubclassOf<class ULevelSnapshotFilter>& Class_0);
	bool RemovedChild(class ULevelSnapshotFilter* Filter);

	TArray<class ULevelSnapshotFilter*> GetChildren() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ParentFilter">();
	}
	static class UParentFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UParentFilter>();
	}
};
static_assert(alignof(UParentFilter) == 0x000008, "Wrong alignment on UParentFilter");
static_assert(sizeof(UParentFilter) == 0x000048, "Wrong size on UParentFilter");
static_assert(offsetof(UParentFilter, Children) == 0x000028, "Member 'UParentFilter::Children' has a wrong offset!");
static_assert(offsetof(UParentFilter, InstancedChildren) == 0x000038, "Member 'UParentFilter::InstancedChildren' has a wrong offset!");

// Class LevelSnapshotFilters.AndFilter
// 0x0000 (0x0048 - 0x0048)
class UAndFilter final : public UParentFilter
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AndFilter">();
	}
	static class UAndFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAndFilter>();
	}
};
static_assert(alignof(UAndFilter) == 0x000008, "Wrong alignment on UAndFilter");
static_assert(sizeof(UAndFilter) == 0x000048, "Wrong size on UAndFilter");

// Class LevelSnapshotFilters.ConstantFilter
// 0x0008 (0x0030 - 0x0028)
class UConstantFilter final : public ULevelSnapshotFilter
{
public:
	EFilterResult                                 IsActorValidResult;                                // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFilterResult                                 IsPropertyValidResult;                             // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFilterResult                                 IsDeletedActorValidResult;                         // 0x002A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFilterResult                                 IsAddedActorValidResult;                           // 0x002B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstantFilter">();
	}
	static class UConstantFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstantFilter>();
	}
};
static_assert(alignof(UConstantFilter) == 0x000008, "Wrong alignment on UConstantFilter");
static_assert(sizeof(UConstantFilter) == 0x000030, "Wrong size on UConstantFilter");
static_assert(offsetof(UConstantFilter, IsActorValidResult) == 0x000028, "Member 'UConstantFilter::IsActorValidResult' has a wrong offset!");
static_assert(offsetof(UConstantFilter, IsPropertyValidResult) == 0x000029, "Member 'UConstantFilter::IsPropertyValidResult' has a wrong offset!");
static_assert(offsetof(UConstantFilter, IsDeletedActorValidResult) == 0x00002A, "Member 'UConstantFilter::IsDeletedActorValidResult' has a wrong offset!");
static_assert(offsetof(UConstantFilter, IsAddedActorValidResult) == 0x00002B, "Member 'UConstantFilter::IsAddedActorValidResult' has a wrong offset!");

// Class LevelSnapshotFilters.FilterBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFilterBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class ULevelSnapshotFilter* CreateFilterByClass(const TSubclassOf<class ULevelSnapshotFilter>& Class_0, class FName Name_0, class UObject* Outer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FilterBlueprintFunctionLibrary">();
	}
	static class UFilterBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFilterBlueprintFunctionLibrary>();
	}
};
static_assert(alignof(UFilterBlueprintFunctionLibrary) == 0x000008, "Wrong alignment on UFilterBlueprintFunctionLibrary");
static_assert(sizeof(UFilterBlueprintFunctionLibrary) == 0x000028, "Wrong size on UFilterBlueprintFunctionLibrary");

// Class LevelSnapshotFilters.NegationFilter
// 0x0018 (0x0040 - 0x0028)
class UNegationFilter final : public ULevelSnapshotFilter
{
public:
	bool                                          bShouldNegate;                                     // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSnapshotFilter*                   Child;                                             // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelSnapshotFilter*                   InstancedChild;                                    // 0x0038(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class ULevelSnapshotFilter* CreateChild(const TSubclassOf<class ULevelSnapshotFilter>& ChildClass);
	void SetExternalChild(class ULevelSnapshotFilter* NewChild);

	class ULevelSnapshotFilter* GetChild() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NegationFilter">();
	}
	static class UNegationFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNegationFilter>();
	}
};
static_assert(alignof(UNegationFilter) == 0x000008, "Wrong alignment on UNegationFilter");
static_assert(sizeof(UNegationFilter) == 0x000040, "Wrong size on UNegationFilter");
static_assert(offsetof(UNegationFilter, bShouldNegate) == 0x000028, "Member 'UNegationFilter::bShouldNegate' has a wrong offset!");
static_assert(offsetof(UNegationFilter, Child) == 0x000030, "Member 'UNegationFilter::Child' has a wrong offset!");
static_assert(offsetof(UNegationFilter, InstancedChild) == 0x000038, "Member 'UNegationFilter::InstancedChild' has a wrong offset!");

// Class LevelSnapshotFilters.OrFilter
// 0x0000 (0x0048 - 0x0048)
class UOrFilter final : public UParentFilter
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrFilter">();
	}
	static class UOrFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrFilter>();
	}
};
static_assert(alignof(UOrFilter) == 0x000008, "Wrong alignment on UOrFilter");
static_assert(sizeof(UOrFilter) == 0x000048, "Wrong size on UOrFilter");

// Class LevelSnapshotFilters.PropertyBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UPropertyBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetPropertyName(const TFieldPath<struct FProperty>& Property);
	static class FString GetPropertyOriginPath(const TFieldPath<struct FProperty>& Property);

	class AActor* LoadSnapshotActor(const struct FIsDeletedActorValidParams& Params_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PropertyBlueprintFunctionLibrary">();
	}
	static class UPropertyBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPropertyBlueprintFunctionLibrary>();
	}
};
static_assert(alignof(UPropertyBlueprintFunctionLibrary) == 0x000008, "Wrong alignment on UPropertyBlueprintFunctionLibrary");
static_assert(sizeof(UPropertyBlueprintFunctionLibrary) == 0x000028, "Wrong size on UPropertyBlueprintFunctionLibrary");

// Class LevelSnapshotFilters.PropertySelectorFilter
// 0x0008 (0x0030 - 0x0028)
class UPropertySelectorFilter : public ULevelSnapshotBlueprintFilter
{
public:
	EFilterResult                                 DefaultResult;                                     // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PropertySelectorFilter">();
	}
	static class UPropertySelectorFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPropertySelectorFilter>();
	}
};
static_assert(alignof(UPropertySelectorFilter) == 0x000008, "Wrong alignment on UPropertySelectorFilter");
static_assert(sizeof(UPropertySelectorFilter) == 0x000030, "Wrong size on UPropertySelectorFilter");
static_assert(offsetof(UPropertySelectorFilter, DefaultResult) == 0x000028, "Member 'UPropertySelectorFilter::DefaultResult' has a wrong offset!");

// Class LevelSnapshotFilters.PropertyHasNameFilter
// 0x0058 (0x0088 - 0x0030)
class UPropertyHasNameFilter final : public UPropertySelectorFilter
{
public:
	ENameMatchingRule                             NameMatchingRule;                                  // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FString>                           AllowedNames;                                      // 0x0038(0x0050)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PropertyHasNameFilter">();
	}
	static class UPropertyHasNameFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPropertyHasNameFilter>();
	}
};
static_assert(alignof(UPropertyHasNameFilter) == 0x000008, "Wrong alignment on UPropertyHasNameFilter");
static_assert(sizeof(UPropertyHasNameFilter) == 0x000088, "Wrong size on UPropertyHasNameFilter");
static_assert(offsetof(UPropertyHasNameFilter, NameMatchingRule) == 0x000030, "Member 'UPropertyHasNameFilter::NameMatchingRule' has a wrong offset!");
static_assert(offsetof(UPropertyHasNameFilter, AllowedNames) == 0x000038, "Member 'UPropertyHasNameFilter::AllowedNames' has a wrong offset!");

// Class LevelSnapshotFilters.PropertyTypeFilter
// 0x0050 (0x0080 - 0x0030)
class UPropertyTypeFilter final : public UPropertySelectorFilter
{
public:
	TSet<EBlueprintPropertyType>                  AllowedTypes;                                      // 0x0030(0x0050)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PropertyTypeFilter">();
	}
	static class UPropertyTypeFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPropertyTypeFilter>();
	}
};
static_assert(alignof(UPropertyTypeFilter) == 0x000008, "Wrong alignment on UPropertyTypeFilter");
static_assert(sizeof(UPropertyTypeFilter) == 0x000080, "Wrong size on UPropertyTypeFilter");
static_assert(offsetof(UPropertyTypeFilter, AllowedTypes) == 0x000030, "Member 'UPropertyTypeFilter::AllowedTypes' has a wrong offset!");

// Class LevelSnapshotFilters.TransformPropertyFilter
// 0x0008 (0x0038 - 0x0030)
class UTransformPropertyFilter final : public UPropertySelectorFilter
{
public:
	EFilterResult                                 Location;                                          // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFilterResult                                 Rotation;                                          // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFilterResult                                 Scale;                                             // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TransformPropertyFilter">();
	}
	static class UTransformPropertyFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransformPropertyFilter>();
	}
};
static_assert(alignof(UTransformPropertyFilter) == 0x000008, "Wrong alignment on UTransformPropertyFilter");
static_assert(sizeof(UTransformPropertyFilter) == 0x000038, "Wrong size on UTransformPropertyFilter");
static_assert(offsetof(UTransformPropertyFilter, Location) == 0x000030, "Member 'UTransformPropertyFilter::Location' has a wrong offset!");
static_assert(offsetof(UTransformPropertyFilter, Rotation) == 0x000031, "Member 'UTransformPropertyFilter::Rotation' has a wrong offset!");
static_assert(offsetof(UTransformPropertyFilter, Scale) == 0x000032, "Member 'UTransformPropertyFilter::Scale' has a wrong offset!");

}

