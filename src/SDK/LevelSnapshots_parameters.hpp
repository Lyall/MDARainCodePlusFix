#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelSnapshots

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LevelSnapshots.LevelSnapshot.SetSnapshotDescription
// 0x0010 (0x0010 - 0x0000)
struct LevelSnapshot_SetSnapshotDescription final
{
public:
	class FString                                 InSnapshotDescription;                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshot_SetSnapshotDescription) == 0x000008, "Wrong alignment on LevelSnapshot_SetSnapshotDescription");
static_assert(sizeof(LevelSnapshot_SetSnapshotDescription) == 0x000010, "Wrong size on LevelSnapshot_SetSnapshotDescription");
static_assert(offsetof(LevelSnapshot_SetSnapshotDescription, InSnapshotDescription) == 0x000000, "Member 'LevelSnapshot_SetSnapshotDescription::InSnapshotDescription' has a wrong offset!");

// Function LevelSnapshots.LevelSnapshot.SetSnapshotName
// 0x0008 (0x0008 - 0x0000)
struct LevelSnapshot_SetSnapshotName final
{
public:
	class FName                                   InSnapshotName;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshot_SetSnapshotName) == 0x000004, "Wrong alignment on LevelSnapshot_SetSnapshotName");
static_assert(sizeof(LevelSnapshot_SetSnapshotName) == 0x000008, "Wrong size on LevelSnapshot_SetSnapshotName");
static_assert(offsetof(LevelSnapshot_SetSnapshotName, InSnapshotName) == 0x000000, "Member 'LevelSnapshot_SetSnapshotName::InSnapshotName' has a wrong offset!");

// Function LevelSnapshots.LevelSnapshot.GetCaptureTime
// 0x0008 (0x0008 - 0x0000)
struct LevelSnapshot_GetCaptureTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshot_GetCaptureTime) == 0x000008, "Wrong alignment on LevelSnapshot_GetCaptureTime");
static_assert(sizeof(LevelSnapshot_GetCaptureTime) == 0x000008, "Wrong size on LevelSnapshot_GetCaptureTime");
static_assert(offsetof(LevelSnapshot_GetCaptureTime, ReturnValue) == 0x000000, "Member 'LevelSnapshot_GetCaptureTime::ReturnValue' has a wrong offset!");

// Function LevelSnapshots.LevelSnapshot.GetMapPath
// 0x0018 (0x0018 - 0x0000)
struct LevelSnapshot_GetMapPath final
{
public:
	struct FSoftObjectPath                        ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshot_GetMapPath) == 0x000008, "Wrong alignment on LevelSnapshot_GetMapPath");
static_assert(sizeof(LevelSnapshot_GetMapPath) == 0x000018, "Wrong size on LevelSnapshot_GetMapPath");
static_assert(offsetof(LevelSnapshot_GetMapPath, ReturnValue) == 0x000000, "Member 'LevelSnapshot_GetMapPath::ReturnValue' has a wrong offset!");

// Function LevelSnapshots.LevelSnapshot.GetSnapshotDescription
// 0x0010 (0x0010 - 0x0000)
struct LevelSnapshot_GetSnapshotDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshot_GetSnapshotDescription) == 0x000008, "Wrong alignment on LevelSnapshot_GetSnapshotDescription");
static_assert(sizeof(LevelSnapshot_GetSnapshotDescription) == 0x000010, "Wrong size on LevelSnapshot_GetSnapshotDescription");
static_assert(offsetof(LevelSnapshot_GetSnapshotDescription, ReturnValue) == 0x000000, "Member 'LevelSnapshot_GetSnapshotDescription::ReturnValue' has a wrong offset!");

// Function LevelSnapshots.LevelSnapshot.GetSnapshotName
// 0x0008 (0x0008 - 0x0000)
struct LevelSnapshot_GetSnapshotName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshot_GetSnapshotName) == 0x000004, "Wrong alignment on LevelSnapshot_GetSnapshotName");
static_assert(sizeof(LevelSnapshot_GetSnapshotName) == 0x000008, "Wrong size on LevelSnapshot_GetSnapshotName");
static_assert(offsetof(LevelSnapshot_GetSnapshotName, ReturnValue) == 0x000000, "Member 'LevelSnapshot_GetSnapshotName::ReturnValue' has a wrong offset!");

// Function LevelSnapshots.LevelSnapshotsEditorDataManagementSettings.ParseLevelSnapshotsTokensInText
// 0x0040 (0x0040 - 0x0000)
struct LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText final
{
public:
	class FText                                   InTextToParse;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 InWorldName;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0028(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText) == 0x000008, "Wrong alignment on LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText");
static_assert(sizeof(LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText) == 0x000040, "Wrong size on LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText");
static_assert(offsetof(LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText, InTextToParse) == 0x000000, "Member 'LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText::InTextToParse' has a wrong offset!");
static_assert(offsetof(LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText, InWorldName) == 0x000018, "Member 'LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText::InWorldName' has a wrong offset!");
static_assert(offsetof(LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText, ReturnValue) == 0x000028, "Member 'LevelSnapshotsEditorDataManagementSettings_ParseLevelSnapshotsTokensInText::ReturnValue' has a wrong offset!");

// Function LevelSnapshots.LevelSnapshotsFunctionLibrary.ApplySnapshotToWorld
// 0x0018 (0x0018 - 0x0000)
struct LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSnapshot*                         Snapshot;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSnapshotFilter*                   OptionalFilter;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld) == 0x000008, "Wrong alignment on LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld");
static_assert(sizeof(LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld) == 0x000018, "Wrong size on LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld");
static_assert(offsetof(LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld, WorldContextObject) == 0x000000, "Member 'LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld, Snapshot) == 0x000008, "Member 'LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld::Snapshot' has a wrong offset!");
static_assert(offsetof(LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld, OptionalFilter) == 0x000010, "Member 'LevelSnapshotsFunctionLibrary_ApplySnapshotToWorld::OptionalFilter' has a wrong offset!");

// Function LevelSnapshots.LevelSnapshotsFunctionLibrary.TakeLevelSnapshot
// 0x0028 (0x0028 - 0x0000)
struct LevelSnapshotsFunctionLibrary_TakeLevelSnapshot final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NewSnapshotName;                                   // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSnapshot*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelSnapshotsFunctionLibrary_TakeLevelSnapshot) == 0x000008, "Wrong alignment on LevelSnapshotsFunctionLibrary_TakeLevelSnapshot");
static_assert(sizeof(LevelSnapshotsFunctionLibrary_TakeLevelSnapshot) == 0x000028, "Wrong size on LevelSnapshotsFunctionLibrary_TakeLevelSnapshot");
static_assert(offsetof(LevelSnapshotsFunctionLibrary_TakeLevelSnapshot, WorldContextObject) == 0x000000, "Member 'LevelSnapshotsFunctionLibrary_TakeLevelSnapshot::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelSnapshotsFunctionLibrary_TakeLevelSnapshot, NewSnapshotName) == 0x000008, "Member 'LevelSnapshotsFunctionLibrary_TakeLevelSnapshot::NewSnapshotName' has a wrong offset!");
static_assert(offsetof(LevelSnapshotsFunctionLibrary_TakeLevelSnapshot, Description) == 0x000010, "Member 'LevelSnapshotsFunctionLibrary_TakeLevelSnapshot::Description' has a wrong offset!");
static_assert(offsetof(LevelSnapshotsFunctionLibrary_TakeLevelSnapshot, ReturnValue) == 0x000020, "Member 'LevelSnapshotsFunctionLibrary_TakeLevelSnapshot::ReturnValue' has a wrong offset!");

}

