#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JSONQuery

#include "Basic.hpp"


namespace SDK::Params
{

// Function JSONQuery.JsonFieldData.Create
// 0x0008 (0x0008 - 0x0000)
struct JsonFieldData_Create final
{
public:
	class UJsonFieldData*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_Create) == 0x000008, "Wrong alignment on JsonFieldData_Create");
static_assert(sizeof(JsonFieldData_Create) == 0x000008, "Wrong size on JsonFieldData_Create");
static_assert(offsetof(JsonFieldData_Create, ReturnValue) == 0x000000, "Member 'JsonFieldData_Create::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetRequest
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_GetRequest final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetRequest) == 0x000008, "Wrong alignment on JsonFieldData_GetRequest");
static_assert(sizeof(JsonFieldData_GetRequest) == 0x000018, "Wrong size on JsonFieldData_GetRequest");
static_assert(offsetof(JsonFieldData_GetRequest, URL) == 0x000000, "Member 'JsonFieldData_GetRequest::URL' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetRequest, ReturnValue) == 0x000010, "Member 'JsonFieldData_GetRequest::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.FromFile
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_FromFile final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonFieldData_FromFile) == 0x000008, "Wrong alignment on JsonFieldData_FromFile");
static_assert(sizeof(JsonFieldData_FromFile) == 0x000018, "Wrong size on JsonFieldData_FromFile");
static_assert(offsetof(JsonFieldData_FromFile, FilePath) == 0x000000, "Member 'JsonFieldData_FromFile::FilePath' has a wrong offset!");
static_assert(offsetof(JsonFieldData_FromFile, ReturnValue) == 0x000010, "Member 'JsonFieldData_FromFile::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.FromString
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_FromString final
{
public:
	class FString                                 dataString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonFieldData_FromString) == 0x000008, "Wrong alignment on JsonFieldData_FromString");
static_assert(sizeof(JsonFieldData_FromString) == 0x000018, "Wrong size on JsonFieldData_FromString");
static_assert(offsetof(JsonFieldData_FromString, dataString) == 0x000000, "Member 'JsonFieldData_FromString::dataString' has a wrong offset!");
static_assert(offsetof(JsonFieldData_FromString, ReturnValue) == 0x000010, "Member 'JsonFieldData_FromString::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetBoolArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_GetBoolArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetBoolArray) == 0x000008, "Wrong alignment on JsonFieldData_GetBoolArray");
static_assert(sizeof(JsonFieldData_GetBoolArray) == 0x000028, "Wrong size on JsonFieldData_GetBoolArray");
static_assert(offsetof(JsonFieldData_GetBoolArray, Key) == 0x000000, "Member 'JsonFieldData_GetBoolArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetBoolArray, Success) == 0x000010, "Member 'JsonFieldData_GetBoolArray::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetBoolArray, ReturnValue) == 0x000018, "Member 'JsonFieldData_GetBoolArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetFloatArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_GetFloatArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetFloatArray) == 0x000008, "Wrong alignment on JsonFieldData_GetFloatArray");
static_assert(sizeof(JsonFieldData_GetFloatArray) == 0x000028, "Wrong size on JsonFieldData_GetFloatArray");
static_assert(offsetof(JsonFieldData_GetFloatArray, Key) == 0x000000, "Member 'JsonFieldData_GetFloatArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetFloatArray, Success) == 0x000010, "Member 'JsonFieldData_GetFloatArray::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetFloatArray, ReturnValue) == 0x000018, "Member 'JsonFieldData_GetFloatArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetIntArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_GetIntArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetIntArray) == 0x000008, "Wrong alignment on JsonFieldData_GetIntArray");
static_assert(sizeof(JsonFieldData_GetIntArray) == 0x000028, "Wrong size on JsonFieldData_GetIntArray");
static_assert(offsetof(JsonFieldData_GetIntArray, Key) == 0x000000, "Member 'JsonFieldData_GetIntArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetIntArray, Success) == 0x000010, "Member 'JsonFieldData_GetIntArray::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetIntArray, ReturnValue) == 0x000018, "Member 'JsonFieldData_GetIntArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetObject
// 0x0020 (0x0020 - 0x0000)
struct JsonFieldData_GetObject final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJsonFieldData*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetObject) == 0x000008, "Wrong alignment on JsonFieldData_GetObject");
static_assert(sizeof(JsonFieldData_GetObject) == 0x000020, "Wrong size on JsonFieldData_GetObject");
static_assert(offsetof(JsonFieldData_GetObject, Key) == 0x000000, "Member 'JsonFieldData_GetObject::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetObject, Success) == 0x000010, "Member 'JsonFieldData_GetObject::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetObject, ReturnValue) == 0x000018, "Member 'JsonFieldData_GetObject::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetObjectArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_GetObjectArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJsonFieldData*>                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetObjectArray) == 0x000008, "Wrong alignment on JsonFieldData_GetObjectArray");
static_assert(sizeof(JsonFieldData_GetObjectArray) == 0x000028, "Wrong size on JsonFieldData_GetObjectArray");
static_assert(offsetof(JsonFieldData_GetObjectArray, Key) == 0x000000, "Member 'JsonFieldData_GetObjectArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetObjectArray, Success) == 0x000010, "Member 'JsonFieldData_GetObjectArray::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetObjectArray, ReturnValue) == 0x000018, "Member 'JsonFieldData_GetObjectArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetObjectKeys
// 0x0010 (0x0010 - 0x0000)
struct JsonFieldData_GetObjectKeys final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetObjectKeys) == 0x000008, "Wrong alignment on JsonFieldData_GetObjectKeys");
static_assert(sizeof(JsonFieldData_GetObjectKeys) == 0x000010, "Wrong size on JsonFieldData_GetObjectKeys");
static_assert(offsetof(JsonFieldData_GetObjectKeys, ReturnValue) == 0x000000, "Member 'JsonFieldData_GetObjectKeys::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetStringArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_GetStringArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetStringArray) == 0x000008, "Wrong alignment on JsonFieldData_GetStringArray");
static_assert(sizeof(JsonFieldData_GetStringArray) == 0x000028, "Wrong size on JsonFieldData_GetStringArray");
static_assert(offsetof(JsonFieldData_GetStringArray, Key) == 0x000000, "Member 'JsonFieldData_GetStringArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetStringArray, Success) == 0x000010, "Member 'JsonFieldData_GetStringArray::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetStringArray, ReturnValue) == 0x000018, "Member 'JsonFieldData_GetStringArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.HasField
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_HasField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonFieldData_HasField) == 0x000008, "Wrong alignment on JsonFieldData_HasField");
static_assert(sizeof(JsonFieldData_HasField) == 0x000018, "Wrong size on JsonFieldData_HasField");
static_assert(offsetof(JsonFieldData_HasField, Key) == 0x000000, "Member 'JsonFieldData_HasField::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_HasField, ReturnValue) == 0x000010, "Member 'JsonFieldData_HasField::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.PostRequest
// 0x0010 (0x0010 - 0x0000)
struct JsonFieldData_PostRequest final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_PostRequest) == 0x000008, "Wrong alignment on JsonFieldData_PostRequest");
static_assert(sizeof(JsonFieldData_PostRequest) == 0x000010, "Wrong size on JsonFieldData_PostRequest");
static_assert(offsetof(JsonFieldData_PostRequest, URL) == 0x000000, "Member 'JsonFieldData_PostRequest::URL' has a wrong offset!");

// Function JSONQuery.JsonFieldData.PostRequestWithFile
// 0x0020 (0x0020 - 0x0000)
struct JsonFieldData_PostRequestWithFile final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_PostRequestWithFile) == 0x000008, "Wrong alignment on JsonFieldData_PostRequestWithFile");
static_assert(sizeof(JsonFieldData_PostRequestWithFile) == 0x000020, "Wrong size on JsonFieldData_PostRequestWithFile");
static_assert(offsetof(JsonFieldData_PostRequestWithFile, FilePath) == 0x000000, "Member 'JsonFieldData_PostRequestWithFile::FilePath' has a wrong offset!");
static_assert(offsetof(JsonFieldData_PostRequestWithFile, URL) == 0x000010, "Member 'JsonFieldData_PostRequestWithFile::URL' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetBoolArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_SetBoolArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  Data;                                              // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetBoolArray) == 0x000008, "Wrong alignment on JsonFieldData_SetBoolArray");
static_assert(sizeof(JsonFieldData_SetBoolArray) == 0x000028, "Wrong size on JsonFieldData_SetBoolArray");
static_assert(offsetof(JsonFieldData_SetBoolArray, Key) == 0x000000, "Member 'JsonFieldData_SetBoolArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetBoolArray, Data) == 0x000010, "Member 'JsonFieldData_SetBoolArray::Data' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetBoolArray, ReturnValue) == 0x000020, "Member 'JsonFieldData_SetBoolArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetBoolean
// 0x0020 (0x0020 - 0x0000)
struct JsonFieldData_SetBoolean final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJsonFieldData*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetBoolean) == 0x000008, "Wrong alignment on JsonFieldData_SetBoolean");
static_assert(sizeof(JsonFieldData_SetBoolean) == 0x000020, "Wrong size on JsonFieldData_SetBoolean");
static_assert(offsetof(JsonFieldData_SetBoolean, Key) == 0x000000, "Member 'JsonFieldData_SetBoolean::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetBoolean, Value) == 0x000010, "Member 'JsonFieldData_SetBoolean::Value' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetBoolean, ReturnValue) == 0x000018, "Member 'JsonFieldData_SetBoolean::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetFloat
// 0x0020 (0x0020 - 0x0000)
struct JsonFieldData_SetFloat final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJsonFieldData*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetFloat) == 0x000008, "Wrong alignment on JsonFieldData_SetFloat");
static_assert(sizeof(JsonFieldData_SetFloat) == 0x000020, "Wrong size on JsonFieldData_SetFloat");
static_assert(offsetof(JsonFieldData_SetFloat, Key) == 0x000000, "Member 'JsonFieldData_SetFloat::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetFloat, Value) == 0x000010, "Member 'JsonFieldData_SetFloat::Value' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetFloat, ReturnValue) == 0x000018, "Member 'JsonFieldData_SetFloat::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetFloatArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_SetFloatArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 Data;                                              // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetFloatArray) == 0x000008, "Wrong alignment on JsonFieldData_SetFloatArray");
static_assert(sizeof(JsonFieldData_SetFloatArray) == 0x000028, "Wrong size on JsonFieldData_SetFloatArray");
static_assert(offsetof(JsonFieldData_SetFloatArray, Key) == 0x000000, "Member 'JsonFieldData_SetFloatArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetFloatArray, Data) == 0x000010, "Member 'JsonFieldData_SetFloatArray::Data' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetFloatArray, ReturnValue) == 0x000020, "Member 'JsonFieldData_SetFloatArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetInt
// 0x0020 (0x0020 - 0x0000)
struct JsonFieldData_SetInt final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJsonFieldData*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetInt) == 0x000008, "Wrong alignment on JsonFieldData_SetInt");
static_assert(sizeof(JsonFieldData_SetInt) == 0x000020, "Wrong size on JsonFieldData_SetInt");
static_assert(offsetof(JsonFieldData_SetInt, Key) == 0x000000, "Member 'JsonFieldData_SetInt::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetInt, Value) == 0x000010, "Member 'JsonFieldData_SetInt::Value' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetInt, ReturnValue) == 0x000018, "Member 'JsonFieldData_SetInt::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetIntArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_SetIntArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Data;                                              // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetIntArray) == 0x000008, "Wrong alignment on JsonFieldData_SetIntArray");
static_assert(sizeof(JsonFieldData_SetIntArray) == 0x000028, "Wrong size on JsonFieldData_SetIntArray");
static_assert(offsetof(JsonFieldData_SetIntArray, Key) == 0x000000, "Member 'JsonFieldData_SetIntArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetIntArray, Data) == 0x000010, "Member 'JsonFieldData_SetIntArray::Data' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetIntArray, ReturnValue) == 0x000020, "Member 'JsonFieldData_SetIntArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetNull
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_SetNull final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetNull) == 0x000008, "Wrong alignment on JsonFieldData_SetNull");
static_assert(sizeof(JsonFieldData_SetNull) == 0x000018, "Wrong size on JsonFieldData_SetNull");
static_assert(offsetof(JsonFieldData_SetNull, Key) == 0x000000, "Member 'JsonFieldData_SetNull::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetNull, ReturnValue) == 0x000010, "Member 'JsonFieldData_SetNull::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetNullArray
// 0x0020 (0x0020 - 0x0000)
struct JsonFieldData_SetNullArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Length;                                            // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJsonFieldData*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetNullArray) == 0x000008, "Wrong alignment on JsonFieldData_SetNullArray");
static_assert(sizeof(JsonFieldData_SetNullArray) == 0x000020, "Wrong size on JsonFieldData_SetNullArray");
static_assert(offsetof(JsonFieldData_SetNullArray, Key) == 0x000000, "Member 'JsonFieldData_SetNullArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetNullArray, Length) == 0x000010, "Member 'JsonFieldData_SetNullArray::Length' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetNullArray, ReturnValue) == 0x000018, "Member 'JsonFieldData_SetNullArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetObject
// 0x0020 (0x0020 - 0x0000)
struct JsonFieldData_SetObject final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UJsonFieldData*                   objectData;                                        // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetObject) == 0x000008, "Wrong alignment on JsonFieldData_SetObject");
static_assert(sizeof(JsonFieldData_SetObject) == 0x000020, "Wrong size on JsonFieldData_SetObject");
static_assert(offsetof(JsonFieldData_SetObject, Key) == 0x000000, "Member 'JsonFieldData_SetObject::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetObject, objectData) == 0x000010, "Member 'JsonFieldData_SetObject::objectData' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetObject, ReturnValue) == 0x000018, "Member 'JsonFieldData_SetObject::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetObjectArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_SetObjectArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UJsonFieldData*>                 ArrayData;                                         // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetObjectArray) == 0x000008, "Wrong alignment on JsonFieldData_SetObjectArray");
static_assert(sizeof(JsonFieldData_SetObjectArray) == 0x000028, "Wrong size on JsonFieldData_SetObjectArray");
static_assert(offsetof(JsonFieldData_SetObjectArray, Key) == 0x000000, "Member 'JsonFieldData_SetObjectArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetObjectArray, ArrayData) == 0x000010, "Member 'JsonFieldData_SetObjectArray::ArrayData' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetObjectArray, ReturnValue) == 0x000020, "Member 'JsonFieldData_SetObjectArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetString
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_SetString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetString) == 0x000008, "Wrong alignment on JsonFieldData_SetString");
static_assert(sizeof(JsonFieldData_SetString) == 0x000028, "Wrong size on JsonFieldData_SetString");
static_assert(offsetof(JsonFieldData_SetString, Key) == 0x000000, "Member 'JsonFieldData_SetString::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetString, Value) == 0x000010, "Member 'JsonFieldData_SetString::Value' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetString, ReturnValue) == 0x000020, "Member 'JsonFieldData_SetString::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.SetStringArray
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_SetStringArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Data;                                              // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UJsonFieldData*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_SetStringArray) == 0x000008, "Wrong alignment on JsonFieldData_SetStringArray");
static_assert(sizeof(JsonFieldData_SetStringArray) == 0x000028, "Wrong size on JsonFieldData_SetStringArray");
static_assert(offsetof(JsonFieldData_SetStringArray, Key) == 0x000000, "Member 'JsonFieldData_SetStringArray::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetStringArray, Data) == 0x000010, "Member 'JsonFieldData_SetStringArray::Data' has a wrong offset!");
static_assert(offsetof(JsonFieldData_SetStringArray, ReturnValue) == 0x000020, "Member 'JsonFieldData_SetStringArray::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.ToString
// 0x0010 (0x0010 - 0x0000)
struct JsonFieldData_ToString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_ToString) == 0x000008, "Wrong alignment on JsonFieldData_ToString");
static_assert(sizeof(JsonFieldData_ToString) == 0x000010, "Wrong size on JsonFieldData_ToString");
static_assert(offsetof(JsonFieldData_ToString, ReturnValue) == 0x000000, "Member 'JsonFieldData_ToString::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetBool
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_GetBool final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonFieldData_GetBool) == 0x000008, "Wrong alignment on JsonFieldData_GetBool");
static_assert(sizeof(JsonFieldData_GetBool) == 0x000018, "Wrong size on JsonFieldData_GetBool");
static_assert(offsetof(JsonFieldData_GetBool, Key) == 0x000000, "Member 'JsonFieldData_GetBool::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetBool, Success) == 0x000010, "Member 'JsonFieldData_GetBool::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetBool, ReturnValue) == 0x000011, "Member 'JsonFieldData_GetBool::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetFloat
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_GetFloat final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetFloat) == 0x000008, "Wrong alignment on JsonFieldData_GetFloat");
static_assert(sizeof(JsonFieldData_GetFloat) == 0x000018, "Wrong size on JsonFieldData_GetFloat");
static_assert(offsetof(JsonFieldData_GetFloat, Key) == 0x000000, "Member 'JsonFieldData_GetFloat::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetFloat, Success) == 0x000010, "Member 'JsonFieldData_GetFloat::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetFloat, ReturnValue) == 0x000014, "Member 'JsonFieldData_GetFloat::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetInt
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_GetInt final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetInt) == 0x000008, "Wrong alignment on JsonFieldData_GetInt");
static_assert(sizeof(JsonFieldData_GetInt) == 0x000018, "Wrong size on JsonFieldData_GetInt");
static_assert(offsetof(JsonFieldData_GetInt, Key) == 0x000000, "Member 'JsonFieldData_GetInt::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetInt, Success) == 0x000010, "Member 'JsonFieldData_GetInt::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetInt, ReturnValue) == 0x000014, "Member 'JsonFieldData_GetInt::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetIsNull
// 0x0018 (0x0018 - 0x0000)
struct JsonFieldData_GetIsNull final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          fieldExists;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JsonFieldData_GetIsNull) == 0x000008, "Wrong alignment on JsonFieldData_GetIsNull");
static_assert(sizeof(JsonFieldData_GetIsNull) == 0x000018, "Wrong size on JsonFieldData_GetIsNull");
static_assert(offsetof(JsonFieldData_GetIsNull, Key) == 0x000000, "Member 'JsonFieldData_GetIsNull::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetIsNull, fieldExists) == 0x000010, "Member 'JsonFieldData_GetIsNull::fieldExists' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetIsNull, ReturnValue) == 0x000011, "Member 'JsonFieldData_GetIsNull::ReturnValue' has a wrong offset!");

// Function JSONQuery.JsonFieldData.GetString
// 0x0028 (0x0028 - 0x0000)
struct JsonFieldData_GetString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonFieldData_GetString) == 0x000008, "Wrong alignment on JsonFieldData_GetString");
static_assert(sizeof(JsonFieldData_GetString) == 0x000028, "Wrong size on JsonFieldData_GetString");
static_assert(offsetof(JsonFieldData_GetString, Key) == 0x000000, "Member 'JsonFieldData_GetString::Key' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetString, Success) == 0x000010, "Member 'JsonFieldData_GetString::Success' has a wrong offset!");
static_assert(offsetof(JsonFieldData_GetString, ReturnValue) == 0x000018, "Member 'JsonFieldData_GetString::ReturnValue' has a wrong offset!");

}

