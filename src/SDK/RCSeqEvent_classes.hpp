#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RCSeqEvent

#include "Basic.hpp"

#include "MovieScene_classes.hpp"
#include "RCSeqEvent_structs.hpp"


namespace SDK
{

// Class RCSeqEvent.RCSeqBaseSection
// 0x0008 (0x00F0 - 0x00E8)
class URCSeqBaseSection : public UMovieSceneSection
{
public:
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqBaseSection">();
	}
	static class URCSeqBaseSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqBaseSection>();
	}
};
static_assert(alignof(URCSeqBaseSection) == 0x000008, "Wrong alignment on URCSeqBaseSection");
static_assert(sizeof(URCSeqBaseSection) == 0x0000F0, "Wrong size on URCSeqBaseSection");

// Class RCSeqEvent.RCSeqBaseTrack
// 0x0020 (0x00B0 - 0x0090)
class URCSeqBaseTrack : public UMovieSceneNameableTrack
{
public:
	uint8                                         Pad_90[0x10];                                      // 0x0090(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x00A0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqBaseTrack">();
	}
	static class URCSeqBaseTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqBaseTrack>();
	}
};
static_assert(alignof(URCSeqBaseTrack) == 0x000008, "Wrong alignment on URCSeqBaseTrack");
static_assert(sizeof(URCSeqBaseTrack) == 0x0000B0, "Wrong size on URCSeqBaseTrack");
static_assert(offsetof(URCSeqBaseTrack, Sections) == 0x0000A0, "Member 'URCSeqBaseTrack::Sections' has a wrong offset!");

// Class RCSeqEvent.RCSeqEventCharacterSection
// 0x0000 (0x00E8 - 0x00E8)
class URCSeqEventCharacterSection final : public UMovieSceneSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventCharacterSection">();
	}
	static class URCSeqEventCharacterSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventCharacterSection>();
	}
};
static_assert(alignof(URCSeqEventCharacterSection) == 0x000008, "Wrong alignment on URCSeqEventCharacterSection");
static_assert(sizeof(URCSeqEventCharacterSection) == 0x0000E8, "Wrong size on URCSeqEventCharacterSection");

// Class RCSeqEvent.RCSeqEventCharacterTrack
// 0x0000 (0x00B0 - 0x00B0)
class URCSeqEventCharacterTrack final : public URCSeqBaseTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventCharacterTrack">();
	}
	static class URCSeqEventCharacterTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventCharacterTrack>();
	}
};
static_assert(alignof(URCSeqEventCharacterTrack) == 0x000008, "Wrong alignment on URCSeqEventCharacterTrack");
static_assert(sizeof(URCSeqEventCharacterTrack) == 0x0000B0, "Wrong size on URCSeqEventCharacterTrack");

// Class RCSeqEvent.RCSeqEventEmissiveSection
// 0x0018 (0x0108 - 0x00F0)
class URCSeqEventEmissiveSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqEventEmissiveSectionEmissiveData EmissiveData;                                      // 0x00F0(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventEmissiveSection">();
	}
	static class URCSeqEventEmissiveSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventEmissiveSection>();
	}
};
static_assert(alignof(URCSeqEventEmissiveSection) == 0x000008, "Wrong alignment on URCSeqEventEmissiveSection");
static_assert(sizeof(URCSeqEventEmissiveSection) == 0x000108, "Wrong size on URCSeqEventEmissiveSection");
static_assert(offsetof(URCSeqEventEmissiveSection, EmissiveData) == 0x0000F0, "Member 'URCSeqEventEmissiveSection::EmissiveData' has a wrong offset!");

// Class RCSeqEvent.RCSeqEventFacialColorSection
// 0x0028 (0x0118 - 0x00F0)
class URCSeqEventFacialColorSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqEventFacialColorSectionFacialColorData FacialColorData;                                   // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventFacialColorSection">();
	}
	static class URCSeqEventFacialColorSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventFacialColorSection>();
	}
};
static_assert(alignof(URCSeqEventFacialColorSection) == 0x000008, "Wrong alignment on URCSeqEventFacialColorSection");
static_assert(sizeof(URCSeqEventFacialColorSection) == 0x000118, "Wrong size on URCSeqEventFacialColorSection");
static_assert(offsetof(URCSeqEventFacialColorSection, FacialColorData) == 0x0000F0, "Member 'URCSeqEventFacialColorSection::FacialColorData' has a wrong offset!");

// Class RCSeqEvent.RCSeqEventHairSpecularSection
// 0x0020 (0x0110 - 0x00F0)
class URCSeqEventHairSpecularSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqEventHairSpecularSectionHairSpecularData HairSpecularData;                                  // 0x00F0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventHairSpecularSection">();
	}
	static class URCSeqEventHairSpecularSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventHairSpecularSection>();
	}
};
static_assert(alignof(URCSeqEventHairSpecularSection) == 0x000008, "Wrong alignment on URCSeqEventHairSpecularSection");
static_assert(sizeof(URCSeqEventHairSpecularSection) == 0x000110, "Wrong size on URCSeqEventHairSpecularSection");
static_assert(offsetof(URCSeqEventHairSpecularSection, HairSpecularData) == 0x0000F0, "Member 'URCSeqEventHairSpecularSection::HairSpecularData' has a wrong offset!");

// Class RCSeqEvent.RCSeqEventLightOffsetSection
// 0x0010 (0x0100 - 0x00F0)
class URCSeqEventLightOffsetSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqEventLightOffsetSectionOffsetData LightOffsetData;                                   // 0x00F0(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventLightOffsetSection">();
	}
	static class URCSeqEventLightOffsetSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventLightOffsetSection>();
	}
};
static_assert(alignof(URCSeqEventLightOffsetSection) == 0x000008, "Wrong alignment on URCSeqEventLightOffsetSection");
static_assert(sizeof(URCSeqEventLightOffsetSection) == 0x000100, "Wrong size on URCSeqEventLightOffsetSection");
static_assert(offsetof(URCSeqEventLightOffsetSection, LightOffsetData) == 0x0000F0, "Member 'URCSeqEventLightOffsetSection::LightOffsetData' has a wrong offset!");

// Class RCSeqEvent.RCSeqEventLightSection
// 0x0010 (0x00F8 - 0x00E8)
class URCSeqEventLightSection final : public UMovieSceneSection
{
public:
	struct FRCSeqEventLightSectionRotatorOffsetData RotatorOffsetData;                                 // 0x00E8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventLightSection">();
	}
	static class URCSeqEventLightSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventLightSection>();
	}
};
static_assert(alignof(URCSeqEventLightSection) == 0x000008, "Wrong alignment on URCSeqEventLightSection");
static_assert(sizeof(URCSeqEventLightSection) == 0x0000F8, "Wrong size on URCSeqEventLightSection");
static_assert(offsetof(URCSeqEventLightSection, RotatorOffsetData) == 0x0000E8, "Member 'URCSeqEventLightSection::RotatorOffsetData' has a wrong offset!");

// Class RCSeqEvent.RCSeqEventLightTrack
// 0x0000 (0x00B0 - 0x00B0)
class URCSeqEventLightTrack final : public URCSeqBaseTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventLightTrack">();
	}
	static class URCSeqEventLightTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventLightTrack>();
	}
};
static_assert(alignof(URCSeqEventLightTrack) == 0x000008, "Wrong alignment on URCSeqEventLightTrack");
static_assert(sizeof(URCSeqEventLightTrack) == 0x0000B0, "Wrong size on URCSeqEventLightTrack");

// Class RCSeqEvent.RCSeqEventLoopSection
// 0x0018 (0x0100 - 0x00E8)
class URCSeqEventLoopSection final : public UMovieSceneSection
{
public:
	struct FRCSeqEventLoopSectionCheckLoopData    CheckLoopData;                                     // 0x00E8(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRCSeqEventLoopSectionJumpData         JumpData;                                          // 0x00F8(0x0001)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventLoopSection">();
	}
	static class URCSeqEventLoopSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventLoopSection>();
	}
};
static_assert(alignof(URCSeqEventLoopSection) == 0x000008, "Wrong alignment on URCSeqEventLoopSection");
static_assert(sizeof(URCSeqEventLoopSection) == 0x000100, "Wrong size on URCSeqEventLoopSection");
static_assert(offsetof(URCSeqEventLoopSection, CheckLoopData) == 0x0000E8, "Member 'URCSeqEventLoopSection::CheckLoopData' has a wrong offset!");
static_assert(offsetof(URCSeqEventLoopSection, JumpData) == 0x0000F8, "Member 'URCSeqEventLoopSection::JumpData' has a wrong offset!");

// Class RCSeqEvent.RCSeqEventSection
// 0x0000 (0x00E8 - 0x00E8)
class URCSeqEventSection final : public UMovieSceneSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventSection">();
	}
	static class URCSeqEventSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventSection>();
	}
};
static_assert(alignof(URCSeqEventSection) == 0x000008, "Wrong alignment on URCSeqEventSection");
static_assert(sizeof(URCSeqEventSection) == 0x0000E8, "Wrong size on URCSeqEventSection");

// Class RCSeqEvent.RCSeqEventTrack
// 0x0018 (0x00A8 - 0x0090)
class URCSeqEventTrack final : public UMovieSceneNameableTrack
{
public:
	uint8                                         Pad_90[0x8];                                       // 0x0090(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0098(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqEventTrack">();
	}
	static class URCSeqEventTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqEventTrack>();
	}
};
static_assert(alignof(URCSeqEventTrack) == 0x000008, "Wrong alignment on URCSeqEventTrack");
static_assert(sizeof(URCSeqEventTrack) == 0x0000A8, "Wrong size on URCSeqEventTrack");
static_assert(offsetof(URCSeqEventTrack, Sections) == 0x000098, "Member 'URCSeqEventTrack::Sections' has a wrong offset!");

// Class RCSeqEvent.RCSeqSubtitleOneSubtitleSection
// 0x0050 (0x0140 - 0x00F0)
class URCSeqSubtitleOneSubtitleSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqSubtitleOneSubtitleSectionSubtitleData2 SubtitleData2;                                     // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRCSeqSubtitleOneSubtitleSectionJumpData JumpData;                                          // 0x0118(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqSubtitleOneSubtitleSection">();
	}
	static class URCSeqSubtitleOneSubtitleSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqSubtitleOneSubtitleSection>();
	}
};
static_assert(alignof(URCSeqSubtitleOneSubtitleSection) == 0x000008, "Wrong alignment on URCSeqSubtitleOneSubtitleSection");
static_assert(sizeof(URCSeqSubtitleOneSubtitleSection) == 0x000140, "Wrong size on URCSeqSubtitleOneSubtitleSection");
static_assert(offsetof(URCSeqSubtitleOneSubtitleSection, SubtitleData2) == 0x0000F0, "Member 'URCSeqSubtitleOneSubtitleSection::SubtitleData2' has a wrong offset!");
static_assert(offsetof(URCSeqSubtitleOneSubtitleSection, JumpData) == 0x000118, "Member 'URCSeqSubtitleOneSubtitleSection::JumpData' has a wrong offset!");

// Class RCSeqEvent.RCSeqSubtitleSection
// 0x0000 (0x00F0 - 0x00F0)
class URCSeqSubtitleSection final : public URCSeqBaseSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqSubtitleSection">();
	}
	static class URCSeqSubtitleSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqSubtitleSection>();
	}
};
static_assert(alignof(URCSeqSubtitleSection) == 0x000008, "Wrong alignment on URCSeqSubtitleSection");
static_assert(sizeof(URCSeqSubtitleSection) == 0x0000F0, "Wrong size on URCSeqSubtitleSection");

// Class RCSeqEvent.RCSeqSubtitleSubtitleSection
// 0x0050 (0x0140 - 0x00F0)
class URCSeqSubtitleSubtitleSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqSubtitleSubtitleSectionSubtitleData SubtitleData;                                      // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRCSeqSubtitleSubtitleSectionJumpData  JumpData;                                          // 0x0118(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqSubtitleSubtitleSection">();
	}
	static class URCSeqSubtitleSubtitleSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqSubtitleSubtitleSection>();
	}
};
static_assert(alignof(URCSeqSubtitleSubtitleSection) == 0x000008, "Wrong alignment on URCSeqSubtitleSubtitleSection");
static_assert(sizeof(URCSeqSubtitleSubtitleSection) == 0x000140, "Wrong size on URCSeqSubtitleSubtitleSection");
static_assert(offsetof(URCSeqSubtitleSubtitleSection, SubtitleData) == 0x0000F0, "Member 'URCSeqSubtitleSubtitleSection::SubtitleData' has a wrong offset!");
static_assert(offsetof(URCSeqSubtitleSubtitleSection, JumpData) == 0x000118, "Member 'URCSeqSubtitleSubtitleSection::JumpData' has a wrong offset!");

// Class RCSeqEvent.RCSeqSubtitleTrack
// 0x0000 (0x00B0 - 0x00B0)
class URCSeqSubtitleTrack final : public URCSeqBaseTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqSubtitleTrack">();
	}
	static class URCSeqSubtitleTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqSubtitleTrack>();
	}
};
static_assert(alignof(URCSeqSubtitleTrack) == 0x000008, "Wrong alignment on URCSeqSubtitleTrack");
static_assert(sizeof(URCSeqSubtitleTrack) == 0x0000B0, "Wrong size on URCSeqSubtitleTrack");

// Class RCSeqEvent.RCSeqSubtitleWaitSubtitleSection
// 0x0088 (0x0178 - 0x00F0)
class URCSeqSubtitleWaitSubtitleSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqSubtitleWaitSubtitleChannel      WaitSubtitleChannel;                               // 0x00F0(0x0088)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqSubtitleWaitSubtitleSection">();
	}
	static class URCSeqSubtitleWaitSubtitleSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqSubtitleWaitSubtitleSection>();
	}
};
static_assert(alignof(URCSeqSubtitleWaitSubtitleSection) == 0x000008, "Wrong alignment on URCSeqSubtitleWaitSubtitleSection");
static_assert(sizeof(URCSeqSubtitleWaitSubtitleSection) == 0x000178, "Wrong size on URCSeqSubtitleWaitSubtitleSection");
static_assert(offsetof(URCSeqSubtitleWaitSubtitleSection, WaitSubtitleChannel) == 0x0000F0, "Member 'URCSeqSubtitleWaitSubtitleSection::WaitSubtitleChannel' has a wrong offset!");

// Class RCSeqEvent.RCSeqTalkOneTalkSection
// 0x0060 (0x0150 - 0x00F0)
class URCSeqTalkOneTalkSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqTalkOneTalkSectionTalkData2      TalkData2;                                         // 0x00F0(0x0030)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bForceAutoPlay;                                    // 0x0120(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRCSeqTalkOneTalkSectionJumpData       JumpData;                                          // 0x0128(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqTalkOneTalkSection">();
	}
	static class URCSeqTalkOneTalkSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqTalkOneTalkSection>();
	}
};
static_assert(alignof(URCSeqTalkOneTalkSection) == 0x000008, "Wrong alignment on URCSeqTalkOneTalkSection");
static_assert(sizeof(URCSeqTalkOneTalkSection) == 0x000150, "Wrong size on URCSeqTalkOneTalkSection");
static_assert(offsetof(URCSeqTalkOneTalkSection, TalkData2) == 0x0000F0, "Member 'URCSeqTalkOneTalkSection::TalkData2' has a wrong offset!");
static_assert(offsetof(URCSeqTalkOneTalkSection, bForceAutoPlay) == 0x000120, "Member 'URCSeqTalkOneTalkSection::bForceAutoPlay' has a wrong offset!");
static_assert(offsetof(URCSeqTalkOneTalkSection, JumpData) == 0x000128, "Member 'URCSeqTalkOneTalkSection::JumpData' has a wrong offset!");

// Class RCSeqEvent.RCSeqTalkSection
// 0x0000 (0x00F0 - 0x00F0)
class URCSeqTalkSection final : public URCSeqBaseSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqTalkSection">();
	}
	static class URCSeqTalkSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqTalkSection>();
	}
};
static_assert(alignof(URCSeqTalkSection) == 0x000008, "Wrong alignment on URCSeqTalkSection");
static_assert(sizeof(URCSeqTalkSection) == 0x0000F0, "Wrong size on URCSeqTalkSection");

// Class RCSeqEvent.RCSeqTalkTalkSection
// 0x0048 (0x0138 - 0x00F0)
class URCSeqTalkTalkSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqTalkTalkSectionTalkData          TalkData;                                          // 0x00F0(0x0020)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRCSeqTalkTalkSectionJumpData          JumpData;                                          // 0x0110(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqTalkTalkSection">();
	}
	static class URCSeqTalkTalkSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqTalkTalkSection>();
	}
};
static_assert(alignof(URCSeqTalkTalkSection) == 0x000008, "Wrong alignment on URCSeqTalkTalkSection");
static_assert(sizeof(URCSeqTalkTalkSection) == 0x000138, "Wrong size on URCSeqTalkTalkSection");
static_assert(offsetof(URCSeqTalkTalkSection, TalkData) == 0x0000F0, "Member 'URCSeqTalkTalkSection::TalkData' has a wrong offset!");
static_assert(offsetof(URCSeqTalkTalkSection, JumpData) == 0x000110, "Member 'URCSeqTalkTalkSection::JumpData' has a wrong offset!");

// Class RCSeqEvent.RCSeqTalkTrack
// 0x0000 (0x00B0 - 0x00B0)
class URCSeqTalkTrack final : public URCSeqBaseTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqTalkTrack">();
	}
	static class URCSeqTalkTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqTalkTrack>();
	}
};
static_assert(alignof(URCSeqTalkTrack) == 0x000008, "Wrong alignment on URCSeqTalkTrack");
static_assert(sizeof(URCSeqTalkTrack) == 0x0000B0, "Wrong size on URCSeqTalkTrack");

// Class RCSeqEvent.RCSeqTalkWaitTalkSection
// 0x0088 (0x0178 - 0x00F0)
class URCSeqTalkWaitTalkSection final : public URCSeqBaseSection
{
public:
	struct FRCSeqTalkWaitTalkChannel              WaitTalkChannel;                                   // 0x00F0(0x0088)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RCSeqTalkWaitTalkSection">();
	}
	static class URCSeqTalkWaitTalkSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URCSeqTalkWaitTalkSection>();
	}
};
static_assert(alignof(URCSeqTalkWaitTalkSection) == 0x000008, "Wrong alignment on URCSeqTalkWaitTalkSection");
static_assert(sizeof(URCSeqTalkWaitTalkSection) == 0x000178, "Wrong size on URCSeqTalkWaitTalkSection");
static_assert(offsetof(URCSeqTalkWaitTalkSection, WaitTalkChannel) == 0x0000F0, "Member 'URCSeqTalkWaitTalkSection::WaitTalkChannel' has a wrong offset!");

}

